

Microchip Technology PIC PRO Macro Assembler V1.42 build -159332390 
                                                                                               Mon Sep 18 23:25:37 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	idataBANK6,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    20                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    23                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	swtext1,local,class=CONST,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	swtext2,local,class=CONST,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext3,local,class=CONST,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text46,local,class=CODE,merge=1,delta=2
    52                           	psect	text47,local,class=CODE,merge=1,delta=2
    53                           	psect	swtext4,local,class=CONST,delta=2
    54                           	psect	text50,local,class=CODE,merge=1,delta=2
    55                           	psect	text52,local,class=CODE,merge=1,delta=2
    56                           	psect	text53,local,class=CODE,merge=1,delta=2
    57                           	psect	swtext5,local,class=CONST,delta=2
    58                           	psect	text56,local,class=CODE,merge=1,delta=2
    59                           	psect	swtext6,local,class=CONST,delta=2
    60                           	psect	text57,local,class=CODE,merge=1,delta=2
    61                           	psect	text60,local,class=CODE,merge=1,delta=2
    62                           	psect	pa_nodes0,global,class=CODE,delta=2
    63                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    64                           	psect	maintext_split_2,global,class=CODE,merge=1,split=1,delta=2
    65                           	psect	maintext_split_3,global,class=CODE,merge=1,split=1,delta=2
    66                           	dabs	1,0x20,48,_BDT
    67                           	dabs	1,0x50,8,_SetupPkt
    68                           	dabs	1,0xA0,64,_usb_tx_buf_0
    69                           	dabs	1,0x120,64,_usb_rx_buf_0
    70                           	dabs	1,0x1A0,64,_usb_tx_buf_1
    71                           	dabs	1,0x220,64,_usb_rx_buf_1
    72                           	dabs	1,0x60,16,_CtrlTrfData
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 1.42
    76                           ; Generated 13/04/2017 GMT
    77                           ; 
    78                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F1455 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000E                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  008C                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  010C                     	;# 
   151  010E                     	;# 
   152  0111                     	;# 
   153  0112                     	;# 
   154  0113                     	;# 
   155  0114                     	;# 
   156  0115                     	;# 
   157  0116                     	;# 
   158  0117                     	;# 
   159  0118                     	;# 
   160  0119                     	;# 
   161  011D                     	;# 
   162  018C                     	;# 
   163  018E                     	;# 
   164  0191                     	;# 
   165  0191                     	;# 
   166  0192                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0199                     	;# 
   174  019A                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  019D                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  020C                     	;# 
   182  0211                     	;# 
   183  0211                     	;# 
   184  0212                     	;# 
   185  0212                     	;# 
   186  0213                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0216                     	;# 
   194  0216                     	;# 
   195  0217                     	;# 
   196  0217                     	;# 
   197  0391                     	;# 
   198  0392                     	;# 
   199  0393                     	;# 
   200  039A                     	;# 
   201  039B                     	;# 
   202  0611                     	;# 
   203  0612                     	;# 
   204  0613                     	;# 
   205  0613                     	;# 
   206  0614                     	;# 
   207  0615                     	;# 
   208  0616                     	;# 
   209  0616                     	;# 
   210  0691                     	;# 
   211  0692                     	;# 
   212  0693                     	;# 
   213  0694                     	;# 
   214  0695                     	;# 
   215  0E8E                     	;# 
   216  0E8F                     	;# 
   217  0E90                     	;# 
   218  0E91                     	;# 
   219  0E92                     	;# 
   220  0E93                     	;# 
   221  0E94                     	;# 
   222  0E94                     	;# 
   223  0E95                     	;# 
   224  0E96                     	;# 
   225  0E97                     	;# 
   226  0E98                     	;# 
   227  0E99                     	;# 
   228  0E9A                     	;# 
   229  0E9B                     	;# 
   230  0E9C                     	;# 
   231  0E9D                     	;# 
   232  0E9E                     	;# 
   233  0E9F                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEB                     	;# 
   242  0FED                     	;# 
   243  0FEE                     	;# 
   244  0FEF                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000E                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  008C                     	;# 
   271  008E                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  010C                     	;# 
   287  010E                     	;# 
   288  0111                     	;# 
   289  0112                     	;# 
   290  0113                     	;# 
   291  0114                     	;# 
   292  0115                     	;# 
   293  0116                     	;# 
   294  0117                     	;# 
   295  0118                     	;# 
   296  0119                     	;# 
   297  011D                     	;# 
   298  018C                     	;# 
   299  018E                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0197                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  0211                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0212                     	;# 
   322  0213                     	;# 
   323  0213                     	;# 
   324  0214                     	;# 
   325  0214                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0216                     	;# 
   330  0216                     	;# 
   331  0217                     	;# 
   332  0217                     	;# 
   333  0391                     	;# 
   334  0392                     	;# 
   335  0393                     	;# 
   336  039A                     	;# 
   337  039B                     	;# 
   338  0611                     	;# 
   339  0612                     	;# 
   340  0613                     	;# 
   341  0613                     	;# 
   342  0614                     	;# 
   343  0615                     	;# 
   344  0616                     	;# 
   345  0616                     	;# 
   346  0691                     	;# 
   347  0692                     	;# 
   348  0693                     	;# 
   349  0694                     	;# 
   350  0695                     	;# 
   351  0E8E                     	;# 
   352  0E8F                     	;# 
   353  0E90                     	;# 
   354  0E91                     	;# 
   355  0E92                     	;# 
   356  0E93                     	;# 
   357  0E94                     	;# 
   358  0E94                     	;# 
   359  0E95                     	;# 
   360  0E96                     	;# 
   361  0E97                     	;# 
   362  0E98                     	;# 
   363  0E99                     	;# 
   364  0E9A                     	;# 
   365  0E9B                     	;# 
   366  0E9C                     	;# 
   367  0E9D                     	;# 
   368  0E9E                     	;# 
   369  0E9F                     	;# 
   370  0FE4                     	;# 
   371  0FE5                     	;# 
   372  0FE6                     	;# 
   373  0FE7                     	;# 
   374  0FE8                     	;# 
   375  0FE9                     	;# 
   376  0FEA                     	;# 
   377  0FEB                     	;# 
   378  0FED                     	;# 
   379  0FEE                     	;# 
   380  0FEF                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000E                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  008C                     	;# 
   407  008E                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  009F                     	;# 
   422  010C                     	;# 
   423  010E                     	;# 
   424  0111                     	;# 
   425  0112                     	;# 
   426  0113                     	;# 
   427  0114                     	;# 
   428  0115                     	;# 
   429  0116                     	;# 
   430  0117                     	;# 
   431  0118                     	;# 
   432  0119                     	;# 
   433  011D                     	;# 
   434  018C                     	;# 
   435  018E                     	;# 
   436  0191                     	;# 
   437  0191                     	;# 
   438  0192                     	;# 
   439  0193                     	;# 
   440  0193                     	;# 
   441  0194                     	;# 
   442  0195                     	;# 
   443  0196                     	;# 
   444  0197                     	;# 
   445  0199                     	;# 
   446  019A                     	;# 
   447  019B                     	;# 
   448  019B                     	;# 
   449  019C                     	;# 
   450  019D                     	;# 
   451  019E                     	;# 
   452  019F                     	;# 
   453  020C                     	;# 
   454  0211                     	;# 
   455  0211                     	;# 
   456  0212                     	;# 
   457  0212                     	;# 
   458  0213                     	;# 
   459  0213                     	;# 
   460  0214                     	;# 
   461  0214                     	;# 
   462  0215                     	;# 
   463  0215                     	;# 
   464  0215                     	;# 
   465  0216                     	;# 
   466  0216                     	;# 
   467  0217                     	;# 
   468  0217                     	;# 
   469  0391                     	;# 
   470  0392                     	;# 
   471  0393                     	;# 
   472  039A                     	;# 
   473  039B                     	;# 
   474  0611                     	;# 
   475  0612                     	;# 
   476  0613                     	;# 
   477  0613                     	;# 
   478  0614                     	;# 
   479  0615                     	;# 
   480  0616                     	;# 
   481  0616                     	;# 
   482  0691                     	;# 
   483  0692                     	;# 
   484  0693                     	;# 
   485  0694                     	;# 
   486  0695                     	;# 
   487  0E8E                     	;# 
   488  0E8F                     	;# 
   489  0E90                     	;# 
   490  0E91                     	;# 
   491  0E92                     	;# 
   492  0E93                     	;# 
   493  0E94                     	;# 
   494  0E94                     	;# 
   495  0E95                     	;# 
   496  0E96                     	;# 
   497  0E97                     	;# 
   498  0E98                     	;# 
   499  0E99                     	;# 
   500  0E9A                     	;# 
   501  0E9B                     	;# 
   502  0E9C                     	;# 
   503  0E9D                     	;# 
   504  0E9E                     	;# 
   505  0E9F                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000E                     	;# 
   531  0011                     	;# 
   532  0012                     	;# 
   533  0015                     	;# 
   534  0016                     	;# 
   535  0016                     	;# 
   536  0017                     	;# 
   537  0018                     	;# 
   538  0019                     	;# 
   539  001A                     	;# 
   540  001B                     	;# 
   541  001C                     	;# 
   542  008C                     	;# 
   543  008E                     	;# 
   544  0091                     	;# 
   545  0092                     	;# 
   546  0095                     	;# 
   547  0096                     	;# 
   548  0097                     	;# 
   549  0098                     	;# 
   550  0099                     	;# 
   551  009A                     	;# 
   552  009B                     	;# 
   553  009B                     	;# 
   554  009C                     	;# 
   555  009D                     	;# 
   556  009E                     	;# 
   557  009F                     	;# 
   558  010C                     	;# 
   559  010E                     	;# 
   560  0111                     	;# 
   561  0112                     	;# 
   562  0113                     	;# 
   563  0114                     	;# 
   564  0115                     	;# 
   565  0116                     	;# 
   566  0117                     	;# 
   567  0118                     	;# 
   568  0119                     	;# 
   569  011D                     	;# 
   570  018C                     	;# 
   571  018E                     	;# 
   572  0191                     	;# 
   573  0191                     	;# 
   574  0192                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0194                     	;# 
   578  0195                     	;# 
   579  0196                     	;# 
   580  0197                     	;# 
   581  0199                     	;# 
   582  019A                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019C                     	;# 
   586  019D                     	;# 
   587  019E                     	;# 
   588  019F                     	;# 
   589  020C                     	;# 
   590  0211                     	;# 
   591  0211                     	;# 
   592  0212                     	;# 
   593  0212                     	;# 
   594  0213                     	;# 
   595  0213                     	;# 
   596  0214                     	;# 
   597  0214                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0216                     	;# 
   602  0216                     	;# 
   603  0217                     	;# 
   604  0217                     	;# 
   605  0391                     	;# 
   606  0392                     	;# 
   607  0393                     	;# 
   608  039A                     	;# 
   609  039B                     	;# 
   610  0611                     	;# 
   611  0612                     	;# 
   612  0613                     	;# 
   613  0613                     	;# 
   614  0614                     	;# 
   615  0615                     	;# 
   616  0616                     	;# 
   617  0616                     	;# 
   618  0691                     	;# 
   619  0692                     	;# 
   620  0693                     	;# 
   621  0694                     	;# 
   622  0695                     	;# 
   623  0E8E                     	;# 
   624  0E8F                     	;# 
   625  0E90                     	;# 
   626  0E91                     	;# 
   627  0E92                     	;# 
   628  0E93                     	;# 
   629  0E94                     	;# 
   630  0E94                     	;# 
   631  0E95                     	;# 
   632  0E96                     	;# 
   633  0E97                     	;# 
   634  0E98                     	;# 
   635  0E99                     	;# 
   636  0E9A                     	;# 
   637  0E9B                     	;# 
   638  0E9C                     	;# 
   639  0E9D                     	;# 
   640  0E9E                     	;# 
   641  0E9F                     	;# 
   642  0FE4                     	;# 
   643  0FE5                     	;# 
   644  0FE6                     	;# 
   645  0FE7                     	;# 
   646  0FE8                     	;# 
   647  0FE9                     	;# 
   648  0FEA                     	;# 
   649  0FEB                     	;# 
   650  0FED                     	;# 
   651  0FEE                     	;# 
   652  0FEF                     	;# 
   653  0000                     	;# 
   654  0001                     	;# 
   655  0002                     	;# 
   656  0003                     	;# 
   657  0004                     	;# 
   658  0005                     	;# 
   659  0006                     	;# 
   660  0007                     	;# 
   661  0008                     	;# 
   662  0009                     	;# 
   663  000A                     	;# 
   664  000B                     	;# 
   665  000C                     	;# 
   666  000E                     	;# 
   667  0011                     	;# 
   668  0012                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0016                     	;# 
   672  0017                     	;# 
   673  0018                     	;# 
   674  0019                     	;# 
   675  001A                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  008C                     	;# 
   679  008E                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  010C                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  011D                     	;# 
   706  018C                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0194                     	;# 
   714  0195                     	;# 
   715  0196                     	;# 
   716  0197                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0214                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0391                     	;# 
   742  0392                     	;# 
   743  0393                     	;# 
   744  039A                     	;# 
   745  039B                     	;# 
   746  0611                     	;# 
   747  0612                     	;# 
   748  0613                     	;# 
   749  0613                     	;# 
   750  0614                     	;# 
   751  0615                     	;# 
   752  0616                     	;# 
   753  0616                     	;# 
   754  0691                     	;# 
   755  0692                     	;# 
   756  0693                     	;# 
   757  0694                     	;# 
   758  0695                     	;# 
   759  0E8E                     	;# 
   760  0E8F                     	;# 
   761  0E90                     	;# 
   762  0E91                     	;# 
   763  0E92                     	;# 
   764  0E93                     	;# 
   765  0E94                     	;# 
   766  0E94                     	;# 
   767  0E95                     	;# 
   768  0E96                     	;# 
   769  0E97                     	;# 
   770  0E98                     	;# 
   771  0E99                     	;# 
   772  0E9A                     	;# 
   773  0E9B                     	;# 
   774  0E9C                     	;# 
   775  0E9D                     	;# 
   776  0E9E                     	;# 
   777  0E9F                     	;# 
   778  0FE4                     	;# 
   779  0FE5                     	;# 
   780  0FE6                     	;# 
   781  0FE7                     	;# 
   782  0FE8                     	;# 
   783  0FE9                     	;# 
   784  0FEA                     	;# 
   785  0FEB                     	;# 
   786  0FED                     	;# 
   787  0FEE                     	;# 
   788  0FEF                     	;# 
   789  0000                     	;# 
   790  0001                     	;# 
   791  0002                     	;# 
   792  0003                     	;# 
   793  0004                     	;# 
   794  0005                     	;# 
   795  0006                     	;# 
   796  0007                     	;# 
   797  0008                     	;# 
   798  0009                     	;# 
   799  000A                     	;# 
   800  000B                     	;# 
   801  000C                     	;# 
   802  000E                     	;# 
   803  0011                     	;# 
   804  0012                     	;# 
   805  0015                     	;# 
   806  0016                     	;# 
   807  0016                     	;# 
   808  0017                     	;# 
   809  0018                     	;# 
   810  0019                     	;# 
   811  001A                     	;# 
   812  001B                     	;# 
   813  001C                     	;# 
   814  008C                     	;# 
   815  008E                     	;# 
   816  0091                     	;# 
   817  0092                     	;# 
   818  0095                     	;# 
   819  0096                     	;# 
   820  0097                     	;# 
   821  0098                     	;# 
   822  0099                     	;# 
   823  009A                     	;# 
   824  009B                     	;# 
   825  009B                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009E                     	;# 
   829  009F                     	;# 
   830  010C                     	;# 
   831  010E                     	;# 
   832  0111                     	;# 
   833  0112                     	;# 
   834  0113                     	;# 
   835  0114                     	;# 
   836  0115                     	;# 
   837  0116                     	;# 
   838  0117                     	;# 
   839  0118                     	;# 
   840  0119                     	;# 
   841  011D                     	;# 
   842  018C                     	;# 
   843  018E                     	;# 
   844  0191                     	;# 
   845  0191                     	;# 
   846  0192                     	;# 
   847  0193                     	;# 
   848  0193                     	;# 
   849  0194                     	;# 
   850  0195                     	;# 
   851  0196                     	;# 
   852  0197                     	;# 
   853  0199                     	;# 
   854  019A                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019C                     	;# 
   858  019D                     	;# 
   859  019E                     	;# 
   860  019F                     	;# 
   861  020C                     	;# 
   862  0211                     	;# 
   863  0211                     	;# 
   864  0212                     	;# 
   865  0212                     	;# 
   866  0213                     	;# 
   867  0213                     	;# 
   868  0214                     	;# 
   869  0214                     	;# 
   870  0215                     	;# 
   871  0215                     	;# 
   872  0215                     	;# 
   873  0216                     	;# 
   874  0216                     	;# 
   875  0217                     	;# 
   876  0217                     	;# 
   877  0391                     	;# 
   878  0392                     	;# 
   879  0393                     	;# 
   880  039A                     	;# 
   881  039B                     	;# 
   882  0611                     	;# 
   883  0612                     	;# 
   884  0613                     	;# 
   885  0613                     	;# 
   886  0614                     	;# 
   887  0615                     	;# 
   888  0616                     	;# 
   889  0616                     	;# 
   890  0691                     	;# 
   891  0692                     	;# 
   892  0693                     	;# 
   893  0694                     	;# 
   894  0695                     	;# 
   895  0E8E                     	;# 
   896  0E8F                     	;# 
   897  0E90                     	;# 
   898  0E91                     	;# 
   899  0E92                     	;# 
   900  0E93                     	;# 
   901  0E94                     	;# 
   902  0E94                     	;# 
   903  0E95                     	;# 
   904  0E96                     	;# 
   905  0E97                     	;# 
   906  0E98                     	;# 
   907  0E99                     	;# 
   908  0E9A                     	;# 
   909  0E9B                     	;# 
   910  0E9C                     	;# 
   911  0E9D                     	;# 
   912  0E9E                     	;# 
   913  0E9F                     	;# 
   914  0FE4                     	;# 
   915  0FE5                     	;# 
   916  0FE6                     	;# 
   917  0FE7                     	;# 
   918  0FE8                     	;# 
   919  0FE9                     	;# 
   920  0FEA                     	;# 
   921  0FEB                     	;# 
   922  0FED                     	;# 
   923  0FEE                     	;# 
   924  0FEF                     	;# 
   925  0000                     	;# 
   926  0001                     	;# 
   927  0002                     	;# 
   928  0003                     	;# 
   929  0004                     	;# 
   930  0005                     	;# 
   931  0006                     	;# 
   932  0007                     	;# 
   933  0008                     	;# 
   934  0009                     	;# 
   935  000A                     	;# 
   936  000B                     	;# 
   937  000C                     	;# 
   938  000E                     	;# 
   939  0011                     	;# 
   940  0012                     	;# 
   941  0015                     	;# 
   942  0016                     	;# 
   943  0016                     	;# 
   944  0017                     	;# 
   945  0018                     	;# 
   946  0019                     	;# 
   947  001A                     	;# 
   948  001B                     	;# 
   949  001C                     	;# 
   950  008C                     	;# 
   951  008E                     	;# 
   952  0091                     	;# 
   953  0092                     	;# 
   954  0095                     	;# 
   955  0096                     	;# 
   956  0097                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009A                     	;# 
   960  009B                     	;# 
   961  009B                     	;# 
   962  009C                     	;# 
   963  009D                     	;# 
   964  009E                     	;# 
   965  009F                     	;# 
   966  010C                     	;# 
   967  010E                     	;# 
   968  0111                     	;# 
   969  0112                     	;# 
   970  0113                     	;# 
   971  0114                     	;# 
   972  0115                     	;# 
   973  0116                     	;# 
   974  0117                     	;# 
   975  0118                     	;# 
   976  0119                     	;# 
   977  011D                     	;# 
   978  018C                     	;# 
   979  018E                     	;# 
   980  0191                     	;# 
   981  0191                     	;# 
   982  0192                     	;# 
   983  0193                     	;# 
   984  0193                     	;# 
   985  0194                     	;# 
   986  0195                     	;# 
   987  0196                     	;# 
   988  0197                     	;# 
   989  0199                     	;# 
   990  019A                     	;# 
   991  019B                     	;# 
   992  019B                     	;# 
   993  019C                     	;# 
   994  019D                     	;# 
   995  019E                     	;# 
   996  019F                     	;# 
   997  020C                     	;# 
   998  0211                     	;# 
   999  0211                     	;# 
  1000  0212                     	;# 
  1001  0212                     	;# 
  1002  0213                     	;# 
  1003  0213                     	;# 
  1004  0214                     	;# 
  1005  0214                     	;# 
  1006  0215                     	;# 
  1007  0215                     	;# 
  1008  0215                     	;# 
  1009  0216                     	;# 
  1010  0216                     	;# 
  1011  0217                     	;# 
  1012  0217                     	;# 
  1013  0391                     	;# 
  1014  0392                     	;# 
  1015  0393                     	;# 
  1016  039A                     	;# 
  1017  039B                     	;# 
  1018  0611                     	;# 
  1019  0612                     	;# 
  1020  0613                     	;# 
  1021  0613                     	;# 
  1022  0614                     	;# 
  1023  0615                     	;# 
  1024  0616                     	;# 
  1025  0616                     	;# 
  1026  0691                     	;# 
  1027  0692                     	;# 
  1028  0693                     	;# 
  1029  0694                     	;# 
  1030  0695                     	;# 
  1031  0E8E                     	;# 
  1032  0E8F                     	;# 
  1033  0E90                     	;# 
  1034  0E91                     	;# 
  1035  0E92                     	;# 
  1036  0E93                     	;# 
  1037  0E94                     	;# 
  1038  0E94                     	;# 
  1039  0E95                     	;# 
  1040  0E96                     	;# 
  1041  0E97                     	;# 
  1042  0E98                     	;# 
  1043  0E99                     	;# 
  1044  0E9A                     	;# 
  1045  0E9B                     	;# 
  1046  0E9C                     	;# 
  1047  0E9D                     	;# 
  1048  0E9E                     	;# 
  1049  0E9F                     	;# 
  1050  0FE4                     	;# 
  1051  0FE5                     	;# 
  1052  0FE6                     	;# 
  1053  0FE7                     	;# 
  1054  0FE8                     	;# 
  1055  0FE9                     	;# 
  1056  0FEA                     	;# 
  1057  0FEB                     	;# 
  1058  0FED                     	;# 
  1059  0FEE                     	;# 
  1060  0FEF                     	;# 
  1061  0000                     	;# 
  1062  0001                     	;# 
  1063  0002                     	;# 
  1064  0003                     	;# 
  1065  0004                     	;# 
  1066  0005                     	;# 
  1067  0006                     	;# 
  1068  0007                     	;# 
  1069  0008                     	;# 
  1070  0009                     	;# 
  1071  000A                     	;# 
  1072  000B                     	;# 
  1073  000C                     	;# 
  1074  000E                     	;# 
  1075  0011                     	;# 
  1076  0012                     	;# 
  1077  0015                     	;# 
  1078  0016                     	;# 
  1079  0016                     	;# 
  1080  0017                     	;# 
  1081  0018                     	;# 
  1082  0019                     	;# 
  1083  001A                     	;# 
  1084  001B                     	;# 
  1085  001C                     	;# 
  1086  008C                     	;# 
  1087  008E                     	;# 
  1088  0091                     	;# 
  1089  0092                     	;# 
  1090  0095                     	;# 
  1091  0096                     	;# 
  1092  0097                     	;# 
  1093  0098                     	;# 
  1094  0099                     	;# 
  1095  009A                     	;# 
  1096  009B                     	;# 
  1097  009B                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009E                     	;# 
  1101  009F                     	;# 
  1102  010C                     	;# 
  1103  010E                     	;# 
  1104  0111                     	;# 
  1105  0112                     	;# 
  1106  0113                     	;# 
  1107  0114                     	;# 
  1108  0115                     	;# 
  1109  0116                     	;# 
  1110  0117                     	;# 
  1111  0118                     	;# 
  1112  0119                     	;# 
  1113  011D                     	;# 
  1114  018C                     	;# 
  1115  018E                     	;# 
  1116  0191                     	;# 
  1117  0191                     	;# 
  1118  0192                     	;# 
  1119  0193                     	;# 
  1120  0193                     	;# 
  1121  0194                     	;# 
  1122  0195                     	;# 
  1123  0196                     	;# 
  1124  0197                     	;# 
  1125  0199                     	;# 
  1126  019A                     	;# 
  1127  019B                     	;# 
  1128  019B                     	;# 
  1129  019C                     	;# 
  1130  019D                     	;# 
  1131  019E                     	;# 
  1132  019F                     	;# 
  1133  020C                     	;# 
  1134  0211                     	;# 
  1135  0211                     	;# 
  1136  0212                     	;# 
  1137  0212                     	;# 
  1138  0213                     	;# 
  1139  0213                     	;# 
  1140  0214                     	;# 
  1141  0214                     	;# 
  1142  0215                     	;# 
  1143  0215                     	;# 
  1144  0215                     	;# 
  1145  0216                     	;# 
  1146  0216                     	;# 
  1147  0217                     	;# 
  1148  0217                     	;# 
  1149  0391                     	;# 
  1150  0392                     	;# 
  1151  0393                     	;# 
  1152  039A                     	;# 
  1153  039B                     	;# 
  1154  0611                     	;# 
  1155  0612                     	;# 
  1156  0613                     	;# 
  1157  0613                     	;# 
  1158  0614                     	;# 
  1159  0615                     	;# 
  1160  0616                     	;# 
  1161  0616                     	;# 
  1162  0691                     	;# 
  1163  0692                     	;# 
  1164  0693                     	;# 
  1165  0694                     	;# 
  1166  0695                     	;# 
  1167  0E8E                     	;# 
  1168  0E8F                     	;# 
  1169  0E90                     	;# 
  1170  0E91                     	;# 
  1171  0E92                     	;# 
  1172  0E93                     	;# 
  1173  0E94                     	;# 
  1174  0E94                     	;# 
  1175  0E95                     	;# 
  1176  0E96                     	;# 
  1177  0E97                     	;# 
  1178  0E98                     	;# 
  1179  0E99                     	;# 
  1180  0E9A                     	;# 
  1181  0E9B                     	;# 
  1182  0E9C                     	;# 
  1183  0E9D                     	;# 
  1184  0E9E                     	;# 
  1185  0E9F                     	;# 
  1186  0FE4                     	;# 
  1187  0FE5                     	;# 
  1188  0FE6                     	;# 
  1189  0FE7                     	;# 
  1190  0FE8                     	;# 
  1191  0FE9                     	;# 
  1192  0FEA                     	;# 
  1193  0FEB                     	;# 
  1194  0FED                     	;# 
  1195  0FEE                     	;# 
  1196  0FEF                     	;# 
  1197                           
  1198                           	psect	idataBANK4
  1199  0000                     __pidataBANK4:	
  1200                           
  1201                           	psect	idataBANK5
  1202  0000                     __pidataBANK5:	
  1203                           
  1204                           	psect	idataBANK6
  1205  0000                     __pidataBANK6:	
  1206                           
  1207                           	psect	stringtext1
  1208  1909                     __pstringtext1:	
  1209  1909                     _USB_SD_Ptr:	
  1210  1909  340F               	retlw	low (_sd000| (0+32768))
  1211  190A  3499               	retlw	high (_sd000| (0+32768))
  1212  190B  34E5               	retlw	low (_sd001| (0+32768))
  1213  190C  3498               	retlw	high (_sd001| (0+32768))
  1214  190D  34CF               	retlw	low (_sd002| (0+32768))
  1215  190E  3498               	retlw	high (_sd002| (0+32768))
  1216  190F                     __end_of_USB_SD_Ptr:	
  1217                           
  1218                           	psect	stringtext2
  1219  1913                     __pstringtext2:	
  1220  1913                     _USB_CD_Ptr:	
  1221  1913  348C               	retlw	low (_configDescriptor1| (0+32768))
  1222  1914  3498               	retlw	high (_configDescriptor1| (0+32768))
  1223  1915                     __end_of_USB_CD_Ptr:	
  1224                           
  1225                           	psect	stringtext3
  1226  188C                     __pstringtext3:	
  1227  188C                     _configDescriptor1:	
  1228  188C  3409               	retlw	9
  1229  188D  3402               	retlw	2
  1230  188E  3443               	retlw	67
  1231  188F  3400               	retlw	0
  1232  1890  3402               	retlw	2
  1233  1891  3401               	retlw	1
  1234  1892  3400               	retlw	0
  1235  1893  34C0               	retlw	192
  1236  1894  3432               	retlw	50
  1237  1895  3409               	retlw	9
  1238  1896  3404               	retlw	4
  1239  1897  3400               	retlw	0
  1240  1898  3400               	retlw	0
  1241  1899  3401               	retlw	1
  1242  189A  3402               	retlw	2
  1243  189B  3402               	retlw	2
  1244  189C  3401               	retlw	1
  1245  189D  3400               	retlw	0
  1246  189E  3405               	retlw	5
  1247  189F  3424               	retlw	36
  1248  18A0  3400               	retlw	0
  1249  18A1  3410               	retlw	16
  1250  18A2  3401               	retlw	1
  1251  18A3  3404               	retlw	4
  1252  18A4  3424               	retlw	36
  1253  18A5  3402               	retlw	2
  1254  18A6  3402               	retlw	2
  1255  18A7  3405               	retlw	5
  1256  18A8  3424               	retlw	36
  1257  18A9  3406               	retlw	6
  1258  18AA  3400               	retlw	0
  1259  18AB  3401               	retlw	1
  1260  18AC  3405               	retlw	5
  1261  18AD  3424               	retlw	36
  1262  18AE  3401               	retlw	1
  1263  18AF  3400               	retlw	0
  1264  18B0  3401               	retlw	1
  1265  18B1  3407               	retlw	7
  1266  18B2  3405               	retlw	5
  1267  18B3  3481               	retlw	129
  1268  18B4  3403               	retlw	3
  1269  18B5  3408               	retlw	8
  1270  18B6  3400               	retlw	0
  1271  18B7  3402               	retlw	2
  1272  18B8  3409               	retlw	9
  1273  18B9  3404               	retlw	4
  1274  18BA  3401               	retlw	1
  1275  18BB  3400               	retlw	0
  1276  18BC  3402               	retlw	2
  1277  18BD  340A               	retlw	10
  1278  18BE  3400               	retlw	0
  1279  18BF  3400               	retlw	0
  1280  18C0  3400               	retlw	0
  1281  18C1  3407               	retlw	7
  1282  18C2  3405               	retlw	5
  1283  18C3  3402               	retlw	2
  1284  18C4  3402               	retlw	2
  1285  18C5  3440               	retlw	64
  1286  18C6  3400               	retlw	0
  1287  18C7  3400               	retlw	0
  1288  18C8  3407               	retlw	7
  1289  18C9  3405               	retlw	5
  1290  18CA  3482               	retlw	130
  1291  18CB  3402               	retlw	2
  1292  18CC  3440               	retlw	64
  1293  18CD  3400               	retlw	0
  1294  18CE  3400               	retlw	0
  1295  18CF                     __end_of_configDescriptor1:	
  1296                           
  1297                           	psect	stringtext4
  1298  18CF                     __pstringtext4:	
  1299  18CF                     _sd002:	
  1300  18CF  3416               	retlw	22
  1301  18D0  3403               	retlw	3
  1302  18D1  3450               	retlw	80
  1303  18D2  3400               	retlw	0
  1304  18D3  3472               	retlw	114
  1305  18D4  3400               	retlw	0
  1306  18D5  346F               	retlw	111
  1307  18D6  3400               	retlw	0
  1308  18D7  3467               	retlw	103
  1309  18D8  3400               	retlw	0
  1310  18D9  3472               	retlw	114
  1311  18DA  3400               	retlw	0
  1312  18DB  3461               	retlw	97
  1313  18DC  3400               	retlw	0
  1314  18DD  346D               	retlw	109
  1315  18DE  3400               	retlw	0
  1316  18DF  346D               	retlw	109
  1317  18E0  3400               	retlw	0
  1318  18E1  3465               	retlw	101
  1319  18E2  3400               	retlw	0
  1320  18E3  3472               	retlw	114
  1321  18E4  3400               	retlw	0
  1322  18E5                     __end_of_sd002:	
  1323                           
  1324                           	psect	stringtext5
  1325  18E5                     __pstringtext5:	
  1326  18E5                     _sd001:	
  1327  18E5  3412               	retlw	18
  1328  18E6  3403               	retlw	3
  1329  18E7  3454               	retlw	84
  1330  18E8  3400               	retlw	0
  1331  18E9  3469               	retlw	105
  1332  18EA  3400               	retlw	0
  1333  18EB  346E               	retlw	110
  1334  18EC  3400               	retlw	0
  1335  18ED  3479               	retlw	121
  1336  18EE  3400               	retlw	0
  1337  18EF  3446               	retlw	70
  1338  18F0  3400               	retlw	0
  1339  18F1  3450               	retlw	80
  1340  18F2  3400               	retlw	0
  1341  18F3  3447               	retlw	71
  1342  18F4  3400               	retlw	0
  1343  18F5  3441               	retlw	65
  1344  18F6  3400               	retlw	0
  1345  18F7                     __end_of_sd001:	
  1346                           
  1347                           	psect	stringtext6
  1348  18F7                     __pstringtext6:	
  1349  18F7                     _device_dsc:	
  1350  18F7  3412               	retlw	18
  1351  18F8  3401               	retlw	1
  1352  18F9  3400               	retlw	0
  1353  18FA  3402               	retlw	2
  1354  18FB  3402               	retlw	2
  1355  18FC  3400               	retlw	0
  1356  18FD  3400               	retlw	0
  1357  18FE  3410               	retlw	16
  1358  18FF  3409               	retlw	9
  1359  1900  3412               	retlw	18
  1360  1901  3401               	retlw	1
  1361  1902  3421               	retlw	33
  1362  1903  3400               	retlw	0
  1363  1904  3401               	retlw	1
  1364  1905  3401               	retlw	1
  1365  1906  3402               	retlw	2
  1366  1907  3400               	retlw	0
  1367  1908  3401               	retlw	1
  1368  1909                     __end_of_device_dsc:	
  1369                           
  1370                           	psect	stringtext7
  1371  190F                     __pstringtext7:	
  1372  190F                     _sd000:	
  1373  190F  3404               	retlw	4
  1374  1910  3403               	retlw	3
  1375  1911  3409               	retlw	9
  1376  1912  3404               	retlw	4
  1377  1913                     __end_of_sd000:	
  1378  000E                     _PORTC	set	14
  1379  0012                     _PIR2bits	set	18
  1380  000B                     _INTCONbits	set	11
  1381  0097                     _WDTCON	set	151
  1382  0098                     _OSCTUNE	set	152
  1383  0099                     _OSCCON	set	153
  1384  0095                     _OPTION_REGbits	set	149
  1385  008E                     _TRISC	set	142
  1386  008C                     _TRISA	set	140
  1387  0092                     _PIE2bits	set	146
  1388  04D6                     _PLLRDY	set	1238
  1389  011D                     _APFCON	set	285
  1390  010E                     _LATC	set	270
  1391  010C                     _LATA	set	268
  1392  018C                     _ANSELA	set	396
  1393  018E                     _ANSELC	set	398
  1394  020C                     _WPUA	set	524
  1395  039B                     _ACTCON	set	923
  1396  0E98                     _UEP0bits	set	3736
  1397  0E8E                     _UCON	set	3726
  1398  0E8F                     _USTAT	set	3727
  1399  0E92                     _UIEbits	set	3730
  1400  0E90                     _UIRbits	set	3728
  1401  0E96                     _UADDR	set	3734
  1402  0E8E                     _UCONbits	set	3726
  1403  0E92                     _UIE	set	3730
  1404  0E97                     _UEIE	set	3735
  1405  0E91                     _UCFG	set	3729
  1406  0E90                     _UIR	set	3728
  1407  0E93                     _UEIR	set	3731
  1408  0E99                     _UEP1	set	3737
  1409  0E98                     _UEP0	set	3736
  1410                           
  1411                           ; #config settings
  1412  0000                     
  1413                           	psect	cinit
  1414  0014                     start_initialization:	
  1415  0014                     __initialization:	
  1416                           
  1417                           ; Initialize objects allocated to BANK4
  1418  0014  0024               	movlb	4	; select bank4
  1419                           
  1420                           ;initializer for _usb_rx_buf
  1421  0015  3020               	movlw	32
  1422  0016  00EE               	movwf	__pdataBANK4& (0+127)
  1423  0017  3001               	movlw	1
  1424  0018  00EF               	movwf	(__pdataBANK4+1)& (0+127)
  1425                           
  1426                           ; Initialize objects allocated to BANK5
  1427  0019  0025               	movlb	5	; select bank5
  1428                           
  1429                           ;initializer for _current_rx_handle
  1430  001A  3020               	movlw	32
  1431  001B  00E9               	movwf	__pdataBANK5& (0+127)
  1432  001C  00EA               	movwf	(__pdataBANK5+1)& (0+127)
  1433                           
  1434                           ;initializer for cmd_task@compare_data_matches
  1435  001D  3001               	movlw	1
  1436  001E  00EB               	movwf	(__pdataBANK5+2)& (0+127)
  1437                           
  1438                           ;initializer for cmd_task@gpio_dir
  1439  001F  303F               	movlw	63
  1440  0020  00EC               	movwf	(__pdataBANK5+3)& (0+127)
  1441                           
  1442                           ;initializer for _usb_tx_buf
  1443  0021  30A0               	movlw	160
  1444  0022  00ED               	movwf	(__pdataBANK5+4)& (0+127)
  1445                           
  1446                           ; Initialize objects allocated to BANK6
  1447  0023  0026               	movlb	6	; select bank6
  1448                           
  1449                           ;initializer for _usb_rx_pp_handle
  1450  0024  3020               	movlw	32
  1451  0025  00AC               	movwf	__pdataBANK6& (0+127)
  1452  0026  00AD               	movwf	(__pdataBANK6+1)& (0+127)
  1453  0027  3024               	movlw	36
  1454  0028  00AE               	movwf	(__pdataBANK6+2)& (0+127)
  1455  0029  3020               	movlw	32
  1456  002A  00AF               	movwf	(__pdataBANK6+3)& (0+127)
  1457                           
  1458                           ;initializer for _usb_rx_buf_array
  1459  002B  00B0               	movwf	(__pdataBANK6+4)& (0+127)
  1460  002C  3001               	movlw	1
  1461  002D  00B1               	movwf	(__pdataBANK6+5)& (0+127)
  1462  002E  3020               	movlw	32
  1463  002F  00B2               	movwf	(__pdataBANK6+6)& (0+127)
  1464  0030  3002               	movlw	2
  1465  0031  00B3               	movwf	(__pdataBANK6+7)& (0+127)
  1466                           
  1467                           ;initializer for _usb_tx_buf_array
  1468  0032  30A0               	movlw	160
  1469  0033  00B4               	movwf	(__pdataBANK6+8)& (0+127)
  1470  0034  01B5               	clrf	(__pdataBANK6+9)& (0+127)
  1471  0035  00B6               	movwf	(__pdataBANK6+10)& (0+127)
  1472  0036  3001               	movlw	1
  1473  0037  00B7               	movwf	(__pdataBANK6+11)& (0+127)
  1474                           
  1475                           ; Clear objects allocated to BANK1
  1476  0038  30E0               	movlw	low __pbssBANK1
  1477  0039  0084               	movwf	4
  1478  003A  3000               	movlw	high __pbssBANK1
  1479  003B  0085               	movwf	5
  1480  003C  3008               	movlw	8
  1481  003D  3187  27F8  3180   	fcall	clear_ram0
  1482                           
  1483                           ; Clear objects allocated to BANK3
  1484  0040  0023               	movlb	3	; select bank3
  1485  0041  01EC               	clrf	__pbssBANK3& (0+127)
  1486  0042  01ED               	clrf	(__pbssBANK3+1)& (0+127)
  1487  0043  01EE               	clrf	(__pbssBANK3+2)& (0+127)
  1488  0044  01EF               	clrf	(__pbssBANK3+3)& (0+127)
  1489                           
  1490                           ; Clear objects allocated to BANK4
  1491  0045  0024               	movlb	4	; select bank4
  1492  0046  30A0               	movlw	low __pbssBANK5
  1493  0047  01E8               	clrf	__pbssBANK4& (0+127)
  1494  0048  01E9               	clrf	(__pbssBANK4+1)& (0+127)
  1495  0049  01EA               	clrf	(__pbssBANK4+2)& (0+127)
  1496  004A  01EB               	clrf	(__pbssBANK4+3)& (0+127)
  1497  004B  01EC               	clrf	(__pbssBANK4+4)& (0+127)
  1498  004C  01ED               	clrf	(__pbssBANK4+5)& (0+127)
  1499                           
  1500                           ; Clear objects allocated to BANK5
  1501  004D  0084               	movwf	4
  1502  004E  3002               	movlw	high __pbssBANK5
  1503  004F  0085               	movwf	5
  1504  0050  3049               	movlw	73
  1505  0051  3187  27F8  3180   	fcall	clear_ram0
  1506                           
  1507                           ; Clear objects allocated to BANK6
  1508  0054  3020               	movlw	low __pbssBANK6
  1509  0055  0084               	movwf	4
  1510  0056  3003               	movlw	high __pbssBANK6
  1511  0057  0085               	movwf	5
  1512  0058  300C               	movlw	12
  1513  0059  3187  27F8  3180   	fcall	clear_ram0
  1514                           
  1515                           ; Clear objects allocated to BANK7
  1516  005C  30A0               	movlw	low __pbssBANK7
  1517  005D  0084               	movwf	4
  1518  005E  3003               	movlw	high __pbssBANK7
  1519  005F  0085               	movwf	5
  1520  0060  3040               	movlw	64
  1521  0061  3187  27F8         	fcall	clear_ram0
  1522  0063                     end_of_initialization:	
  1523                           ;End of C runtime variable initialization code
  1524                           
  1525  0063                     __end_of__initialization:	
  1526  0063  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1527  0064  0020               	movlb	0
  1528  0065  3191  29F7         	ljmp	_main	;jump to C main() function
  1529                           
  1530                           	psect	bssBANK1
  1531  00E0                     __pbssBANK1:	
  1532  00E0                     _inPipes:	
  1533  00E0                     	ds	5
  1534  00E5                     cmd_task@do0p1:	
  1535  00E5                     	ds	1
  1536  00E6                     cmd_task@do0p0:	
  1537  00E6                     	ds	1
  1538  00E7                     _usb_rx_ptr:	
  1539  00E7                     	ds	1
  1540                           
  1541                           	psect	bssBANK3
  1542  01EC                     __pbssBANK3:	
  1543  01EC                     _pBDTEntryEP0OutNext:	
  1544  01EC                     	ds	2
  1545  01EE                     _pBDTEntryEP0OutCurrent:	
  1546  01EE                     	ds	1
  1547  01EF                     _USTATcopy:	
  1548  01EF                     	ds	1
  1549                           
  1550                           	psect	bssBANK4
  1551  0268                     __pbssBANK4:	
  1552  0268                     cmd_task@input_mask:	
  1553  0268                     	ds	1
  1554  0269                     cmd_task@sie:	
  1555  0269                     	ds	1
  1556  026A                     _usb_tx_ptr:	
  1557  026A                     	ds	1
  1558  026B                     _usb_rx_bytes_avail:	
  1559  026B                     	ds	1
  1560  026C                     _controlTransferState:	
  1561  026C                     	ds	1
  1562  026D                     _USBDeviceState:	
  1563  026D                     	ds	1
  1564                           
  1565                           	psect	dataBANK4
  1566  026E                     __pdataBANK4:	
  1567  026E                     _usb_rx_buf:	
  1568  026E                     	ds	2
  1569                           
  1570                           	psect	bssBANK5
  1571  02A0                     __pbssBANK5:	
  1572  02A0                     _outPipes:	
  1573  02A0                     	ds	7
  1574  02A7                     _pBDTEntryIn:	
  1575  02A7                     	ds	6
  1576  02AD                     _pBDTEntryOut:	
  1577  02AD                     	ds	6
  1578  02B3                     _ep_data_out:	
  1579  02B3                     	ds	3
  1580  02B6                     _ep_data_in:	
  1581  02B6                     	ds	3
  1582  02B9                     cmd_tx_buffer_task@usb_tx_handle:	
  1583  02B9                     	ds	2
  1584  02BB                     cmd_task@loop_count:	
  1585  02BB                     	ds	2
  1586  02BD                     _bytes_recieved:	
  1587  02BD                     	ds	1
  1588  02BE                     _usb_rx_pp_get_ptr:	
  1589  02BE                     	ds	1
  1590  02BF                     _usb_rx_pp_put_ptr:	
  1591  02BF                     	ds	1
  1592  02C0                     _usb_rx_pp_size:	
  1593  02C0                     	ds	1
  1594  02C1                     cmd_task@status_sent:	
  1595  02C1                     	ds	1
  1596  02C2                     cmd_task@status:	
  1597  02C2                     	ds	1
  1598  02C3                     cmd_task@data:	
  1599  02C3                     	ds	1
  1600  02C4                     cmd_task@byte_to_send:	
  1601  02C4                     	ds	1
  1602  02C5                     cmd_task@mask:	
  1603  02C5                     	ds	1
  1604  02C6                     cmd_task@expected_data:	
  1605  02C6                     	ds	1
  1606  02C7                     cmd_task@actual_data:	
  1607  02C7                     	ds	1
  1608  02C8                     cmd_task@loop_is_active:	
  1609  02C8                     	ds	1
  1610  02C9                     cmd_task@i:	
  1611  02C9                     	ds	1
  1612  02CA                     cmd_task@inout_cfg:	
  1613  02CA                     	ds	1
  1614  02CB                     cmd_task@do1p1:	
  1615  02CB                     	ds	1
  1616  02CC                     cmd_task@do1p0:	
  1617  02CC                     	ds	1
  1618  02CD                     cmd_task@num_bytes:	
  1619  02CD                     	ds	1
  1620  02CE                     cmd_task@num_bits:	
  1621  02CE                     	ds	1
  1622  02CF                     cmd_task@op0:	
  1623  02CF                     	ds	1
  1624  02D0                     cmd_task@cmd:	
  1625  02D0                     	ds	1
  1626  02D1                     _USBTicksSinceSuspendEnd:	
  1627  02D1                     	ds	1
  1628  02D2                     _USBDeferOUTDataStagePackets:	
  1629  02D2                     	ds	1
  1630  02D3                     _USBDeferINDataStagePackets:	
  1631  02D3                     	ds	1
  1632  02D4                     _USBStatusStageEnabledFlag2:	
  1633  02D4                     	ds	1
  1634  02D5                     _USBStatusStageEnabledFlag1:	
  1635  02D5                     	ds	1
  1636  02D6                     _USBDeferStatusStagePacket:	
  1637  02D6                     	ds	1
  1638  02D7                     _USBStatusStageTimeoutCounter:	
  1639  02D7                     	ds	1
  1640  02D8                     _BothEP0OutUOWNsSet:	
  1641  02D8                     	ds	1
  1642  02D9                     _endpoint_number:	
  1643  02D9                     	ds	1
  1644  02DA                     _USBBusIsSuspended:	
  1645  02DA                     	ds	1
  1646  02DB                     _RemoteWakeup:	
  1647  02DB                     	ds	1
  1648  02DC                     _pDst:	
  1649  02DC                     	ds	1
  1650  02DD                     _shortPacketStatus:	
  1651  02DD                     	ds	1
  1652  02DE                     _cdc_trf_state:	
  1653  02DE                     	ds	1
  1654  02DF                     _line_coding:	
  1655  02DF                     	ds	7
  1656  02E6                     _USBAlternateInterface:	
  1657  02E6                     	ds	2
  1658  02E8                     _USBActiveConfiguration:	
  1659  02E8                     	ds	1
  1660                           
  1661                           	psect	dataBANK5
  1662  02E9                     __pdataBANK5:	
  1663  02E9                     _current_rx_handle:	
  1664  02E9                     	ds	2
  1665  02EB                     cmd_task@compare_data_matches:	
  1666  02EB                     	ds	1
  1667  02EC                     cmd_task@gpio_dir:	
  1668  02EC                     	ds	1
  1669  02ED                     _usb_tx_buf:	
  1670  02ED                     	ds	1
  1671                           
  1672                           	psect	bssBANK6
  1673  0320                     __pbssBANK6:	
  1674  0320                     _USB1msTickCount:	
  1675  0320                     	ds	4
  1676  0324                     _dummy_encapsulated_cmd_response:	
  1677  0324                     	ds	8
  1678                           
  1679                           	psect	dataBANK6
  1680  032C                     __pdataBANK6:	
  1681  032C                     _usb_rx_pp_handle:	
  1682  032C                     	ds	4
  1683  0330                     _usb_rx_buf_array:	
  1684  0330                     	ds	4
  1685  0334                     _usb_tx_buf_array:	
  1686  0334                     	ds	4
  1687                           
  1688                           	psect	bssBANK7
  1689  03A0                     __pbssBANK7:	
  1690  03A0                     _sie_configs:	
  1691  03A0                     	ds	64
  1692                           
  1693                           	psect	clrtext
  1694  07F8                     clear_ram0:	
  1695                           ;	Called with FSR0 containing the base address, and
  1696                           ;	WREG with the size to clear
  1697                           
  1698  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1699  07F9                     clrloop0:	
  1700  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1701  07FA  3101               	addfsr 0,1
  1702  07FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1703  07FC  2FF9               	goto	clrloop0	;have we reached the end yet?
  1704  07FD  3400               	retlw	0	;all done for this memory range, return
  1705                           
  1706                           	psect	cstackBANK4
  1707  0260                     __pcstackBANK4:	
  1708  0260                     main@tx_pt:	
  1709                           
  1710                           ; 2 bytes @ 0x0
  1711  0260                     	ds	2
  1712  0262                     main@rx_get_pt:	
  1713                           
  1714                           ; 2 bytes @ 0x2
  1715  0262                     	ds	2
  1716  0264                     main@rx_put_pt:	
  1717                           
  1718                           ; 2 bytes @ 0x4
  1719  0264                     	ds	2
  1720  0266                     main@cmd_pt:	
  1721                           
  1722                           ; 2 bytes @ 0x6
  1723  0266                     	ds	2
  1724                           
  1725                           	psect	cstackBANK3
  1726  01E0                     __pcstackBANK3:	
  1727  01E0                     ??_USBStdFeatureReqHandler:	
  1728  01E0                     USBStdSetCfgHandler@p:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731                           
  1732                           ; 2 bytes @ 0x0
  1733  01E0                     	ds	2
  1734  01E2                     USBStdSetCfgHandler@i_2033:	
  1735  01E2                     USBStdFeatureReqHandler@pUEP:	
  1736                           ; 1 bytes @ 0x2
  1737                           
  1738                           
  1739                           ; 2 bytes @ 0x2
  1740  01E2                     	ds	1
  1741  01E3                     USBStdSetCfgHandler@i:	
  1742                           
  1743                           ; 1 bytes @ 0x3
  1744  01E3                     	ds	1
  1745  01E4                     USBStdFeatureReqHandler@current_ep_data:	
  1746                           
  1747                           ; 1 bytes @ 0x4
  1748  01E4                     	ds	1
  1749  01E5                     USBStdFeatureReqHandler@p:	
  1750                           
  1751                           ; 2 bytes @ 0x5
  1752  01E5                     	ds	2
  1753  01E7                     ??_USBCtrlEPService:	
  1754                           
  1755                           ; 1 bytes @ 0x7
  1756  01E7                     	ds	3
  1757  01EA                     ??_USBDeviceTasks:	
  1758                           
  1759                           ; 1 bytes @ 0xA
  1760  01EA                     	ds	1
  1761  01EB                     USBDeviceTasks@i:	
  1762                           
  1763                           ; 1 bytes @ 0xB
  1764  01EB                     	ds	1
  1765                           
  1766                           	psect	cstackBANK2
  1767  0160                     __pcstackBANK2:	
  1768  0160                     ??_OSCILLATOR_Initialize:	
  1769  0160                     ??_WDT_Initialize:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772  0160                     ??_USBDeviceInit:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775  0160                     ??_USBDeviceAttach:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778  0160                     ??_USBIncrement1msInternalTimers:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781  0160                     ??_USBCtrlEPAllowStatusStage:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784  0160                     ??_USBStallHandler:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787  0160                     ?_USBConfigureEndpoint:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790  0160                     ??_USBCtrlTrfTxService:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793  0160                     ??_USBCheckCDCRequest:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796  0160                     ??_PIN_MANAGER_Initialize:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799  0160                     ??_USBStdGetDscHandler:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802  0160                     ??_USBStdGetStatusHandler:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805  0160                     ??_gpio_init:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808  0160                     ??_cmd_task:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811  0160                     ??_cmd_rx_buf_put_task:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814  0160                     ??_cmd_rx_buf_get_task:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817  0160                     ?_memset:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820  0160                     ?_USBTransferOnePacket:	
  1821                           ; 2 bytes @ 0x0
  1822                           
  1823  0160                     USBTransferOnePacket@dir:	
  1824                           ; 2 bytes @ 0x0
  1825                           
  1826  0160                     USBConfigureEndpoint@direction:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829  0160                     USBDeviceInit@p:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832  0160                     USBStdGetStatusHandler@p:	
  1833                           ; 2 bytes @ 0x0
  1834                           
  1835  0160                     memset@p1:	
  1836                           ; 2 bytes @ 0x0
  1837                           
  1838                           
  1839                           ; 2 bytes @ 0x0
  1840  0160                     	ds	1
  1841  0161                     ??_USBConfigureEndpoint:	
  1842  0161                     USBTransferOnePacket@data:	
  1843                           ; 1 bytes @ 0x1
  1844                           
  1845                           
  1846                           ; 1 bytes @ 0x1
  1847  0161                     	ds	1
  1848  0162                     ??_USBCtrlTrfRxService:	
  1849  0162                     USBDeviceInit@i_1358:	
  1850                           ; 1 bytes @ 0x2
  1851                           
  1852  0162                     USBTransferOnePacket@len:	
  1853                           ; 1 bytes @ 0x2
  1854                           
  1855  0162                     USBConfigureEndpoint@EPNum:	
  1856                           ; 1 bytes @ 0x2
  1857                           
  1858  0162                     USBCtrlTrfTxService@byteToSend:	
  1859                           ; 1 bytes @ 0x2
  1860                           
  1861  0162                     cmd_rx_buf_get_task@pt:	
  1862                           ; 1 bytes @ 0x2
  1863                           
  1864  0162                     memset@c:	
  1865                           ; 1 bytes @ 0x2
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x2
  1869  0162                     	ds	1
  1870  0163                     ??_USBCtrlTrfInHandler:	
  1871  0163                     ??_USBTransferOnePacket:	
  1872                           ; 1 bytes @ 0x3
  1873                           
  1874  0163                     ??_USBCtrlEPAllowDataStage:	
  1875                           ; 1 bytes @ 0x3
  1876                           
  1877  0163                     USBDeviceInit@i:	
  1878                           ; 1 bytes @ 0x3
  1879                           
  1880  0163                     USBConfigureEndpoint@handle:	
  1881                           ; 1 bytes @ 0x3
  1882                           
  1883  0163                     cmd_task@PT_YIELD_FLAG:	
  1884                           ; 1 bytes @ 0x3
  1885                           
  1886                           
  1887                           ; 1 bytes @ 0x3
  1888  0163                     	ds	1
  1889  0164                     ?_USBEnableEndpoint:	
  1890  0164                     ??_SYSTEM_Initialize:	
  1891                           ; 1 bytes @ 0x4
  1892                           
  1893  0164                     USBEnableEndpoint@options:	
  1894                           ; 1 bytes @ 0x4
  1895                           
  1896  0164                     USBCtrlTrfRxService@i:	
  1897                           ; 1 bytes @ 0x4
  1898                           
  1899  0164                     cmd_task@last_phase_overlay:	
  1900                           ; 1 bytes @ 0x4
  1901                           
  1902  0164                     cmd_rx_buf_put_task@PT_YIELD_FLAG:	
  1903                           ; 1 bytes @ 0x4
  1904                           
  1905  0164                     memset@n:	
  1906                           ; 1 bytes @ 0x4
  1907                           
  1908                           
  1909                           ; 2 bytes @ 0x4
  1910  0164                     	ds	1
  1911  0165                     ??_USBEnableEndpoint:	
  1912  0165                     ??_USBCtrlEPServiceComplete:	
  1913                           ; 1 bytes @ 0x5
  1914                           
  1915  0165                     USBCtrlTrfRxService@byteToRead:	
  1916                           ; 1 bytes @ 0x5
  1917                           
  1918  0165                     USBCtrlTrfInHandler@lastDTS:	
  1919                           ; 1 bytes @ 0x5
  1920                           
  1921  0165                     cmd_task@last_phase_overlay_2365:	
  1922                           ; 1 bytes @ 0x5
  1923                           
  1924  0165                     cmd_rx_buf_put_task@pt:	
  1925                           ; 1 bytes @ 0x5
  1926                           
  1927                           
  1928                           ; 1 bytes @ 0x5
  1929  0165                     	ds	1
  1930  0166                     ??_memset:	
  1931  0166                     ??_USBCtrlTrfOutHandler:	
  1932                           ; 1 bytes @ 0x6
  1933                           
  1934  0166                     cmd_task@op1:	
  1935                           ; 1 bytes @ 0x6
  1936                           
  1937  0166                     memset@p:	
  1938                           ; 1 bytes @ 0x6
  1939                           
  1940                           
  1941                           ; 2 bytes @ 0x6
  1942  0166                     	ds	1
  1943  0167                     USBTransferOnePacket@ep:	
  1944  0167                     cmd_task@bit_to_set:	
  1945                           ; 1 bytes @ 0x7
  1946                           
  1947  0167                     USBEnableEndpoint@p:	
  1948                           ; 1 bytes @ 0x7
  1949                           
  1950                           
  1951                           ; 2 bytes @ 0x7
  1952  0167                     	ds	1
  1953  0168                     cmd_task@bit_to_set_2364:	
  1954  0168                     USBTransferOnePacket@handle:	
  1955                           ; 1 bytes @ 0x8
  1956                           
  1957                           
  1958                           ; 2 bytes @ 0x8
  1959  0168                     	ds	1
  1960  0169                     USBEnableEndpoint@ep:	
  1961  0169                     cmd_task@data_2367:	
  1962                           ; 1 bytes @ 0x9
  1963                           
  1964                           
  1965                           ; 1 bytes @ 0x9
  1966  0169                     	ds	1
  1967  016A                     ??_CDCInitEP:	
  1968  016A                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1969                           ; 1 bytes @ 0xA
  1970                           
  1971  016A                     ??_cmd_tx_buffer_task:	
  1972                           ; 1 bytes @ 0xA
  1973                           
  1974  016A                     cmd_task@tmp:	
  1975                           ; 1 bytes @ 0xA
  1976                           
  1977  016A                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1978                           ; 1 bytes @ 0xA
  1979                           
  1980                           
  1981                           ; 2 bytes @ 0xA
  1982  016A                     	ds	1
  1983  016B                     cmd_task@last_phase_overlay_2368:	
  1984                           
  1985                           ; 1 bytes @ 0xB
  1986  016B                     	ds	1
  1987  016C                     cmd_task@data_2366:	
  1988  016C                     cmd_tx_buffer_task@PT_YIELD_FLAG:	
  1989                           ; 1 bytes @ 0xC
  1990                           
  1991  016C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1992                           ; 1 bytes @ 0xC
  1993                           
  1994                           
  1995                           ; 2 bytes @ 0xC
  1996  016C                     	ds	1
  1997  016D                     cmd_task@pt:	
  1998  016D                     cmd_tx_buffer_task@pt:	
  1999                           ; 1 bytes @ 0xD
  2000                           
  2001                           
  2002                           ; 1 bytes @ 0xD
  2003  016D                     	ds	1
  2004  016E                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2005                           
  2006                           ; 2 bytes @ 0xE
  2007  016E                     	ds	2
  2008  0170                     ??_USBWakeFromSuspend:	
  2009  0170                     ??_USBSuspend:	
  2010                           ; 1 bytes @ 0x10
  2011                           
  2012  0170                     ??_USBCtrlTrfSetupHandler:	
  2013                           ; 1 bytes @ 0x10
  2014                           
  2015  0170                     ??_USBCheckStdRequest:	
  2016                           ; 1 bytes @ 0x10
  2017                           
  2018  0170                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2019                           ; 1 bytes @ 0x10
  2020                           
  2021  0170                     ??_USBStdSetCfgHandler:	
  2022                           ; 1 bytes @ 0x10
  2023                           
  2024  0170                     ??_main:	
  2025                           ; 1 bytes @ 0x10
  2026                           
  2027                           
  2028                           	psect	cstackBANK1
  2029  00E8                     __pcstackBANK1:	
  2030                           ; 1 bytes @ 0x10
  2031                           
  2032  00E8                     i1USBStdFeatureReqHandler@pUEP:	
  2033                           
  2034                           ; 2 bytes @ 0x0
  2035  00E8                     	ds	2
  2036  00EA                     i1USBStdFeatureReqHandler@current_ep_data:	
  2037                           
  2038                           ; 1 bytes @ 0x2
  2039  00EA                     	ds	1
  2040  00EB                     i1USBStdFeatureReqHandler@p:	
  2041                           
  2042                           ; 2 bytes @ 0x3
  2043  00EB                     	ds	2
  2044  00ED                     ??i1_USBCtrlEPService:	
  2045                           
  2046                           ; 1 bytes @ 0x5
  2047  00ED                     	ds	3
  2048                           
  2049                           	psect	cstackCOMMON
  2050  0070                     __pcstackCOMMON:	
  2051  0070                     ?_USBDeviceTasks:	
  2052  0070                     ?_OSCILLATOR_Initialize:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ?_WDT_Initialize:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ?_USBDeviceInit:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ?_USBDeviceAttach:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ?_USBWakeFromSuspend:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ?_USBSuspend:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_USBIncrement1msInternalTimers:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ?_USBCtrlEPAllowStatusStage:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_USBStallHandler:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ?_USBCtrlEPService:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ?_USBCtrlTrfTxService:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ?_USBCtrlTrfSetupHandler:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_USBCtrlTrfOutHandler:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ?_USBCtrlTrfInHandler:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_USBCheckStdRequest:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     ?_USBStdFeatureReqHandler:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ?_USBCheckCDCRequest:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0070                     ?_CDCInitEP:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0070                     ?_INTERRUPT_InterruptManager:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0070                     ?_PIN_MANAGER_Initialize:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0070                     ?_SYSTEM_Initialize:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ?_USBCtrlEPAllowDataStage:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_USBCtrlEPServiceComplete:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_USBCtrlTrfRxService:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_USBStdSetCfgHandler:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_USBStdGetDscHandler:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ?_USBStdGetStatusHandler:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ?_gpio_init:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ?_cmd_task:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ?_cmd_rx_buf_put_task:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ?_cmd_rx_buf_get_task:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ?_cmd_tx_buffer_task:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0070                     ?_main:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ?i1_USBCheckCDCRequest:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ??i1_USBCheckCDCRequest:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0070                     ?i1_CDCInitEP:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0070                     ?i1_USBDeviceInit:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     ??i1_USBDeviceInit:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0070                     ?i1_USBDeviceTasks:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     ?i1_USBCtrlEPAllowDataStage:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     ?i1_USBConfigureEndpoint:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0070                     ?i1_USBCtrlEPServiceComplete:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184  0070                     ?i1_USBCtrlTrfTxService:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187  0070                     ??i1_USBCtrlTrfTxService:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190  0070                     ?i1_USBCtrlTrfRxService:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0070                     ?i1_USBStdSetCfgHandler:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0070                     ?i1_USBStdGetDscHandler:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0070                     ??i1_USBStdGetDscHandler:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202  0070                     ?i1_USBStdGetStatusHandler:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205  0070                     ??i1_USBStdGetStatusHandler:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0070                     ?i1_USBStallHandler:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211  0070                     ??i1_USBStallHandler:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214  0070                     ?i1_USBSuspend:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217  0070                     ?i1_USBWakeFromSuspend:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220  0070                     ?i1_USBCtrlEPService:	
  2221                           ; 1 bytes @ 0x0
  2222                           
  2223  0070                     ?i1_USBCtrlTrfSetupHandler:	
  2224                           ; 1 bytes @ 0x0
  2225                           
  2226  0070                     ?i1_USBCtrlTrfOutHandler:	
  2227                           ; 1 bytes @ 0x0
  2228                           
  2229  0070                     ?i1_USBCtrlTrfInHandler:	
  2230                           ; 1 bytes @ 0x0
  2231                           
  2232  0070                     ?i1_USBCheckStdRequest:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235  0070                     ?i1_USBStdFeatureReqHandler:	
  2236                           ; 1 bytes @ 0x0
  2237                           
  2238  0070                     ?i1_USBIncrement1msInternalTimers:	
  2239                           ; 1 bytes @ 0x0
  2240                           
  2241  0070                     ??i1_USBIncrement1msInternalTimers:	
  2242                           ; 1 bytes @ 0x0
  2243                           
  2244  0070                     ?i1_memset:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247  0070                     i1USBConfigureEndpoint@direction:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250  0070                     i1USBDeviceInit@p:	
  2251                           ; 1 bytes @ 0x0
  2252                           
  2253  0070                     i1USBStdGetStatusHandler@p:	
  2254                           ; 2 bytes @ 0x0
  2255                           
  2256  0070                     i1memset@p1:	
  2257                           ; 2 bytes @ 0x0
  2258                           
  2259                           
  2260                           ; 2 bytes @ 0x0
  2261  0070                     	ds	1
  2262  0071                     ??i1_USBConfigureEndpoint:	
  2263                           
  2264                           ; 1 bytes @ 0x1
  2265  0071                     	ds	1
  2266  0072                     ??i1_USBCtrlTrfRxService:	
  2267  0072                     i1USBDeviceInit@i_1358:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270  0072                     i1USBConfigureEndpoint@EPNum:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273  0072                     i1USBCtrlTrfTxService@byteToSend:	
  2274                           ; 1 bytes @ 0x2
  2275                           
  2276  0072                     i1memset@c:	
  2277                           ; 1 bytes @ 0x2
  2278                           
  2279                           
  2280                           ; 2 bytes @ 0x2
  2281  0072                     	ds	1
  2282  0073                     ??i1_USBCtrlEPAllowDataStage:	
  2283  0073                     ??i1_USBCtrlTrfInHandler:	
  2284                           ; 1 bytes @ 0x3
  2285                           
  2286  0073                     i1USBDeviceInit@i:	
  2287                           ; 1 bytes @ 0x3
  2288                           
  2289  0073                     i1USBConfigureEndpoint@handle:	
  2290                           ; 1 bytes @ 0x3
  2291                           
  2292                           
  2293                           ; 1 bytes @ 0x3
  2294  0073                     	ds	1
  2295  0074                     ?i1_USBEnableEndpoint:	
  2296  0074                     i1USBEnableEndpoint@options:	
  2297                           ; 1 bytes @ 0x4
  2298                           
  2299  0074                     i1USBCtrlTrfRxService@i:	
  2300                           ; 1 bytes @ 0x4
  2301                           
  2302  0074                     i1memset@n:	
  2303                           ; 1 bytes @ 0x4
  2304                           
  2305                           
  2306                           ; 2 bytes @ 0x4
  2307  0074                     	ds	1
  2308  0075                     ??i1_USBEnableEndpoint:	
  2309  0075                     ??i1_USBCtrlEPServiceComplete:	
  2310                           ; 1 bytes @ 0x5
  2311                           
  2312  0075                     i1USBCtrlTrfRxService@byteToRead:	
  2313                           ; 1 bytes @ 0x5
  2314                           
  2315  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  2316                           ; 1 bytes @ 0x5
  2317                           
  2318                           
  2319                           ; 1 bytes @ 0x5
  2320  0075                     	ds	1
  2321  0076                     ??i1_USBCtrlTrfOutHandler:	
  2322  0076                     ??i1_memset:	
  2323                           ; 1 bytes @ 0x6
  2324                           
  2325  0076                     i1memset@p:	
  2326                           ; 1 bytes @ 0x6
  2327                           
  2328                           
  2329                           ; 2 bytes @ 0x6
  2330  0076                     	ds	1
  2331  0077                     i1USBEnableEndpoint@p:	
  2332                           
  2333                           ; 2 bytes @ 0x7
  2334  0077                     	ds	2
  2335  0079                     i1USBEnableEndpoint@ep:	
  2336                           
  2337                           ; 1 bytes @ 0x9
  2338  0079                     	ds	1
  2339  007A                     ??i1_CDCInitEP:	
  2340  007A                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2341                           ; 1 bytes @ 0xA
  2342                           
  2343  007A                     ??i1_USBStdSetCfgHandler:	
  2344                           ; 1 bytes @ 0xA
  2345                           
  2346  007A                     ??i1_USBSuspend:	
  2347                           ; 1 bytes @ 0xA
  2348                           
  2349  007A                     ??i1_USBWakeFromSuspend:	
  2350                           ; 1 bytes @ 0xA
  2351                           
  2352  007A                     ??i1_USBStdFeatureReqHandler:	
  2353                           ; 1 bytes @ 0xA
  2354                           
  2355  007A                     i1USBStdSetCfgHandler@p:	
  2356                           ; 1 bytes @ 0xA
  2357                           
  2358                           
  2359                           ; 2 bytes @ 0xA
  2360  007A                     	ds	2
  2361  007C                     i1USBStdSetCfgHandler@i_2033:	
  2362                           
  2363                           ; 1 bytes @ 0xC
  2364  007C                     	ds	1
  2365  007D                     i1USBStdSetCfgHandler@i:	
  2366                           
  2367                           ; 1 bytes @ 0xD
  2368  007D                     	ds	1
  2369  007E                     ??_INTERRUPT_InterruptManager:	
  2370  007E                     ??i1_USBCtrlTrfSetupHandler:	
  2371                           ; 1 bytes @ 0xE
  2372                           
  2373  007E                     ??i1_USBCheckStdRequest:	
  2374                           ; 1 bytes @ 0xE
  2375                           
  2376                           
  2377                           	psect	cstackBANK0h
  2378  0058                     __pcstackBANK0h:	
  2379                           ; 1 bytes @ 0xE
  2380                           
  2381  0058                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2382  0058                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385                           
  2386                           ; 2 bytes @ 0x0
  2387  0058                     	ds	2
  2388  005A                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2389                           
  2390                           ; 2 bytes @ 0x2
  2391  005A                     	ds	2
  2392  005C                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2393                           
  2394                           ; 2 bytes @ 0x4
  2395  005C                     	ds	2
  2396  005E                     ??i1_USBDeviceTasks:	
  2397                           
  2398                           ; 1 bytes @ 0x6
  2399  005E                     	ds	1
  2400  005F                     i1USBDeviceTasks@i:	
  2401                           
  2402                           ; 1 bytes @ 0x7
  2403  005F                     	ds	1
  2404                           
  2405                           	psect	maintext
  2406  11F7                     __pmaintext:	
  2407 ;;
  2408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2409 ;;
  2410 ;; *************** function _main *****************
  2411 ;; Defined at:
  2412 ;;		line 647 in file "main.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  cmd_pt          2    6[BANK4 ] struct pt
  2417 ;;  rx_put_pt       2    4[BANK4 ] struct pt
  2418 ;;  rx_get_pt       2    2[BANK4 ] struct pt
  2419 ;;  tx_pt           2    0[BANK4 ] struct pt
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : B1F/0
  2426 ;;		On exit  : 18/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2430 ;;      Locals:         0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;      Totals:         0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0
  2433 ;;Total ram usage:        8 bytes
  2434 ;; Hardware stack levels required when called:   19
  2435 ;; This function calls:
  2436 ;;		_SYSTEM_Initialize
  2437 ;;		_USBDeviceInit
  2438 ;;		_USBDeviceTasks
  2439 ;;		_cmd_rx_buf_get_task
  2440 ;;		_cmd_rx_buf_put_task
  2441 ;;		_cmd_task
  2442 ;;		_cmd_tx_buffer_task
  2443 ;;		_gpio_init
  2444 ;; This function is called by:
  2445 ;;		Startup code after reset
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _main
  2451  11F7                     _main:	
  2452                           
  2453                           ;main.c: 648: struct pt cmd_pt;
  2454                           ;main.c: 649: (&cmd_pt)->lc = 0;;
  2455                           
  2456                           ;incstack = 0
  2457 ;; hardware stack exceeded
  2458                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2459  11F7  0024               	movlb	4	; select bank4
  2460  11F8  01E6               	clrf	main@cmd_pt^(0+512)
  2461  11F9  01E7               	clrf	(main@cmd_pt+1)^(0+512)
  2462                           
  2463                           ;main.c: 651: struct pt tx_pt;
  2464                           ;main.c: 652: (&tx_pt)->lc = 0;;
  2465  11FA  01E0               	clrf	main@tx_pt^(0+512)
  2466  11FB  01E1               	clrf	(main@tx_pt+1)^(0+512)
  2467                           
  2468                           ;main.c: 654: struct pt rx_put_pt;
  2469                           ;main.c: 655: (&rx_put_pt)->lc = 0;;
  2470  11FC  01E4               	clrf	main@rx_put_pt^(0+512)
  2471  11FD  01E5               	clrf	(main@rx_put_pt+1)^(0+512)
  2472                           
  2473                           ;main.c: 657: struct pt rx_get_pt;
  2474                           ;main.c: 658: (&rx_get_pt)->lc = 0;;
  2475  11FE  01E2               	clrf	main@rx_get_pt^(0+512)
  2476  11FF  01E3               	clrf	(main@rx_get_pt+1)^(0+512)
  2477                           
  2478                           ;main.c: 660: SYSTEM_Initialize();
  2479  1200  3199  21C0  3191   	fcall	_SYSTEM_Initialize
  2480                           
  2481                           ;main.c: 661: USBDeviceInit();
  2482  1203  318A  2294  3191   	fcall	_USBDeviceInit
  2483  1206                     i1L__ptext1:	
  2484                           ;main.c: 662: gpio_init();
  2485                           
  2486                           
  2487                           ;psect for function _gpio_init
  2488  1206                     i1L_gpio_init:	
  2489  1206                     i1Ll8083:	
  2490                           
  2491                           ;main.c: 62: TRISC = 0b111111;
  2492  1206  303F               	movlw	63
  2493  1207  0021               	movlb	1	; select bank1
  2494  1208  008E               	movwf	14	;volatile
  2495  1209                     i1Ll631:	
  2496  1209                     l8093:	
  2497                           
  2498                           ;main.c: 665: USBDeviceTasks();
  2499  1209  3189  21D0  3191   	fcall	_USBDeviceTasks
  2500                           
  2501                           ;main.c: 667: if (
  2502                           ;main.c: 668: (USBDeviceState >= CONFIGURED_STATE) &&
  2503                           ;main.c: 669: (UCONbits.SUSPND == 0)
  2504                           ;main.c: 670: ) {
  2505  120C  3020               	movlw	32
  2506  120D  0024               	movlb	4	; select bank4
  2507  120E  026D               	subwf	_USBDeviceState^(0+512),w	;volatile
  2508  120F  1C03               	skipc
  2509  1210  2A09               	goto	l8093
  2510  1211  003D               	movlb	29	; select bank29
  2511  1212  188E               	btfsc	14,1	;volatile
  2512  1213  2A09               	goto	l8093
  2513                           
  2514                           ;main.c: 671: cmd_rx_buf_put_task(&rx_put_pt);
  2515  1214  3064               	movlw	(low (main@rx_put_pt| (0+512)))& (0+255)
  2516  1215                     i2L__ptext5:	
  2517                           
  2518                           ;psect for function _cmd_rx_buf_put_task
  2519  1215                     i2L_cmd_rx_buf_put_task:	
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in _cmd_rx_buf_put_task: [wreg-fsr1h+status,2+status,0]
  2523                           ;cmd_rx_buf_put_task@pt stored from wreg
  2524  1215  0022               	movlb	2	; select bank2
  2525  1216  00E5               	movwf	cmd_rx_buf_put_task@pt^(0+256)
  2526  1217                     i2Ll6821:	
  2527                           
  2528                           ;main.c: 542: { char PT_YIELD_FLAG = 1; switch((pt)->lc) { case 0:;
  2529  1217  01E4               	clrf	cmd_rx_buf_put_task@PT_YIELD_FLAG^(0+256)
  2530  1218  0AE4               	incf	cmd_rx_buf_put_task@PT_YIELD_FLAG^(0+256),f
  2531  1219  2AA6               	ljmp	i2Ll6867
  2532  121A                     i2Ll6823:	
  2533                           
  2534                           ;main.c: 544: usb_rx_pp_put_ptr = 0;
  2535  121A  0025               	movlb	5	; select bank5
  2536  121B  01BF               	clrf	_usb_rx_pp_put_ptr^(0+640)
  2537  121C                     i2Ll6825:	
  2538  121C  0022               	movlb	2	; select bank2
  2539  121D  0865               	movf	cmd_rx_buf_put_task@pt^(0+256),w
  2540  121E  0086               	movwf	6
  2541  121F  3002               	movlw	2	; select bank4/5
  2542  1220  0087               	movwf	7
  2543  1221  3024               	movlw	36
  2544  1222  3FC0               	movwi [0]fsr1
  2545  1223  3002               	movlw	2
  2546  1224  3FC1               	movwi [1]fsr1
  2547  1225                     i2Ll6827:	
  2548  1225  3002               	movlw	2
  2549  1226  0025               	movlb	5	; select bank5
  2550  1227  0240               	subwf	_usb_rx_pp_size^(0+640),w
  2551  1228  1C03               	btfss	3,0
  2552  1229  2A2D               	ljmp	i2Ll6831
  2553  122A  2ACC               	ljmp	iL8
  2554  122B                     i2Lu6141:	
  2555  122B  2A2D               	ljmp	i2Ll6831
  2556  122C                     i2Lu6140:	
  2557  122C  2ACC               	ljmp	iL8
  2558  122D                     i2Ll6831:	
  2559                           
  2560                           ;main.c: 550: current_rx_handle = usb_rx_pp_handle[usb_rx_pp_put_ptr];
  2561  122D  353F               	lslf	_usb_rx_pp_put_ptr^(0+640),w
  2562  122E  3E2C               	addlw	(low (_usb_rx_pp_handle| (0+768)))& (0+255)
  2563  122F  0086               	movwf	6
  2564  1230  3003               	movlw	3	; select bank6/7
  2565  1231  0087               	movwf	7
  2566  1232  3F40               	moviw [0]fsr1
  2567  1233  00E9               	movwf	_current_rx_handle^(0+640)
  2568  1234  3F41               	moviw [1]fsr1
  2569  1235  00EA               	movwf	(_current_rx_handle+1)^(0+640)
  2570  1236                     i2Ll6833:	
  2571                           
  2572                           ;main.c: 553: bytes_recieved = 0;
  2573  1236  01BD               	clrf	_bytes_recieved^(0+640)
  2574  1237                     i2Ll6835:	
  2575                           
  2576                           ;main.c: 556: current_rx_handle->ADR = (((uint16_t)(usb_rx_buf_array[usb_rx_pp_put_ptr])
      +                          ) & 0x7FFF);
  2577  1237  353F               	lslf	_usb_rx_pp_put_ptr^(0+640),w
  2578  1238  3E30               	addlw	(low (_usb_rx_buf_array| (0+768)))& (0+255)
  2579  1239  0086               	movwf	6
  2580  123A  3003               	movlw	3	; select bank6/7
  2581  123B  0087               	movwf	7
  2582  123C  3F40               	moviw [0]fsr1
  2583  123D  0022               	movlb	2	; select bank2
  2584  123E  00E0               	movwf	??_cmd_rx_buf_put_task^(0+256)
  2585  123F  3F41               	moviw [1]fsr1
  2586  1240  00E1               	movwf	(??_cmd_rx_buf_put_task^(0+256)+1)
  2587  1241  0860               	movf	??_cmd_rx_buf_put_task^(0+256),w
  2588  1242  00E2               	movwf	(??_cmd_rx_buf_put_task+2)^(0+256)
  2589  1243  307F               	movlw	127
  2590  1244  0561               	andwf	(??_cmd_rx_buf_put_task+1)^(0+256),w
  2591  1245  00E3               	movwf	(??_cmd_rx_buf_put_task+3)^(0+256)
  2592  1246  0025               	movlb	5	; select bank5
  2593  1247  0869               	movf	_current_rx_handle^(0+640),w
  2594  1248  0086               	movwf	6
  2595  1249  086A               	movf	(_current_rx_handle+1)^(0+640),w
  2596  124A  0087               	movwf	7
  2597  124B  3142               	addfsr 1,2
  2598  124C  0022               	movlb	2	; select bank2
  2599  124D  0862               	movf	(??_cmd_rx_buf_put_task+2)^(0+256),w
  2600  124E  3FC0               	movwi [0]fsr1
  2601  124F  0863               	movf	(??_cmd_rx_buf_put_task+3)^(0+256),w
  2602  1250  3FC1               	movwi [1]fsr1
  2603  1251                     i2Ll6837:	
  2604                           
  2605                           ;main.c: 557: current_rx_handle->CNT = 64;
  2606  1251  0025               	movlb	5	; select bank5
  2607  1252  0869               	movf	_current_rx_handle^(0+640),w
  2608  1253  3E01               	addlw	1
  2609  1254  0022               	movlb	2	; select bank2
  2610  1255  00E0               	movwf	??_cmd_rx_buf_put_task^(0+256)
  2611  1256  3000               	movlw	0
  2612  1257  0025               	movlb	5	; select bank5
  2613  1258  3D6A               	addwfc	(_current_rx_handle+1)^(0+640),w
  2614  1259  0022               	movlb	2	; select bank2
  2615  125A  00E1               	movwf	(??_cmd_rx_buf_put_task+1)^(0+256)
  2616  125B  0860               	movf	??_cmd_rx_buf_put_task^(0+256),w
  2617  125C  0086               	movwf	6
  2618  125D  0861               	movf	(??_cmd_rx_buf_put_task+1)^(0+256),w
  2619  125E  0087               	movwf	7
  2620  125F  3040               	movlw	64
  2621  1260  0081               	movwf	1
  2622  1261                     i2Ll6839:	
  2623                           
  2624                           ;main.c: 558: current_rx_handle->STAT.Val &= 0x40;
  2625  1261  0025               	movlb	5	; select bank5
  2626  1262  0869               	movf	_current_rx_handle^(0+640),w
  2627  1263  0086               	movwf	6
  2628  1264  086A               	movf	(_current_rx_handle+1)^(0+640),w
  2629  1265  0087               	movwf	7
  2630  1266  3040               	movlw	64
  2631  1267  0581               	andwf	1,f
  2632  1268                     i2Ll6841:	
  2633                           
  2634                           ;main.c: 559: current_rx_handle->STAT.Val |= 0x08;
  2635  1268  0869               	movf	_current_rx_handle^(0+640),w
  2636  1269  0086               	movwf	6
  2637  126A  086A               	movf	(_current_rx_handle+1)^(0+640),w
  2638  126B  0087               	movwf	7
  2639  126C  1581               	bsf	1,3
  2640  126D                     i2Ll6843:	
  2641                           
  2642                           ;main.c: 560: current_rx_handle->STAT.Val |= 0x80;
  2643  126D  0869               	movf	_current_rx_handle^(0+640),w
  2644  126E  0086               	movwf	6
  2645  126F  086A               	movf	(_current_rx_handle+1)^(0+640),w
  2646  1270  0087               	movwf	7
  2647  1271  1781               	bsf	1,7
  2648  1272                     i2Ll6845:	
  2649  1272  0022               	movlb	2	; select bank2
  2650  1273  0865               	movf	cmd_rx_buf_put_task@pt^(0+256),w
  2651  1274  0086               	movwf	6
  2652  1275  3002               	movlw	2	; select bank4/5
  2653  1276  0087               	movwf	7
  2654  1277  3032               	movlw	50
  2655  1278  3FC0               	movwi [0]fsr1
  2656  1279  3002               	movlw	2
  2657  127A  3FC1               	movwi [1]fsr1
  2658  127B                     i2Ll6847:	
  2659  127B  0025               	movlb	5	; select bank5
  2660  127C  0869               	movf	_current_rx_handle^(0+640),w
  2661  127D  0086               	movwf	6
  2662  127E  086A               	movf	(_current_rx_handle+1)^(0+640),w
  2663  127F  0087               	movwf	7
  2664  1280  1F81               	btfss	1,7
  2665  1281  2A85               	ljmp	i2Ll6851
  2666  1282  2ACC               	ljmp	iL8
  2667  1283                     i2Lu6151:	
  2668  1283  2A85               	ljmp	i2Ll6851
  2669  1284                     i2Lu6150:	
  2670  1284  2ACC               	ljmp	iL8
  2671  1285                     i2Ll6851:	
  2672                           
  2673                           ;main.c: 563: bytes_recieved = current_rx_handle->CNT;
  2674  1285  0869               	movf	_current_rx_handle^(0+640),w
  2675  1286  0086               	movwf	6
  2676  1287  086A               	movf	(_current_rx_handle+1)^(0+640),w
  2677  1288  0087               	movwf	7
  2678  1289  3141               	addfsr 1,1
  2679  128A  0801               	movf	1,w
  2680  128B  00BD               	movwf	_bytes_recieved^(0+640)
  2681  128C                     i2Ll6853:	
  2682  128C  0022               	movlb	2	; select bank2
  2683  128D  01E4               	clrf	cmd_rx_buf_put_task@PT_YIELD_FLAG^(0+256)
  2684  128E                     i2Ll6855:	
  2685  128E  0865               	movf	cmd_rx_buf_put_task@pt^(0+256),w
  2686  128F  0086               	movwf	6
  2687  1290  3002               	movlw	2	; select bank4/5
  2688  1291  0087               	movwf	7
  2689  1292  3035               	movlw	53
  2690  1293  3FC0               	movwi [0]fsr1
  2691  1294  3002               	movlw	2
  2692  1295  3FC1               	movwi [1]fsr1
  2693  1296                     i2Ll6857:	
  2694  1296  0864               	movf	cmd_rx_buf_put_task@PT_YIELD_FLAG^(0+256),w
  2695  1297  1D03               	btfss	3,2
  2696  1298  2A9C               	ljmp	i2Ll6861
  2697  1299  2ACC               	ljmp	iL8
  2698  129A                     i2Lu6161:	
  2699  129A  2A9C               	ljmp	i2Ll6861
  2700  129B                     i2Lu6160:	
  2701  129B  2ACC               	ljmp	iL8
  2702  129C                     i2Ll6861:	
  2703                           
  2704                           ;main.c: 566: } while (bytes_recieved == 0);
  2705  129C  0025               	movlb	5	; select bank5
  2706  129D  083D               	movf	_bytes_recieved^(0+640),w
  2707  129E  1903               	btfsc	3,2
  2708  129F  2A36               	ljmp	i2Ll6833
  2709  12A0  2AA2               	ljmp	i2Ll6863
  2710  12A1                     i2Lu6171:	
  2711  12A1  2A36               	ljmp	i2Ll6833
  2712  12A2                     i2Lu6170:	
  2713  12A2                     i2Ll6863:	
  2714                           
  2715                           ;main.c: 568: usb_rx_pp_size += 1;
  2716  12A2  0AC0               	incf	_usb_rx_pp_size^(0+640),f
  2717  12A3                     i2Ll6865:	
  2718                           
  2719                           ;main.c: 569: usb_rx_pp_put_ptr ^= 1;
  2720  12A3  3001               	movlw	1
  2721  12A4  06BF               	xorwf	_usb_rx_pp_put_ptr^(0+640),f
  2722  12A5  2A1C               	ljmp	i2Ll6825
  2723  12A6                     i2Ll6867:	
  2724  12A6  0865               	movf	cmd_rx_buf_put_task@pt^(0+256),w
  2725  12A7  0086               	movwf	6
  2726  12A8  3002               	movlw	2	; select bank4/5
  2727  12A9  0087               	movwf	7
  2728  12AA  3F40               	moviw [0]fsr1
  2729  12AB  00E0               	movwf	??_cmd_rx_buf_put_task^(0+256)
  2730  12AC  3F41               	moviw [1]fsr1
  2731  12AD  00E1               	movwf	(??_cmd_rx_buf_put_task^(0+256)+1)
  2732                           
  2733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2734                           ; Switch size 1, requested type "speed"
  2735                           ; Number of cases is 2, Range of values is 0 to 2
  2736                           ; switch strategies available:
  2737                           ; Name         Instructions Cycles
  2738                           ; simple_byte            7     4 (average)
  2739                           ; direct_byte           12     6 (fixed)
  2740                           ; jumptable            260     6 (fixed)
  2741                           ;	Chosen strategy is simple_byte
  2742  12AE  0861               	movf	(??_cmd_rx_buf_put_task+1)^(0+256),w
  2743  12AF  3A00               	xorlw	0	; case 0
  2744  12B0  1903               	btfsc	3,2
  2745  12B1  2AB6               	ljmp	i2Ll8529
  2746  12B2  3A02               	xorlw	2	; case 2
  2747  12B3  1903               	btfsc	3,2
  2748  12B4  2ABB               	ljmp	i2Ll8531
  2749  12B5  2AC5               	ljmp	i2Ll6871
  2750  12B6                     i2Ll8529:	
  2751                           
  2752                           ; Switch size 1, requested type "speed"
  2753                           ; Number of cases is 1, Range of values is 0 to 0
  2754                           ; switch strategies available:
  2755                           ; Name         Instructions Cycles
  2756                           ; simple_byte            4     3 (average)
  2757                           ; direct_byte            8     6 (fixed)
  2758                           ; jumptable            260     6 (fixed)
  2759                           ;	Chosen strategy is simple_byte
  2760  12B6  0860               	movf	??_cmd_rx_buf_put_task^(0+256),w
  2761  12B7  3A00               	xorlw	0	; case 0
  2762  12B8  1903               	btfsc	3,2
  2763  12B9  2A1A               	ljmp	i2Ll6823
  2764  12BA  2AC5               	ljmp	i2Ll6871
  2765  12BB                     i2Ll8531:	
  2766                           
  2767                           ; Switch size 1, requested type "speed"
  2768                           ; Number of cases is 3, Range of values is 36 to 53
  2769                           ; switch strategies available:
  2770                           ; Name         Instructions Cycles
  2771                           ; simple_byte           10     6 (average)
  2772                           ; direct_byte           45     9 (fixed)
  2773                           ; jumptable            263     9 (fixed)
  2774                           ;	Chosen strategy is simple_byte
  2775  12BB  0860               	movf	??_cmd_rx_buf_put_task^(0+256),w
  2776  12BC  3A24               	xorlw	36	; case 36
  2777  12BD  1903               	btfsc	3,2
  2778  12BE  2A25               	ljmp	i2Ll6827
  2779  12BF  3A16               	xorlw	22	; case 50
  2780  12C0  1903               	btfsc	3,2
  2781  12C1  2A7B               	ljmp	i2Ll6847
  2782  12C2  3A07               	xorlw	7	; case 53
  2783  12C3  1903               	btfsc	3,2
  2784  12C4  2A96               	ljmp	i2Ll6857
  2785  12C5                     i2Ll6871:	
  2786  12C5  0865               	movf	cmd_rx_buf_put_task@pt^(0+256),w
  2787  12C6  0086               	movwf	6
  2788  12C7  3002               	movlw	2	; select bank4/5
  2789  12C8  0087               	movwf	7
  2790  12C9  3000               	movlw	0
  2791  12CA  3FC0               	movwi [0]fsr1
  2792  12CB  3FC1               	movwi [1]fsr1
  2793  12CC                     i2Ll928:	
  2794  12CC                     iL8:	
  2795                           
  2796                           ;main.c: 672: cmd_rx_buf_get_task(&rx_get_pt);
  2797  12CC  3062               	movlw	(low (main@rx_get_pt| (0+512)))& (0+255)
  2798  12CD                     i3L__ptext6:	
  2799                           
  2800                           ;psect for function _cmd_rx_buf_get_task
  2801  12CD                     i3L_cmd_rx_buf_get_task:	
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in _cmd_rx_buf_get_task: [wreg-fsr1h+status,2+status,0]
  2805                           ;cmd_rx_buf_get_task@pt stored from wreg
  2806  12CD  0022               	movlb	2	; select bank2
  2807  12CE  00E2               	movwf	cmd_rx_buf_get_task@pt^(0+256)
  2808  12CF                     i3Ll6883:	
  2809  12CF  2B18               	ljmp	i3Ll6909
  2810  12D0                     i3Ll6885:	
  2811                           
  2812                           ;main.c: 583: usb_rx_pp_get_ptr = 0;
  2813  12D0  0025               	movlb	5	; select bank5
  2814  12D1  01BE               	clrf	_usb_rx_pp_get_ptr^(0+640)
  2815  12D2                     i3Ll6887:	
  2816  12D2  0022               	movlb	2	; select bank2
  2817  12D3  0862               	movf	cmd_rx_buf_get_task@pt^(0+256),w
  2818  12D4  0086               	movwf	6
  2819  12D5  3002               	movlw	2	; select bank4/5
  2820  12D6  0087               	movwf	7
  2821  12D7  304B               	movlw	75
  2822  12D8  3FC0               	movwi [0]fsr1
  2823  12D9  3002               	movlw	2
  2824  12DA  3FC1               	movwi [1]fsr1
  2825  12DB                     i3Ll6889:	
  2826  12DB  0025               	movlb	5	; select bank5
  2827  12DC  0840               	movf	_usb_rx_pp_size^(0+640),w
  2828  12DD  1D03               	btfss	3,2
  2829  12DE  2AE2               	ljmp	i3Ll6893
  2830  12DF  2B3B               	ljmp	iL46
  2831  12E0                     i3Lu6181:	
  2832  12E0  2AE2               	ljmp	i3Ll6893
  2833  12E1                     i3Lu6180:	
  2834  12E1  2B3B               	ljmp	iL46
  2835  12E2                     i3Ll6893:	
  2836                           
  2837                           ;main.c: 590: usb_rx_buf = usb_rx_buf_array[usb_rx_pp_get_ptr];
  2838  12E2  353E               	lslf	_usb_rx_pp_get_ptr^(0+640),w
  2839  12E3  3E30               	addlw	(low (_usb_rx_buf_array| (0+768)))& (0+255)
  2840  12E4  0086               	movwf	6
  2841  12E5  3003               	movlw	3	; select bank6/7
  2842  12E6  0087               	movwf	7
  2843  12E7  3F40               	moviw [0]fsr1
  2844  12E8  0024               	movlb	4	; select bank4
  2845  12E9  00EE               	movwf	_usb_rx_buf^(0+512)
  2846  12EA  3F41               	moviw [1]fsr1
  2847  12EB  00EF               	movwf	(_usb_rx_buf+1)^(0+512)
  2848  12EC                     i3Ll6895:	
  2849                           
  2850                           ;main.c: 591: usb_rx_ptr = 0;
  2851  12EC  0021               	movlb	1	; select bank1
  2852  12ED  01E7               	clrf	_usb_rx_ptr^(0+128)
  2853  12EE                     i3Ll6897:	
  2854                           
  2855                           ;main.c: 592: usb_rx_bytes_avail = usb_rx_pp_handle[usb_rx_pp_get_ptr]->CNT;
  2856  12EE  0025               	movlb	5	; select bank5
  2857  12EF  353E               	lslf	_usb_rx_pp_get_ptr^(0+640),w
  2858  12F0  3E2C               	addlw	(low (_usb_rx_pp_handle| (0+768)))& (0+255)
  2859  12F1  0086               	movwf	6
  2860  12F2  3003               	movlw	3	; select bank6/7
  2861  12F3  0087               	movwf	7
  2862  12F4  3F40               	moviw [0]fsr1
  2863  12F5  0022               	movlb	2	; select bank2
  2864  12F6  00E0               	movwf	??_cmd_rx_buf_get_task^(0+256)
  2865  12F7  3F41               	moviw [1]fsr1
  2866  12F8  00E1               	movwf	(??_cmd_rx_buf_get_task^(0+256)+1)
  2867  12F9  0860               	movf	??_cmd_rx_buf_get_task^(0+256),w
  2868  12FA  0086               	movwf	6
  2869  12FB  0861               	movf	(??_cmd_rx_buf_get_task+1)^(0+256),w
  2870  12FC  0087               	movwf	7
  2871  12FD  3141               	addfsr 1,1
  2872  12FE  0801               	movf	1,w
  2873  12FF  0024               	movlb	4	; select bank4
  2874  1300  00EB               	movwf	_usb_rx_bytes_avail^(0+512)
  2875  1301                     i3Ll6899:	
  2876  1301  0022               	movlb	2	; select bank2
  2877  1302  0862               	movf	cmd_rx_buf_get_task@pt^(0+256),w
  2878  1303  0086               	movwf	6
  2879  1304  3002               	movlw	2	; select bank4/5
  2880  1305  0087               	movwf	7
  2881  1306  3053               	movlw	83
  2882  1307  3FC0               	movwi [0]fsr1
  2883  1308  3002               	movlw	2
  2884  1309  3FC1               	movwi [1]fsr1
  2885  130A                     i3Ll6901:	
  2886  130A  0024               	movlb	4	; select bank4
  2887  130B  086B               	movf	_usb_rx_bytes_avail^(0+512),w
  2888  130C  0021               	movlb	1	; select bank1
  2889  130D  0267               	subwf	_usb_rx_ptr^(0+128),w
  2890  130E  1803               	btfsc	3,0
  2891  130F  2B13               	ljmp	i3Ll6905
  2892  1310  2B3B               	ljmp	iL46
  2893  1311                     i3Lu6191:	
  2894  1311  2B13               	ljmp	i3Ll6905
  2895  1312                     i3Lu6190:	
  2896  1312  2B3B               	ljmp	iL46
  2897  1313                     i3Ll6905:	
  2898                           
  2899                           ;main.c: 597: usb_rx_pp_size -= 1;
  2900  1313  0025               	movlb	5	; select bank5
  2901  1314  03C0               	decf	_usb_rx_pp_size^(0+640),f
  2902  1315                     i3Ll6907:	
  2903                           
  2904                           ;main.c: 598: usb_rx_pp_get_ptr ^= 1;
  2905  1315  3001               	movlw	1
  2906  1316  06BE               	xorwf	_usb_rx_pp_get_ptr^(0+640),f
  2907  1317  2AD2               	ljmp	i3Ll6887
  2908  1318                     i3Ll6909:	
  2909  1318  0862               	movf	cmd_rx_buf_get_task@pt^(0+256),w
  2910  1319  0086               	movwf	6
  2911  131A  3002               	movlw	2	; select bank4/5
  2912  131B  0087               	movwf	7
  2913  131C  3F40               	moviw [0]fsr1
  2914  131D  00E0               	movwf	??_cmd_rx_buf_get_task^(0+256)
  2915  131E  3F41               	moviw [1]fsr1
  2916  131F  00E1               	movwf	(??_cmd_rx_buf_get_task^(0+256)+1)
  2917                           
  2918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2919                           ; Switch size 1, requested type "speed"
  2920                           ; Number of cases is 2, Range of values is 0 to 2
  2921                           ; switch strategies available:
  2922                           ; Name         Instructions Cycles
  2923                           ; simple_byte            7     4 (average)
  2924                           ; direct_byte           12     6 (fixed)
  2925                           ; jumptable            260     6 (fixed)
  2926                           ;	Chosen strategy is simple_byte
  2927  1320  0861               	movf	(??_cmd_rx_buf_get_task+1)^(0+256),w
  2928  1321  3A00               	xorlw	0	; case 0
  2929  1322  1903               	btfsc	3,2
  2930  1323  2B28               	ljmp	i3Ll8533
  2931  1324  3A02               	xorlw	2	; case 2
  2932  1325  1903               	btfsc	3,2
  2933  1326  2B2D               	ljmp	i3Ll8535
  2934  1327  2B34               	ljmp	i3Ll6911
  2935  1328                     i3Ll8533:	
  2936                           
  2937                           ; Switch size 1, requested type "speed"
  2938                           ; Number of cases is 1, Range of values is 0 to 0
  2939                           ; switch strategies available:
  2940                           ; Name         Instructions Cycles
  2941                           ; simple_byte            4     3 (average)
  2942                           ; direct_byte            8     6 (fixed)
  2943                           ; jumptable            260     6 (fixed)
  2944                           ;	Chosen strategy is simple_byte
  2945  1328  0860               	movf	??_cmd_rx_buf_get_task^(0+256),w
  2946  1329  3A00               	xorlw	0	; case 0
  2947  132A  1903               	btfsc	3,2
  2948  132B  2AD0               	ljmp	i3Ll6885
  2949  132C  2B34               	ljmp	i3Ll6911
  2950  132D                     i3Ll8535:	
  2951                           
  2952                           ; Switch size 1, requested type "speed"
  2953                           ; Number of cases is 2, Range of values is 75 to 83
  2954                           ; switch strategies available:
  2955                           ; Name         Instructions Cycles
  2956                           ; simple_byte            7     4 (average)
  2957                           ; direct_byte           27     9 (fixed)
  2958                           ; jumptable            263     9 (fixed)
  2959                           ;	Chosen strategy is simple_byte
  2960  132D  0860               	movf	??_cmd_rx_buf_get_task^(0+256),w
  2961  132E  3A4B               	xorlw	75	; case 75
  2962  132F  1903               	btfsc	3,2
  2963  1330  2ADB               	ljmp	i3Ll6889
  2964  1331  3A18               	xorlw	24	; case 83
  2965  1332  1903               	btfsc	3,2
  2966  1333  2B0A               	ljmp	i3Ll6901
  2967  1334                     i3Ll6911:	
  2968  1334  0862               	movf	cmd_rx_buf_get_task@pt^(0+256),w
  2969  1335  0086               	movwf	6
  2970  1336  3002               	movlw	2	; select bank4/5
  2971  1337  0087               	movwf	7
  2972  1338  3000               	movlw	0
  2973  1339  3FC0               	movwi [0]fsr1
  2974  133A  3FC1               	movwi [1]fsr1
  2975  133B                     i3Ll951:	
  2976  133B                     iL46:	
  2977                           
  2978                           ;main.c: 673: cmd_tx_buffer_task(&tx_pt);
  2979  133B  3060               	movlw	(low (main@tx_pt| (0+512)))& (0+255)
  2980  133C                     i4L__ptext2:	
  2981                           
  2982                           ;psect for function _cmd_tx_buffer_task
  2983  133C                     i4L_cmd_tx_buffer_task:	
  2984                           
  2985                           ;incstack = 0
  2986                           ; Regs used in _cmd_tx_buffer_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2987                           ;cmd_tx_buffer_task@pt stored from wreg
  2988  133C  0022               	movlb	2	; select bank2
  2989  133D  00ED               	movwf	cmd_tx_buffer_task@pt^(0+256)
  2990  133E                     i4Ll6927:	
  2991                           
  2992                           ;main.c: 615: static BDT_ENTRY* usb_tx_handle;
  2993                           ;main.c: 617: { char PT_YIELD_FLAG = 1; switch((pt)->lc) { case 0:;
  2994  133E  01EC               	clrf	cmd_tx_buffer_task@PT_YIELD_FLAG^(0+256)
  2995  133F  0AEC               	incf	cmd_tx_buffer_task@PT_YIELD_FLAG^(0+256),f
  2996  1340  3191  2936         	ljmp	i4Ll6953
  2997                           
  2998                           	psect	text1
  2999  0000                     __ptext1:	
  3000 ;; *************** function _gpio_init *****************
  3001 ;; Defined at:
  3002 ;;		line 61 in file "main.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg
  3011 ;; Tracked objects:
  3012 ;;		On entry : 1F/4
  3013 ;;		On exit  : 1F/1
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:   10
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030  0000                     _gpio_init:	
  3031                           ;psect for function _gpio_init
  3032                           
  3033  0000                     __end_of_gpio_init:	
  3034                           ;main.c: 62: TRISC = 0b111111;
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in _gpio_init: [wreg]
  3038                           
  3039                           
  3040                           	psect	text2
  3041  0000                     __ptext2:	
  3042 ;; *************** function _cmd_tx_buffer_task *****************
  3043 ;; Defined at:
  3044 ;;		line 614 in file "main.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  pt              1    wreg     PTR struct pt
  3047 ;;		 -> main@tx_pt(2), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  pt              1   13[BANK2 ] PTR struct pt
  3050 ;;		 -> main@tx_pt(2), 
  3051 ;;  PT_YIELD_FLA    1   12[BANK2 ] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      unsigned char 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 18/5
  3058 ;;		On exit  : 18/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;Total ram usage:        4 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:   11
  3068 ;; This function calls:
  3069 ;;		_USBTransferOnePacket
  3070 ;; This function is called by:
  3071 ;;		_main
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075  0000                     _cmd_tx_buffer_task:	
  3076                           ;psect for function _cmd_tx_buffer_task
  3077                           
  3078  0000                     __end_of_cmd_tx_buffer_task:	
  3079                           ; Switch size 1, requested type "speed"
  3080                           ; Number of cases is 2, Range of values is 114 to 118
  3081                           ; switch strategies available:
  3082                           ; Name         Instructions Cycles
  3083                           ; simple_byte            7     4 (average)
  3084                           ; direct_byte           19     9 (fixed)
  3085                           ; jumptable            263     9 (fixed)
  3086                           ;	Chosen strategy is simple_byte
  3087                           
  3088                           ; Switch size 1, requested type "speed"
  3089                           ; Number of cases is 1, Range of values is 0 to 0
  3090                           ; switch strategies available:
  3091                           ; Name         Instructions Cycles
  3092                           ; simple_byte            4     3 (average)
  3093                           ; direct_byte            8     6 (fixed)
  3094                           ; jumptable            260     6 (fixed)
  3095                           ;	Chosen strategy is simple_byte
  3096                           
  3097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3098                           ; Switch size 1, requested type "speed"
  3099                           ; Number of cases is 2, Range of values is 0 to 2
  3100                           ; switch strategies available:
  3101                           ; Name         Instructions Cycles
  3102                           ; simple_byte            7     4 (average)
  3103                           ; direct_byte           12     6 (fixed)
  3104                           ; jumptable            260     6 (fixed)
  3105                           ;	Chosen strategy is simple_byte
  3106                           
  3107                           ;main.c: 629: } else {
  3108                           
  3109                           ;main.c: 627: usb_tx_ptr = 0;
  3110                           
  3111                           ;main.c: 623: {PIE2bits.USBIE = 1;};
  3112                           
  3113                           ;main.c: 622: usb_tx_handle = USBTransferOnePacket(2, 1, usb_tx_buf, usb_tx_ptr);
  3114                           
  3115                           ;main.c: 621: {PIE2bits.USBIE = 0;};
  3116                           
  3117                           ;main.c: 620: if (usb_tx_ptr > 0) {
  3118                           
  3119                           ;main.c: 615: static BDT_ENTRY* usb_tx_handle;
  3120                           ;main.c: 617: { char PT_YIELD_FLAG = 1; switch((pt)->lc) { case 0:;
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _cmd_tx_buffer_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3124                           ;cmd_tx_buffer_task@pt stored from wreg
  3125                           
  3126                           
  3127                           	psect	text3
  3128  1C71                     __ptext3:	
  3129 ;; *************** function _USBTransferOnePacket *****************
  3130 ;; Defined at:
  3131 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  ep              1    wreg     unsigned char 
  3134 ;;  dir             1    0[BANK2 ] unsigned char 
  3135 ;;  data            1    1[BANK2 ] PTR unsigned char 
  3136 ;;		 -> usb_tx_buf_0(64), 
  3137 ;;  len             1    2[BANK2 ] unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  ep              1    7[BANK2 ] unsigned char 
  3140 ;;  handle          2    8[BANK2 ] PTR volatile struct __BD
  3141 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2    0[BANK2 ] PTR void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 1F/2
  3148 ;;		On exit  : 1F/2
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3151 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;Total ram usage:       10 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:   10
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_cmd_tx_buffer_task
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _USBTransferOnePacket
  3167  1C71                     _USBTransferOnePacket:	
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  3171                           ;USBTransferOnePacket@ep stored from wreg
  3172  1C71  00E7               	movwf	USBTransferOnePacket@ep^(0+256)
  3173                           
  3174                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  3175                           ;usb_device.c: 1000: if(dir != 0)
  3176  1C72  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3177  1C73  1903               	btfsc	3,2
  3178  1C74  2C7E               	goto	l5895
  3179                           
  3180                           ;usb_device.c: 1001: {
  3181                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  3182  1C75  3567               	lslf	USBTransferOnePacket@ep^(0+256),w
  3183  1C76  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  3184  1C77  0086               	movwf	6
  3185  1C78  3002               	movlw	2	; select bank5/6
  3186  1C79  0087               	movwf	7
  3187  1C7A  3F40               	moviw [0]fsr1
  3188  1C7B  00E8               	movwf	USBTransferOnePacket@handle^(0+256)
  3189  1C7C  3F41               	moviw [1]fsr1
  3190  1C7D  2C86               	goto	L1
  3191  1C7E                     l5895:	
  3192                           ;usb_device.c: 1004: }
  3193                           
  3194                           
  3195                           ;usb_device.c: 1005: else
  3196                           ;usb_device.c: 1006: {
  3197                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  3198  1C7E  3567               	lslf	USBTransferOnePacket@ep^(0+256),w
  3199  1C7F  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  3200  1C80  0086               	movwf	6
  3201  1C81  3002               	movlw	2	; select bank5/6
  3202  1C82  0087               	movwf	7
  3203  1C83  3F40               	moviw [0]fsr1
  3204  1C84  00E8               	movwf	USBTransferOnePacket@handle^(0+256)
  3205  1C85  3F41               	moviw [1]fsr1
  3206  1C86                     L1:	
  3207  1C86  00E9               	movwf	(USBTransferOnePacket@handle+1)^(0+256)
  3208                           
  3209                           ;usb_device.c: 1009: }
  3210                           ;usb_device.c: 1013: if(handle == 0)
  3211  1C87  0468               	iorwf	USBTransferOnePacket@handle^(0+256),w
  3212  1C88  1D03               	btfss	3,2
  3213  1C89  2C8D               	goto	l5903
  3214                           
  3215                           ;usb_device.c: 1014: {
  3216                           ;usb_device.c: 1015: return 0;
  3217  1C8A  01E0               	clrf	?_USBTransferOnePacket^(0+256)
  3218  1C8B  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+256)
  3219  1C8C  0008               	return
  3220  1C8D                     l5903:	
  3221                           
  3222                           ;usb_device.c: 1016: }
  3223                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  3224  1C8D  0861               	movf	USBTransferOnePacket@data^(0+256),w
  3225  1C8E  00E3               	movwf	??_USBTransferOnePacket^(0+256)
  3226  1C8F  01E4               	clrf	(??_USBTransferOnePacket^(0+256)+1)
  3227  1C90  0868               	movf	USBTransferOnePacket@handle^(0+256),w
  3228  1C91  0086               	movwf	6
  3229  1C92  0869               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3230  1C93  0087               	movwf	7
  3231  1C94  3142               	addfsr 1,2
  3232  1C95  0863               	movf	??_USBTransferOnePacket^(0+256),w
  3233  1C96  3FC0               	movwi [0]fsr1
  3234  1C97  0864               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  3235  1C98  3FC1               	movwi [1]fsr1
  3236                           
  3237                           ;usb_device.c: 1030: handle->CNT = len;
  3238  1C99  0868               	movf	USBTransferOnePacket@handle^(0+256),w
  3239  1C9A  3E01               	addlw	1
  3240  1C9B  00E3               	movwf	??_USBTransferOnePacket^(0+256)
  3241  1C9C  3000               	movlw	0
  3242  1C9D  3D69               	addwfc	(USBTransferOnePacket@handle+1)^(0+256),w
  3243  1C9E  00E4               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  3244  1C9F  0863               	movf	??_USBTransferOnePacket^(0+256),w
  3245  1CA0  0086               	movwf	6
  3246  1CA1  0864               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  3247  1CA2  0087               	movwf	7
  3248  1CA3  0862               	movf	USBTransferOnePacket@len^(0+256),w
  3249  1CA4  0081               	movwf	1
  3250                           
  3251                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  3252  1CA5  0868               	movf	USBTransferOnePacket@handle^(0+256),w
  3253  1CA6  0086               	movwf	6
  3254  1CA7  0869               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3255  1CA8  0087               	movwf	7
  3256  1CA9  3040               	movlw	64
  3257  1CAA  0581               	andwf	1,f
  3258                           
  3259                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  3260  1CAB  0868               	movf	USBTransferOnePacket@handle^(0+256),w
  3261  1CAC  0086               	movwf	6
  3262  1CAD  0869               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3263  1CAE  0087               	movwf	7
  3264  1CAF  1581               	bsf	1,3
  3265                           
  3266                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  3267  1CB0  0868               	movf	USBTransferOnePacket@handle^(0+256),w
  3268  1CB1  0086               	movwf	6
  3269  1CB2  0869               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3270  1CB3  0087               	movwf	7
  3271  1CB4  1781               	bsf	1,7
  3272                           
  3273                           ;usb_device.c: 1036: if(dir != 0)
  3274  1CB5  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  3275  1CB6  1903               	btfsc	3,2
  3276  1CB7  2CCE               	goto	l5913
  3277                           
  3278                           ;usb_device.c: 1037: {
  3279                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  3280  1CB8  3567               	lslf	USBTransferOnePacket@ep^(0+256),w
  3281  1CB9  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  3282  1CBA  0086               	movwf	6
  3283  1CBB  3002               	movlw	2	; select bank5/6
  3284  1CBC  0087               	movwf	7
  3285  1CBD  3F40               	moviw [0]fsr1
  3286  1CBE  00E3               	movwf	??_USBTransferOnePacket^(0+256)
  3287  1CBF  3F41               	moviw [1]fsr1
  3288  1CC0  00E4               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3289  1CC1  3004               	movlw	4
  3290  1CC2  0663               	xorwf	??_USBTransferOnePacket^(0+256),w
  3291  1CC3  00E5               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3292  1CC4  0864               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  3293  1CC5  00E6               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3294  1CC6  3567               	lslf	USBTransferOnePacket@ep^(0+256),w
  3295  1CC7  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  3296  1CC8  0086               	movwf	6
  3297  1CC9  0865               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3298  1CCA  3FC0               	movwi [0]fsr1
  3299  1CCB  0866               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3300  1CCC  3FC1               	movwi [1]fsr1
  3301                           
  3302                           ;usb_device.c: 1040: }
  3303  1CCD  2CE3               	goto	l5915
  3304  1CCE                     l5913:	
  3305                           
  3306                           ;usb_device.c: 1041: else
  3307                           ;usb_device.c: 1042: {
  3308                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  3309  1CCE  3567               	lslf	USBTransferOnePacket@ep^(0+256),w
  3310  1CCF  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  3311  1CD0  0086               	movwf	6
  3312  1CD1  3002               	movlw	2	; select bank5/6
  3313  1CD2  0087               	movwf	7
  3314  1CD3  3F40               	moviw [0]fsr1
  3315  1CD4  00E3               	movwf	??_USBTransferOnePacket^(0+256)
  3316  1CD5  3F41               	moviw [1]fsr1
  3317  1CD6  00E4               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  3318  1CD7  3004               	movlw	4
  3319  1CD8  0663               	xorwf	??_USBTransferOnePacket^(0+256),w
  3320  1CD9  00E5               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  3321  1CDA  0864               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  3322  1CDB  00E6               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  3323  1CDC  3567               	lslf	USBTransferOnePacket@ep^(0+256),w
  3324  1CDD  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  3325  1CDE  0086               	movwf	6
  3326  1CDF  0865               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  3327  1CE0  3FC0               	movwi [0]fsr1
  3328  1CE1  0866               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  3329  1CE2  3FC1               	movwi [1]fsr1
  3330  1CE3                     l5915:	
  3331                           
  3332                           ;usb_device.c: 1045: }
  3333                           ;usb_device.c: 1046: return (void*)handle;
  3334  1CE3  0869               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  3335  1CE4  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+256)
  3336  1CE5  0868               	movf	USBTransferOnePacket@handle^(0+256),w
  3337  1CE6  00E0               	movwf	?_USBTransferOnePacket^(0+256)
  3338  1CE7  0008               	return
  3339  1CE8                     __end_of_USBTransferOnePacket:	
  3340                           
  3341                           	psect	text4
  3342  0000                     __ptext4:	
  3343 ;; *************** function _cmd_task *****************
  3344 ;; Defined at:
  3345 ;;		line 100 in file "main.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  pt              1    wreg     PTR struct pt
  3348 ;;		 -> main@cmd_pt(2), 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  pt              1   13[BANK2 ] PTR struct pt
  3351 ;;		 -> main@cmd_pt(2), 
  3352 ;;  data            1   12[BANK2 ] unsigned char 
  3353 ;;  last_phase_o    1   11[BANK2 ] unsigned char 
  3354 ;;  data            1    9[BANK2 ] unsigned char 
  3355 ;;  bit_to_set      1    8[BANK2 ] unsigned char 
  3356 ;;  last_phase_o    1    5[BANK2 ] unsigned char 
  3357 ;;  bit_to_set      1    7[BANK2 ] unsigned char 
  3358 ;;  last_phase_o    1    4[BANK2 ] unsigned char 
  3359 ;;  tmp             1   10[BANK2 ] unsigned char 
  3360 ;;  op1             1    6[BANK2 ] unsigned char 
  3361 ;;  PT_YIELD_FLA    1    3[BANK2 ] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      unsigned char 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 18/5
  3368 ;;		On exit  : 18/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;Total ram usage:       14 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:   10
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385  0000                     _cmd_task:	
  3386                           ;psect for function _cmd_task
  3387                           
  3388  0000                     __end_of_cmd_task:	
  3389                           ; Switch size 1, requested type "speed"
  3390                           ; Number of cases is 17, Range of values is 0 to 250
  3391                           ; switch strategies available:
  3392                           ; Name         Instructions Cycles
  3393                           ; simple_byte           52    27 (average)
  3394                           ; jumptable            260     6 (fixed)
  3395                           ;	Chosen strategy is simple_byte
  3396                           
  3397                           ; Switch size 1, requested type "speed"
  3398                           ; Number of cases is 10, Range of values is 0 to 241
  3399                           ; switch strategies available:
  3400                           ; Name         Instructions Cycles
  3401                           ; simple_byte           31    16 (average)
  3402                           ; jumptable            260     6 (fixed)
  3403                           ;	Chosen strategy is simple_byte
  3404                           
  3405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3406                           ; Switch size 1, requested type "speed"
  3407                           ; Number of cases is 2, Range of values is 0 to 1
  3408                           ; switch strategies available:
  3409                           ; Name         Instructions Cycles
  3410                           ; simple_byte            7     4 (average)
  3411                           ; direct_byte           10     6 (fixed)
  3412                           ; jumptable            260     6 (fixed)
  3413                           ;	Chosen strategy is simple_byte
  3414                           
  3415                           ;main.c: 508: TRISC = gpio_dir;
  3416                           
  3417                           ;main.c: 507: gpio_dir = cmd & 0x3f;
  3418                           
  3419                           ;main.c: 499: } else if (cmd == 0x21) {
  3420                           
  3421                           ;main.c: 497: status_sent = 0;
  3422                           
  3423                           ;main.c: 496: status = STATUS_SUCCESS;
  3424                           
  3425                           ;main.c: 494: } else if (cmd == 0x20) {
  3426                           
  3427                           ;main.c: 484: sie = cmd & 0x7;
  3428                           
  3429                           ;main.c: 473: status_sent = 1;
  3430                           
  3431                           ;main.c: 472: status = STATUS_FAIL;
  3432                           
  3433                           ;main.c: 470: if (loop_is_active) {
  3434                           
  3435                           ;main.c: 464: } else {
  3436                           
  3437                           ;main.c: 463: usb_rx_ptr = loop_start;
  3438                           
  3439                           ;main.c: 461: if (loop_is_active) {
  3440                           
  3441                           ;main.c: 460: if (loop_count > 0) {
  3442                           
  3443                           ;main.c: 458: loop_count -= 1;
  3444                           
  3445                           ;main.c: 456: } else if (cmd == 0x11) {
  3446                           
  3447                           ;main.c: 454: loop_is_active = 1;
  3448                           
  3449                           ;main.c: 452: loop_count |= ((uint16_t) tmp) << 8;
  3450                           
  3451                           ;main.c: 449: loop_count = tmp;
  3452                           
  3453                           ;main.c: 442: LATC = do0p1;
  3454                           
  3455                           ;main.c: 441: LATC = do0p0;
  3456                           
  3457                           ;main.c: 438: }
  3458                           ;main.c: 440: for (i = 0; i < num_bits; i += 1) {
  3459                           
  3460                           ;main.c: 437: LATC = do0p1;
  3461                           
  3462                           ;main.c: 436: LATC = do0p0;
  3463                           
  3464                           ;main.c: 435: LATC = do0p1;
  3465                           
  3466                           ;main.c: 434: LATC = do0p0;
  3467                           
  3468                           ;main.c: 433: LATC = do0p1;
  3469                           
  3470                           ;main.c: 432: LATC = do0p0;
  3471                           
  3472                           ;main.c: 431: LATC = do0p1;
  3473                           
  3474                           ;main.c: 430: LATC = do0p0;
  3475                           
  3476                           ;main.c: 429: LATC = do0p1;
  3477                           
  3478                           ;main.c: 428: LATC = do0p0;
  3479                           
  3480                           ;main.c: 427: LATC = do0p1;
  3481                           
  3482                           ;main.c: 426: LATC = do0p0;
  3483                           
  3484                           ;main.c: 425: LATC = do0p1;
  3485                           
  3486                           ;main.c: 424: LATC = do0p0;
  3487                           
  3488                           ;main.c: 423: LATC = do0p1;
  3489                           
  3490                           ;main.c: 422: LATC = do0p0;
  3491                           
  3492                           ;main.c: 421: for (i = 0; i < num_bytes; i += 1) {
  3493                           
  3494                           ;main.c: 417: LATC = do0p1 | last_phase_overlay;
  3495                           
  3496                           ;main.c: 416: LATC = do0p0 | last_phase_overlay;
  3497                           
  3498                           ;main.c: 415: } else {
  3499                           
  3500                           ;main.c: 414: LATC = do1p1 | last_phase_overlay;
  3501                           
  3502                           ;main.c: 413: LATC = do1p0 | last_phase_overlay;
  3503                           
  3504                           ;main.c: 412: if (data & 1) {
  3505                           
  3506                           ;main.c: 408: }
  3507                           ;main.c: 410: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
  3508                           
  3509                           ;main.c: 405: }
  3510                           ;main.c: 407: data = data >> 1;
  3511                           
  3512                           ;main.c: 404: LATC = do0p1;
  3513                           
  3514                           ;main.c: 403: LATC = do0p0;
  3515                           
  3516                           ;main.c: 402: } else {
  3517                           
  3518                           ;main.c: 401: LATC = do1p1;
  3519                           
  3520                           ;main.c: 400: LATC = do1p0;
  3521                           
  3522                           ;main.c: 399: if (data & 1) {
  3523                           
  3524                           ;main.c: 398: for (i = 0; i < num_bits - 1; i += 1) {
  3525                           
  3526                           ;main.c: 392: LATC = do0p1;
  3527                           
  3528                           ;main.c: 391: LATC = do0p0;
  3529                           
  3530                           ;main.c: 390: } else {
  3531                           
  3532                           ;main.c: 389: LATC = do1p1;
  3533                           
  3534                           ;main.c: 388: LATC = do1p0;
  3535                           
  3536                           ;main.c: 385: }
  3537                           ;main.c: 387: if (data & 0x80) {
  3538                           
  3539                           ;main.c: 384: LATC = do0p1;
  3540                           
  3541                           ;main.c: 383: LATC = do0p0;
  3542                           
  3543                           ;main.c: 382: } else {
  3544                           
  3545                           ;main.c: 381: LATC = do1p1;
  3546                           
  3547                           ;main.c: 380: LATC = do1p0;
  3548                           
  3549                           ;main.c: 377: }
  3550                           ;main.c: 379: if (data & 0x40) {
  3551                           
  3552                           ;main.c: 376: LATC = do0p1;
  3553                           
  3554                           ;main.c: 375: LATC = do0p0;
  3555                           
  3556                           ;main.c: 374: } else {
  3557                           
  3558                           ;main.c: 373: LATC = do1p1;
  3559                           
  3560                           ;main.c: 372: LATC = do1p0;
  3561                           
  3562                           ;main.c: 369: }
  3563                           ;main.c: 371: if (data & 0x20) {
  3564                           
  3565                           ;main.c: 368: LATC = do0p1;
  3566                           
  3567                           ;main.c: 367: LATC = do0p0;
  3568                           
  3569                           ;main.c: 366: } else {
  3570                           
  3571                           ;main.c: 365: LATC = do1p1;
  3572                           
  3573                           ;main.c: 364: LATC = do1p0;
  3574                           
  3575                           ;main.c: 361: }
  3576                           ;main.c: 363: if (data & 0x10) {
  3577                           
  3578                           ;main.c: 360: LATC = do0p1;
  3579                           
  3580                           ;main.c: 359: LATC = do0p0;
  3581                           
  3582                           ;main.c: 358: } else {
  3583                           
  3584                           ;main.c: 357: LATC = do1p1;
  3585                           
  3586                           ;main.c: 356: LATC = do1p0;
  3587                           
  3588                           ;main.c: 353: }
  3589                           ;main.c: 355: if (data & 0x08) {
  3590                           
  3591                           ;main.c: 352: LATC = do0p1;
  3592                           
  3593                           ;main.c: 351: LATC = do0p0;
  3594                           
  3595                           ;main.c: 350: } else {
  3596                           
  3597                           ;main.c: 349: LATC = do1p1;
  3598                           
  3599                           ;main.c: 348: LATC = do1p0;
  3600                           
  3601                           ;main.c: 345: }
  3602                           ;main.c: 347: if (data & 0x04) {
  3603                           
  3604                           ;main.c: 344: LATC = do0p1;
  3605                           
  3606                           ;main.c: 343: LATC = do0p0;
  3607                           
  3608                           ;main.c: 342: } else {
  3609                           
  3610                           ;main.c: 341: LATC = do1p1;
  3611                           
  3612                           ;main.c: 340: LATC = do1p0;
  3613                           
  3614                           ;main.c: 337: }
  3615                           ;main.c: 339: if (data & 0x02) {
  3616                           
  3617                           ;main.c: 336: LATC = do0p1;
  3618                           
  3619                           ;main.c: 335: LATC = do0p0;
  3620                           
  3621                           ;main.c: 334: } else {
  3622                           
  3623                           ;main.c: 333: LATC = do1p1;
  3624                           
  3625                           ;main.c: 332: LATC = do1p0;
  3626                           
  3627                           ;main.c: 331: if (data & 0x01) {
  3628                           
  3629                           ;main.c: 328: for (i = 0; i < num_bytes; i += 1) {
  3630                           
  3631                           ;main.c: 326: do1p1 = sie_configs[sie].do1p1;
  3632                           
  3633                           ;main.c: 325: do1p0 = sie_configs[sie].do1p0;
  3634                           
  3635                           ;main.c: 320: if (PORTC & input_mask) data = data | bit_to_set;
  3636                           
  3637                           ;main.c: 319: LATC = do0p1 | last_phase_overlay;
  3638                           
  3639                           ;main.c: 318: LATC = do0p0 | last_phase_overlay;
  3640                           
  3641                           ;main.c: 314: }
  3642                           ;main.c: 316: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
  3643                           
  3644                           ;main.c: 313: bit_to_set = bit_to_set << 1;
  3645                           
  3646                           ;main.c: 311: if (PORTC & input_mask) data = data | bit_to_set;
  3647                           
  3648                           ;main.c: 310: LATC = do0p1;
  3649                           
  3650                           ;main.c: 309: LATC = do0p0;
  3651                           
  3652                           ;main.c: 308: for (i = 0; i < num_bits - 1; i += 1) {
  3653                           
  3654                           ;main.c: 306: uint8_t bit_to_set = 1;
  3655                           
  3656                           ;main.c: 303: }
  3657                           ;main.c: 305: data = 0;
  3658                           
  3659                           ;main.c: 300: if (PORTC & input_mask) data = data | 0x80;
  3660                           
  3661                           ;main.c: 299: LATC = do0p1;
  3662                           
  3663                           ;main.c: 298: LATC = do0p0;
  3664                           
  3665                           ;main.c: 296: if (PORTC & input_mask) data = data | 0x40;
  3666                           
  3667                           ;main.c: 295: LATC = do0p1;
  3668                           
  3669                           ;main.c: 294: LATC = do0p0;
  3670                           
  3671                           ;main.c: 292: if (PORTC & input_mask) data = data | 0x20;
  3672                           
  3673                           ;main.c: 291: LATC = do0p1;
  3674                           
  3675                           ;main.c: 290: LATC = do0p0;
  3676                           
  3677                           ;main.c: 288: if (PORTC & input_mask) data = data | 0x10;
  3678                           
  3679                           ;main.c: 287: LATC = do0p1;
  3680                           
  3681                           ;main.c: 286: LATC = do0p0;
  3682                           
  3683                           ;main.c: 284: if (PORTC & input_mask) data = data | 0x08;
  3684                           
  3685                           ;main.c: 283: LATC = do0p1;
  3686                           
  3687                           ;main.c: 282: LATC = do0p0;
  3688                           
  3689                           ;main.c: 280: if (PORTC & input_mask) data = data | 0x04;
  3690                           
  3691                           ;main.c: 279: LATC = do0p1;
  3692                           
  3693                           ;main.c: 278: LATC = do0p0;
  3694                           
  3695                           ;main.c: 276: if (PORTC & input_mask) data = data | 0x02;
  3696                           
  3697                           ;main.c: 275: LATC = do0p1;
  3698                           
  3699                           ;main.c: 274: LATC = do0p0;
  3700                           
  3701                           ;main.c: 272: if (PORTC & input_mask) data = data | 0x01;
  3702                           
  3703                           ;main.c: 271: LATC = do0p1;
  3704                           
  3705                           ;main.c: 270: LATC = do0p0;
  3706                           
  3707                           ;main.c: 268: data = 0;
  3708                           
  3709                           ;main.c: 267: for (i = 0; i < num_bytes; i += 1) {
  3710                           
  3711                           ;main.c: 265: input_mask = sie_configs[sie].input_mask;
  3712                           
  3713                           ;main.c: 257: status_sent = 1;
  3714                           
  3715                           ;main.c: 255: if (!status_sent) {
  3716                           
  3717                           ;main.c: 253: status = STATUS_FAIL;
  3718                           
  3719                           ;main.c: 252: if (!compare_data_matches) {
  3720                           
  3721                           ;main.c: 249: loop_is_active = 0;
  3722                           
  3723                           ;main.c: 248: if (compare_data_matches) {
  3724                           
  3725                           ;main.c: 245: }
  3726                           ;main.c: 247: if (loop_is_active) {
  3727                           
  3728                           ;main.c: 244: compare_data_matches = 0;
  3729                           
  3730                           ;main.c: 243: if ((expected_data & mask) != (actual_data & mask)) {
  3731                           
  3732                           ;main.c: 237: if (PORTC & input_mask) actual_data = actual_data | bit_to_set;
  3733                           
  3734                           ;main.c: 236: LATC = do0p1 | last_phase_overlay;
  3735                           
  3736                           ;main.c: 235: LATC = do0p0 | last_phase_overlay;
  3737                           
  3738                           ;main.c: 231: }
  3739                           ;main.c: 233: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
  3740                           
  3741                           ;main.c: 230: bit_to_set = bit_to_set << 1;
  3742                           
  3743                           ;main.c: 228: if (PORTC & input_mask) actual_data = actual_data | bit_to_set;
  3744                           
  3745                           ;main.c: 227: LATC = do0p1;
  3746                           
  3747                           ;main.c: 226: LATC = do0p0;
  3748                           
  3749                           ;main.c: 225: for (i = 0; i < num_bits - 1; i += 1) {
  3750                           
  3751                           ;main.c: 223: uint8_t bit_to_set = 1;
  3752                           
  3753                           ;main.c: 219: }
  3754                           ;main.c: 220: }
  3755                           ;main.c: 222: actual_data = 0;
  3756                           
  3757                           ;main.c: 218: compare_data_matches = 0;
  3758                           
  3759                           ;main.c: 217: if ((expected_data & mask) != (actual_data & mask)) {
  3760                           
  3761                           ;main.c: 211: if (PORTC & input_mask) actual_data = actual_data | 0x80;
  3762                           
  3763                           ;main.c: 210: LATC = do0p1;
  3764                           
  3765                           ;main.c: 209: LATC = do0p0;
  3766                           
  3767                           ;main.c: 207: if (PORTC & input_mask) actual_data = actual_data | 0x40;
  3768                           
  3769                           ;main.c: 206: LATC = do0p1;
  3770                           
  3771                           ;main.c: 205: LATC = do0p0;
  3772                           
  3773                           ;main.c: 203: if (PORTC & input_mask) actual_data = actual_data | 0x20;
  3774                           
  3775                           ;main.c: 202: LATC = do0p1;
  3776                           
  3777                           ;main.c: 201: LATC = do0p0;
  3778                           
  3779                           ;main.c: 199: if (PORTC & input_mask) actual_data = actual_data | 0x10;
  3780                           
  3781                           ;main.c: 198: LATC = do0p1;
  3782                           
  3783                           ;main.c: 197: LATC = do0p0;
  3784                           
  3785                           ;main.c: 195: if (PORTC & input_mask) actual_data = actual_data | 0x08;
  3786                           
  3787                           ;main.c: 194: LATC = do0p1;
  3788                           
  3789                           ;main.c: 193: LATC = do0p0;
  3790                           
  3791                           ;main.c: 191: if (PORTC & input_mask) actual_data = actual_data | 0x04;
  3792                           
  3793                           ;main.c: 190: LATC = do0p1;
  3794                           
  3795                           ;main.c: 189: LATC = do0p0;
  3796                           
  3797                           ;main.c: 187: if (PORTC & input_mask) actual_data = actual_data | 0x02;
  3798                           
  3799                           ;main.c: 186: LATC = do0p1;
  3800                           
  3801                           ;main.c: 185: LATC = do0p0;
  3802                           
  3803                           ;main.c: 183: if (PORTC & input_mask) actual_data = actual_data | 0x01;
  3804                           
  3805                           ;main.c: 182: LATC = do0p1;
  3806                           
  3807                           ;main.c: 181: LATC = do0p0;
  3808                           
  3809                           ;main.c: 179: actual_data = 0;
  3810                           
  3811                           ;main.c: 178: for (i = 0; i < num_bytes; i += 1) {
  3812                           
  3813                           ;main.c: 176: input_mask = sie_configs[sie].input_mask;
  3814                           
  3815                           ;main.c: 174: compare_data_matches = 1;
  3816                           
  3817                           ;main.c: 173: if (inout_cfg == 0x0C) {
  3818                           
  3819                           ;main.c: 170: inout_cfg = sie_configs[sie].config_byte & 0xf;
  3820                           
  3821                           ;main.c: 169: do0p1 = sie_configs[sie].do0p1;
  3822                           
  3823                           ;main.c: 168: do0p0 = sie_configs[sie].do0p0;
  3824                           
  3825                           ;main.c: 163: sie = cmd & 0x7;
  3826                           
  3827                           ;main.c: 161: if (op1 == 0x18) {
  3828                           
  3829                           ;main.c: 159: uint8_t op1 = cmd & 0xF8;
  3830                           
  3831                           ;main.c: 158: } else {
  3832                           
  3833                           ;main.c: 155: LATC = cmd & ~gpio_dir;
  3834                           
  3835                           ;main.c: 154: byte_to_send = PORTC & gpio_dir;
  3836                           
  3837                           ;main.c: 152: } else if (op0 == 0x80) {
  3838                           
  3839                           ;main.c: 150: LATC = cmd & ~gpio_dir;
  3840                           
  3841                           ;main.c: 148: if (op0 == 0x40) {
  3842                           
  3843                           ;main.c: 146: op0 = cmd & 0xc0;
  3844                           
  3845                           ;main.c: 101: static uint8_t gpio_dir = 0b111111;
  3846                           ;main.c: 103: static uint8_t cmd;
  3847                           ;main.c: 104: static uint8_t op0;
  3848                           ;main.c: 105: static uint8_t sie;
  3849                           ;main.c: 106: static uint8_t num_bits;
  3850                           ;main.c: 107: static uint8_t num_bytes;
  3851                           ;main.c: 108: static uint8_t input_mask;
  3852                           ;main.c: 109: static uint8_t do0p0;
  3853                           ;main.c: 110: static uint8_t do0p1;
  3854                           ;main.c: 111: static uint8_t do1p0;
  3855                           ;main.c: 112: static uint8_t do1p1;
  3856                           ;main.c: 113: static uint8_t inout_cfg;
  3857                           ;main.c: 114: static uint8_t i;
  3858                           ;main.c: 116: static uint8_t loop_start = 3;
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _cmd_task: [wreg-fsr1h+status,2+status,0]
  3862                           ;cmd_task@pt stored from wreg
  3863                           
  3864                           
  3865                           	psect	text5
  3866  0000                     __ptext5:	
  3867 ;; *************** function _cmd_rx_buf_put_task *****************
  3868 ;; Defined at:
  3869 ;;		line 541 in file "main.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  pt              1    wreg     PTR struct pt
  3872 ;;		 -> main@rx_put_pt(2), 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  pt              1    5[BANK2 ] PTR struct pt
  3875 ;;		 -> main@rx_put_pt(2), 
  3876 ;;  PT_YIELD_FLA    1    4[BANK2 ] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      unsigned char 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 1F/1D
  3883 ;;		On exit  : 18/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3889 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;Total ram usage:        6 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:   10
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900  0000                     _cmd_rx_buf_put_task:	
  3901                           ;psect for function _cmd_rx_buf_put_task
  3902                           
  3903  0000                     __end_of_cmd_rx_buf_put_task:	
  3904                           ; Switch size 1, requested type "speed"
  3905                           ; Number of cases is 3, Range of values is 36 to 53
  3906                           ; switch strategies available:
  3907                           ; Name         Instructions Cycles
  3908                           ; simple_byte           10     6 (average)
  3909                           ; direct_byte           45     9 (fixed)
  3910                           ; jumptable            263     9 (fixed)
  3911                           ;	Chosen strategy is simple_byte
  3912                           
  3913                           ; Switch size 1, requested type "speed"
  3914                           ; Number of cases is 1, Range of values is 0 to 0
  3915                           ; switch strategies available:
  3916                           ; Name         Instructions Cycles
  3917                           ; simple_byte            4     3 (average)
  3918                           ; direct_byte            8     6 (fixed)
  3919                           ; jumptable            260     6 (fixed)
  3920                           ;	Chosen strategy is simple_byte
  3921                           
  3922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3923                           ; Switch size 1, requested type "speed"
  3924                           ; Number of cases is 2, Range of values is 0 to 2
  3925                           ; switch strategies available:
  3926                           ; Name         Instructions Cycles
  3927                           ; simple_byte            7     4 (average)
  3928                           ; direct_byte           12     6 (fixed)
  3929                           ; jumptable            260     6 (fixed)
  3930                           ;	Chosen strategy is simple_byte
  3931                           
  3932                           ;main.c: 569: usb_rx_pp_put_ptr ^= 1;
  3933                           
  3934                           ;main.c: 568: usb_rx_pp_size += 1;
  3935                           
  3936                           ;main.c: 566: } while (bytes_recieved == 0);
  3937                           
  3938                           ;main.c: 563: bytes_recieved = current_rx_handle->CNT;
  3939                           
  3940                           ;main.c: 560: current_rx_handle->STAT.Val |= 0x80;
  3941                           
  3942                           ;main.c: 559: current_rx_handle->STAT.Val |= 0x08;
  3943                           
  3944                           ;main.c: 558: current_rx_handle->STAT.Val &= 0x40;
  3945                           
  3946                           ;main.c: 557: current_rx_handle->CNT = 64;
  3947                           
  3948                           ;main.c: 556: current_rx_handle->ADR = (((uint16_t)(usb_rx_buf_array[usb_rx_pp_put_ptr])
      +                          ) & 0x7FFF);
  3949                           
  3950                           ;main.c: 553: bytes_recieved = 0;
  3951                           
  3952                           ;main.c: 550: current_rx_handle = usb_rx_pp_handle[usb_rx_pp_put_ptr];
  3953                           
  3954                           ;main.c: 544: usb_rx_pp_put_ptr = 0;
  3955                           
  3956                           ;main.c: 542: { char PT_YIELD_FLAG = 1; switch((pt)->lc) { case 0:;
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in _cmd_rx_buf_put_task: [wreg-fsr1h+status,2+status,0]
  3960                           ;cmd_rx_buf_put_task@pt stored from wreg
  3961                           
  3962                           
  3963                           	psect	text6
  3964  0000                     __ptext6:	
  3965 ;; *************** function _cmd_rx_buf_get_task *****************
  3966 ;; Defined at:
  3967 ;;		line 580 in file "main.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  pt              1    wreg     PTR struct pt
  3970 ;;		 -> main@rx_get_pt(2), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  pt              1    2[BANK2 ] PTR struct pt
  3973 ;;		 -> main@rx_get_pt(2), 
  3974 ;;  PT_YIELD_FLA    1    0        unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      unsigned char 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 18/5
  3981 ;;		On exit  : 18/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3988 ;;Total ram usage:        3 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:   10
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998  0000                     _cmd_rx_buf_get_task:	
  3999                           ;psect for function _cmd_rx_buf_get_task
  4000                           
  4001  0000                     __end_of_cmd_rx_buf_get_task:	
  4002                           ; Switch size 1, requested type "speed"
  4003                           ; Number of cases is 2, Range of values is 75 to 83
  4004                           ; switch strategies available:
  4005                           ; Name         Instructions Cycles
  4006                           ; simple_byte            7     4 (average)
  4007                           ; direct_byte           27     9 (fixed)
  4008                           ; jumptable            263     9 (fixed)
  4009                           ;	Chosen strategy is simple_byte
  4010                           
  4011                           ; Switch size 1, requested type "speed"
  4012                           ; Number of cases is 1, Range of values is 0 to 0
  4013                           ; switch strategies available:
  4014                           ; Name         Instructions Cycles
  4015                           ; simple_byte            4     3 (average)
  4016                           ; direct_byte            8     6 (fixed)
  4017                           ; jumptable            260     6 (fixed)
  4018                           ;	Chosen strategy is simple_byte
  4019                           
  4020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4021                           ; Switch size 1, requested type "speed"
  4022                           ; Number of cases is 2, Range of values is 0 to 2
  4023                           ; switch strategies available:
  4024                           ; Name         Instructions Cycles
  4025                           ; simple_byte            7     4 (average)
  4026                           ; direct_byte           12     6 (fixed)
  4027                           ; jumptable            260     6 (fixed)
  4028                           ;	Chosen strategy is simple_byte
  4029                           
  4030                           ;main.c: 598: usb_rx_pp_get_ptr ^= 1;
  4031                           
  4032                           ;main.c: 597: usb_rx_pp_size -= 1;
  4033                           
  4034                           ;main.c: 592: usb_rx_bytes_avail = usb_rx_pp_handle[usb_rx_pp_get_ptr]->CNT;
  4035                           
  4036                           ;main.c: 591: usb_rx_ptr = 0;
  4037                           
  4038                           ;main.c: 590: usb_rx_buf = usb_rx_buf_array[usb_rx_pp_get_ptr];
  4039                           
  4040                           ;main.c: 583: usb_rx_pp_get_ptr = 0;
  4041                           
  4042                           ;incstack = 0
  4043                           ; Regs used in _cmd_rx_buf_get_task: [wreg-fsr1h+status,2+status,0]
  4044                           ;cmd_rx_buf_get_task@pt stored from wreg
  4045                           
  4046                           
  4047                           	psect	text13
  4048  0837                     __ptext13:	
  4049 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4050 ;; Defined at:
  4051 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/3
  4062 ;;		On exit  : 18/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:   16
  4072 ;; This function calls:
  4073 ;;		_USBCheckStdRequest
  4074 ;;		_USBCtrlEPServiceComplete
  4075 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4076 ;; This function is called by:
  4077 ;;		_USBCtrlEPService
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           
  4082                           ;psect for function _USBCtrlTrfSetupHandler
  4083  0837                     _USBCtrlTrfSetupHandler:	
  4084  0837                     l7765:	
  4085                           ;incstack = 0
  4086 ;; hardware stack exceeded
  4087                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4088                           
  4089                           
  4090                           ;usb_device.c: 2470: shortPacketStatus = 0;
  4091  0837  0025               	movlb	5	; select bank5
  4092  0838  01DD               	clrf	_shortPacketStatus^(0+640)	;volatile
  4093                           
  4094                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  4095  0839  01D6               	clrf	_USBDeferStatusStagePacket^(0+640)	;volatile
  4096                           
  4097                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  4098  083A  01D3               	clrf	_USBDeferINDataStagePackets^(0+640)	;volatile
  4099                           
  4100                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  4101  083B  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+640)	;volatile
  4102                           
  4103                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  4104  083C  01D8               	clrf	_BothEP0OutUOWNsSet^(0+640)	;volatile
  4105                           
  4106                           ;usb_device.c: 2475: controlTransferState = 0;
  4107  083D  0024               	movlb	4	; select bank4
  4108  083E  01EC               	clrf	_controlTransferState^(0+512)	;volatile
  4109                           
  4110                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4111  083F  0025               	movlb	5	; select bank5
  4112  0840  0827               	movf	_pBDTEntryIn^(0+640),w
  4113  0841  0086               	movwf	6
  4114  0842  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  4115  0843  0087               	movwf	7
  4116  0844  3004               	movlw	4
  4117  0845  1381               	bcf	1,7
  4118                           
  4119                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4120  0846  0627               	xorwf	_pBDTEntryIn^(0+640),w
  4121  0847  00A7               	movwf	_pBDTEntryIn^(0+640)
  4122                           
  4123                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4124  0848  0086               	movwf	6
  4125  0849  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  4126  084A  0087               	movwf	7
  4127  084B  3004               	movlw	4
  4128  084C  1381               	bcf	1,7
  4129                           
  4130                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4131  084D  0627               	xorwf	_pBDTEntryIn^(0+640),w
  4132  084E  00A7               	movwf	_pBDTEntryIn^(0+640)
  4133                           
  4134                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4135  084F  0023               	movlb	3	; select bank3
  4136  0850  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  4137  0851  0086               	movwf	6
  4138  0852  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  4139  0853  0087               	movwf	7
  4140  0854  1381               	bcf	1,7
  4141                           
  4142                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  4143  0855  0021               	movlb	1	; select bank1
  4144  0856  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
  4145                           
  4146                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  4147  0857  01E3               	clrf	(_inPipes^(0+128)+3)	;volatile
  4148  0858  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4149                           
  4150                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  4151  0859  0025               	movlb	5	; select bank5
  4152  085A  01A2               	clrf	(_outPipes^(0+640)+2)	;volatile
  4153                           
  4154                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  4155  085B  01A3               	clrf	(_outPipes^(0+640)+3)	;volatile
  4156  085C  01A4               	clrf	((_outPipes+1)^(0+640)+3)	;volatile
  4157                           
  4158                           ;usb_device.c: 2500: USBCheckStdRequest();
  4159  085D  206A  3188         	fcall	_USBCheckStdRequest
  4160                           
  4161                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4162  085F  3003               	movlw	3
  4163  0860  0022               	movlb	2	; select bank2
  4164  0861  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  4165  0862  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  4166  0863  01EC               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  4167  0864  01ED               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  4168  0865  01EE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  4169  0866  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  4170  0867  2275               	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4171                           
  4172                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  4173  0868  3196  2E44         	ljmp	l5269
  4174  086A                     __end_of_USBCtrlTrfSetupHandler:	
  4175  086A                     __ptext16:	
  4176 ;; *************** function _USBCheckStdRequest *****************
  4177 ;; Defined at:
  4178 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 1F/5
  4189 ;;		On exit  : 18/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:   15
  4199 ;; This function calls:
  4200 ;;		_USBStdFeatureReqHandler
  4201 ;;		_USBStdGetDscHandler
  4202 ;;		_USBStdGetStatusHandler
  4203 ;;		_USBStdSetCfgHandler
  4204 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4205 ;; This function is called by:
  4206 ;;		_USBCtrlTrfSetupHandler
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function _USBCheckStdRequest
  4212  086A                     _USBCheckStdRequest:	
  4213                           
  4214                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  4215                           
  4216                           ;incstack = 0
  4217 ;; hardware stack exceeded
  4218                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4219  086A  0020               	movlb	0	; select bank0
  4220  086B  0E50               	swapf	80,w	;volatile
  4221  086C  0C89               	rrf	9,f
  4222  086D  3903               	andlw	3
  4223  086E  1D03               	btfss	3,2
  4224  086F  0008               	return
  4225                           
  4226                           ;usb_device.c: 2728: break;
  4227  0870  0851               	movf	81,w	;volatile
  4228                           
  4229                           ; Switch size 1, requested type "speed"
  4230                           ; Number of cases is 11, Range of values is 0 to 12
  4231                           ; switch strategies available:
  4232                           ; Name         Instructions Cycles
  4233                           ; direct_byte           32     6 (fixed)
  4234                           ; simple_byte           34    18 (average)
  4235                           ; jumptable            260     6 (fixed)
  4236                           ;	Chosen strategy is direct_byte
  4237  0871  0084               	movwf	4
  4238  0872  300D               	movlw	13
  4239  0873  0204               	subwf	4,w
  4240  0874  1803               	skipnc
  4241  0875  0008               	return
  4242  0876  3188               	movlp	high S8537
  4243  0877  3504               	lslf	4,w
  4244  0878  3E00               	addlw	low S8537
  4245  0879  0082               	movwf	2
  4246  087A                     l532:	
  4247  087A  0008               	return
  4248  087B                     l534:	
  4249                           ;usb_device.c: 2691: {
  4250                           ;usb_device.c: 2692: case 5:
  4251                           
  4252                           
  4253                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  4254  087B  0021               	movlb	1	; select bank1
  4255  087C  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4256                           
  4257                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  4258  087D  3008               	movlw	8
  4259  087E  0024               	movlb	4	; select bank4
  4260  087F  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
  4261                           
  4262                           ;usb_device.c: 2696: break;
  4263  0880  0008               	return
  4264  0881                     l7727:	
  4265                           
  4266                           ;usb_device.c: 2698: USBStdGetDscHandler();
  4267  0881  319C  2CE8         	ljmp	l4877
  4268  0883                     l7729:	
  4269                           ;usb_device.c: 2699: break;
  4270                           
  4271                           
  4272                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  4273  0883  319D  2DDE         	ljmp	l7559
  4274  0885                     l7731:	
  4275                           ;usb_device.c: 2702: break;
  4276                           
  4277                           
  4278                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4279  0885  30E8               	movlw	low _USBActiveConfiguration
  4280  0886  0021               	movlb	1	; select bank1
  4281  0887  00E0               	movwf	_inPipes^(0+128)	;volatile
  4282  0888  3002               	movlw	high _USBActiveConfiguration
  4283  0889  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  4284                           
  4285                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4286  088A  1462               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4287                           
  4288                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  4289  088B  3001               	movlw	1
  4290  088C  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  4291                           
  4292                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  4293  088D  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4294                           
  4295                           ;usb_device.c: 2708: break;
  4296  088E  0008               	return
  4297  088F                     l7739:	
  4298                           
  4299                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  4300  088F  319A  2AE9         	ljmp	l7611
  4301  0891                     l7741:	
  4302                           ;usb_device.c: 2711: break;
  4303                           
  4304                           
  4305                           ;usb_device.c: 2713: case 3:
  4306                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  4307  0891  28B1               	ljmp	l7639
  4308  0892                     l7743:	
  4309                           ;usb_device.c: 2715: break;
  4310                           
  4311                           
  4312                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4313  0892  0854               	movf	84,w	;volatile
  4314  0893  3EE6               	addlw	(low (_USBAlternateInterface| (0+512)))& (0+255)
  4315  0894  0021               	movlb	1	; select bank1
  4316  0895  00E0               	movwf	_inPipes^(0+128)	;volatile
  4317  0896  3002               	movlw	2
  4318  0897  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  4319                           
  4320                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4321  0898  1462               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4322                           
  4323                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  4324  0899  3001               	movlw	1
  4325  089A  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  4326                           
  4327                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  4328  089B  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4329                           
  4330                           ;usb_device.c: 2721: break;
  4331  089C  0008               	return
  4332  089D                     l543:	
  4333                           ;usb_device.c: 2722: case 11:
  4334                           
  4335                           
  4336                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  4337  089D  0021               	movlb	1	; select bank1
  4338  089E  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4339                           
  4340                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4341  089F  0020               	movlb	0	; select bank0
  4342  08A0  0854               	movf	84,w	;volatile
  4343  08A1  3EE6               	addlw	(low (_USBAlternateInterface| (0+512)))& (0+255)
  4344  08A2  0086               	movwf	6
  4345  08A3  3002               	movlw	2	; select bank5/6
  4346  08A4  0087               	movwf	7
  4347  08A5  0852               	movf	82,w	;volatile
  4348  08A6  0081               	movwf	1
  4349                           
  4350                           ;usb_device.c: 2725: break;
  4351  08A7  0008               	return
  4352  08A8                     l7753:	
  4353                           
  4354                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4355  08A8  3002               	movlw	2
  4356  08A9  0022               	movlb	2	; select bank2
  4357  08AA  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  4358  08AB  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  4359  08AC  01EC               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  4360  08AD  01ED               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  4361  08AE  01EE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  4362  08AF  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  4363  08B0  2A75               	ljmp	l7529
  4364  08B1                     __end_of_USBCheckStdRequest:	
  4365  08B1                     __ptext21:	
  4366 ;; *************** function _USBStdFeatureReqHandler *****************
  4367 ;; Defined at:
  4368 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  p               2    5[BANK3 ] PTR struct __BDT
  4373 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  4374 ;;  pUEP            2    2[BANK3 ] PTR unsigned char 
  4375 ;;		 -> UEP0(1), 
  4376 ;;  current_ep_d    1    4[BANK3 ] struct .
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 1A/0
  4383 ;;		On exit  : 18/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4387 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  4388 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4389 ;;      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0
  4390 ;;Total ram usage:        7 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:   14
  4393 ;; This function calls:
  4394 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4395 ;; This function is called by:
  4396 ;;		_USBCheckStdRequest
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function _USBStdFeatureReqHandler
  4402  08B1                     _USBStdFeatureReqHandler:	
  4403  08B1                     l7639:	
  4404                           ;incstack = 0
  4405 ;; hardware stack exceeded
  4406                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4407                           
  4408                           
  4409                           ;usb_device.c: 2756: BDT_ENTRY *p;
  4410                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  4411                           ;usb_device.c: 2761: unsigned char* pUEP;
  4412                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  4413                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  4414  08B1  0020               	movlb	0	; select bank0
  4415  08B2  0B52               	decfsz	82,w	;volatile
  4416  08B3  28C5               	goto	l7651
  4417  08B4  0850               	movf	80,w	;volatile
  4418  08B5  391F               	andlw	31
  4419  08B6  1D03               	skipz
  4420  08B7  28C5               	goto	l7651
  4421                           
  4422                           ;usb_device.c: 2801: {
  4423                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  4424  08B8  0021               	movlb	1	; select bank1
  4425  08B9  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4426                           
  4427                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  4428  08BA  3003               	movlw	3
  4429  08BB  0020               	movlb	0	; select bank0
  4430  08BC  0651               	xorwf	81,w	;volatile
  4431  08BD  1D03               	btfss	3,2
  4432  08BE  28C3               	goto	l7649
  4433                           
  4434                           ;usb_device.c: 2804: RemoteWakeup = 1;
  4435  08BF  3001               	movlw	1
  4436  08C0  0025               	movlb	5	; select bank5
  4437  08C1  00DB               	movwf	_RemoteWakeup^(0+640)	;volatile
  4438  08C2  28C5               	goto	l7651
  4439  08C3                     l7649:	
  4440                           
  4441                           ;usb_device.c: 2805: else
  4442                           ;usb_device.c: 2806: RemoteWakeup = 0;
  4443  08C3  0025               	movlb	5	; select bank5
  4444  08C4  01DB               	clrf	_RemoteWakeup^(0+640)	;volatile
  4445  08C5                     l7651:	
  4446                           
  4447                           ;usb_device.c: 2807: }
  4448                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  4449                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  4450                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  4451                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  4452  08C5  0020               	movlb	0	; select bank0
  4453  08C6  0852               	movf	82,w	;volatile
  4454  08C7  1D03               	btfss	3,2
  4455  08C8  0008               	return
  4456  08C9  0850               	movf	80,w	;volatile
  4457  08CA  391F               	andlw	31
  4458  08CB  3A02               	xorlw	2
  4459  08CC  1D03               	skipz
  4460  08CD  0008               	return
  4461  08CE  0854               	movf	84,w	;volatile
  4462  08CF  390F               	andlw	15
  4463  08D0  1903               	skipnz
  4464  08D1  0008               	return
  4465  08D2  0854               	movf	84,w	;volatile
  4466  08D3  390F               	andlw	15
  4467  08D4  0023               	movlb	3	; select bank3
  4468  08D5  00E0               	movwf	??_USBStdFeatureReqHandler^(0+384)
  4469  08D6  3003               	movlw	3
  4470  08D7  0260               	subwf	??_USBStdFeatureReqHandler^(0+384),w
  4471  08D8  1803               	skipnc
  4472  08D9  0008               	return
  4473  08DA  3020               	movlw	32
  4474  08DB  0024               	movlb	4	; select bank4
  4475  08DC  066D               	xorwf	_USBDeviceState^(0+512),w	;volatile
  4476  08DD  1D03               	btfss	3,2
  4477  08DE  0008               	return
  4478                           
  4479                           ;usb_device.c: 2814: {
  4480                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  4481  08DF  0021               	movlb	1	; select bank1
  4482  08E0  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4483                           
  4484                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  4485  08E1  0020               	movlb	0	; select bank0
  4486  08E2  1BD4               	btfsc	84,7	;volatile
  4487  08E3  28F5               	goto	l7665
  4488                           
  4489                           ;usb_device.c: 2821: {
  4490                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  4491  08E4  0854               	movf	84,w	;volatile
  4492  08E5  390F               	andlw	15
  4493  08E6  0709               	addwf	9,w
  4494  08E7  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  4495  08E8  0086               	movwf	6
  4496  08E9  3002               	movlw	2	; select bank5/6
  4497  08EA  0087               	movwf	7
  4498  08EB  3F40               	moviw [0]fsr1
  4499  08EC  0023               	movlb	3	; select bank3
  4500  08ED  00E5               	movwf	USBStdFeatureReqHandler@p^(0+384)
  4501  08EE  3F41               	moviw [1]fsr1
  4502  08EF  00E6               	movwf	(USBStdFeatureReqHandler@p+1)^(0+384)
  4503                           
  4504                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  4505  08F0  0020               	movlb	0	; select bank0
  4506  08F1  0854               	movf	84,w	;volatile
  4507  08F2  390F               	andlw	15
  4508  08F3  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  4509  08F4  2905               	goto	L4
  4510  08F5                     l7665:	
  4511                           ;usb_device.c: 2824: }
  4512                           
  4513                           
  4514                           ;usb_device.c: 2825: else
  4515                           ;usb_device.c: 2826: {
  4516                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  4517  08F5  0854               	movf	84,w	;volatile
  4518  08F6  390F               	andlw	15
  4519  08F7  0709               	addwf	9,w
  4520  08F8  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  4521  08F9  0086               	movwf	6
  4522  08FA  3002               	movlw	2	; select bank5/6
  4523  08FB  0087               	movwf	7
  4524  08FC  3F40               	moviw [0]fsr1
  4525  08FD  0023               	movlb	3	; select bank3
  4526  08FE  00E5               	movwf	USBStdFeatureReqHandler@p^(0+384)
  4527  08FF  3F41               	moviw [1]fsr1
  4528  0900  00E6               	movwf	(USBStdFeatureReqHandler@p+1)^(0+384)
  4529                           
  4530                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  4531  0901  0020               	movlb	0	; select bank0
  4532  0902  0854               	movf	84,w	;volatile
  4533  0903  390F               	andlw	15
  4534  0904  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  4535  0905                     L4:	
  4536  0905  0086               	movwf	6
  4537  0906  0801               	movf	1,w
  4538  0907  0023               	movlb	3	; select bank3
  4539  0908  00E4               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+384)
  4540                           
  4541                           ;usb_device.c: 2829: }
  4542                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  4543  0909  1864               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+384),0
  4544  090A  2916               	goto	l7671
  4545                           
  4546                           ;usb_device.c: 2836: {
  4547                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  4548  090B  30FB               	movlw	251
  4549  090C  00E0               	movwf	??_USBStdFeatureReqHandler^(0+384)
  4550  090D  30FF               	movlw	255
  4551  090E  00E1               	movwf	(??_USBStdFeatureReqHandler^(0+384)+1)
  4552  090F  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4553  0910  0560               	andwf	??_USBStdFeatureReqHandler^(0+384),w
  4554  0911  00E5               	movwf	USBStdFeatureReqHandler@p^(0+384)
  4555  0912  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4556  0913  0561               	andwf	(??_USBStdFeatureReqHandler+1)^(0+384),w
  4557  0914  00E6               	movwf	(USBStdFeatureReqHandler@p+1)^(0+384)
  4558                           
  4559                           ;usb_device.c: 2838: }
  4560  0915  2919               	goto	l7673
  4561  0916                     l7671:	
  4562                           
  4563                           ;usb_device.c: 2839: else
  4564                           ;usb_device.c: 2840: {
  4565                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  4566  0916  3004               	movlw	4
  4567  0917  0465               	iorwf	USBStdFeatureReqHandler@p^(0+384),w
  4568  0918  00E5               	movwf	USBStdFeatureReqHandler@p^(0+384)
  4569  0919                     l7673:	
  4570                           
  4571                           ;usb_device.c: 2842: }
  4572                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  4573  0919  0020               	movlb	0	; select bank0
  4574  091A  1BD4               	btfsc	84,7	;volatile
  4575  091B  2929               	goto	l7677
  4576                           
  4577                           ;usb_device.c: 2848: {
  4578                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  4579  091C  0854               	movf	84,w	;volatile
  4580  091D  390F               	andlw	15
  4581  091E  0709               	addwf	9,w
  4582  091F  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  4583  0920  0086               	movwf	6
  4584  0921  3002               	movlw	2	; select bank5/6
  4585  0922  0087               	movwf	7
  4586  0923  0023               	movlb	3	; select bank3
  4587  0924  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4588  0925  3FC0               	movwi [0]fsr1
  4589  0926  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4590  0927  3FC1               	movwi [1]fsr1
  4591                           
  4592                           ;usb_device.c: 2850: }
  4593  0928  2935               	goto	l7679
  4594  0929                     l7677:	
  4595                           
  4596                           ;usb_device.c: 2851: else
  4597                           ;usb_device.c: 2852: {
  4598                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  4599  0929  0854               	movf	84,w	;volatile
  4600  092A  390F               	andlw	15
  4601  092B  0709               	addwf	9,w
  4602  092C  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  4603  092D  0086               	movwf	6
  4604  092E  3002               	movlw	2	; select bank5/6
  4605  092F  0087               	movwf	7
  4606  0930  0023               	movlb	3	; select bank3
  4607  0931  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4608  0932  3FC0               	movwi [0]fsr1
  4609  0933  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4610  0934  3FC1               	movwi [1]fsr1
  4611  0935                     l7679:	
  4612                           
  4613                           ;usb_device.c: 2854: }
  4614                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  4615  0935  3003               	movlw	3
  4616  0936  0020               	movlb	0	; select bank0
  4617  0937  0651               	xorwf	81,w	;volatile
  4618  0938  1D03               	btfss	3,2
  4619  0939  295B               	goto	l7693
  4620                           
  4621                           ;usb_device.c: 2858: {
  4622                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  4623  093A  0023               	movlb	3	; select bank3
  4624  093B  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4625  093C  0086               	movwf	6
  4626  093D  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4627  093E  0087               	movwf	7
  4628  093F  1F81               	btfss	1,7
  4629  0940  294F               	goto	l7689
  4630                           
  4631                           ;usb_device.c: 2860: {
  4632                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  4633  0941  0020               	movlb	0	; select bank0
  4634  0942  1BD4               	btfsc	84,7	;volatile
  4635  0943  2948               	goto	l7687
  4636                           
  4637                           ;usb_device.c: 2864: {
  4638                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  4639  0944  0854               	movf	84,w	;volatile
  4640  0945  390F               	andlw	15
  4641  0946  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  4642  0947  294B               	goto	L5
  4643  0948                     l7687:	
  4644                           ;usb_device.c: 2866: }
  4645                           
  4646                           
  4647                           ;usb_device.c: 2867: else
  4648                           ;usb_device.c: 2868: {
  4649                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  4650  0948  0854               	movf	84,w	;volatile
  4651  0949  390F               	andlw	15
  4652  094A  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  4653  094B                     L5:	
  4654  094B  0086               	movwf	6
  4655  094C  3002               	movlw	2	; select bank5/6
  4656  094D  0087               	movwf	7
  4657  094E  1481               	bsf	1,1
  4658  094F                     l7689:	
  4659                           
  4660                           ;usb_device.c: 2870: }
  4661                           ;usb_device.c: 2871: }
  4662                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  4663  094F  0023               	movlb	3	; select bank3
  4664  0950  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4665  0951  0086               	movwf	6
  4666  0952  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4667  0953  0087               	movwf	7
  4668  0954  1501               	bsf	1,2
  4669                           
  4670                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  4671  0955  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4672  0956  0086               	movwf	6
  4673  0957  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4674  0958  0087               	movwf	7
  4675  0959  1781               	bsf	1,7
  4676                           
  4677                           ;usb_device.c: 2876: }
  4678  095A  0008               	return
  4679  095B                     l7693:	
  4680                           
  4681                           ;usb_device.c: 2877: else
  4682                           ;usb_device.c: 2878: {
  4683                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  4684  095B  3004               	movlw	4
  4685  095C  0023               	movlb	3	; select bank3
  4686  095D  0665               	xorwf	USBStdFeatureReqHandler@p^(0+384),w
  4687  095E  00E5               	movwf	USBStdFeatureReqHandler@p^(0+384)
  4688                           
  4689                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  4690  095F  0086               	movwf	6
  4691  0960  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4692  0961  0087               	movwf	7
  4693                           
  4694                           ;usb_device.c: 2885: {
  4695                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  4696  0962  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4697  0963  1F81               	btfss	1,7
  4698  0964  2980               	goto	L7
  4699  0965  0086               	movwf	6
  4700  0966  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4701  0967  0087               	movwf	7
  4702  0968  1381               	bcf	1,7
  4703                           
  4704                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  4705  0969  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4706  096A  0086               	movwf	6
  4707  096B  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4708  096C  0087               	movwf	7
  4709  096D  3005               	movlw	5
  4710  096E  1701               	bsf	1,6
  4711                           
  4712                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4713  096F  0022               	movlb	2	; select bank2
  4714  0970  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  4715  0971  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  4716  0972  0023               	movlb	3	; select bank3
  4717  0973  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4718  0974  0022               	movlb	2	; select bank2
  4719  0975  00ED               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  4720  0976  0023               	movlb	3	; select bank3
  4721  0977  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4722  0978  0022               	movlb	2	; select bank2
  4723  0979  00EC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  4724  097A  3002               	movlw	2
  4725  097B  00EE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  4726  097C  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  4727  097D  2275  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4728                           
  4729                           ;usb_device.c: 2891: }
  4730  097F  2984               	goto	l7703
  4731  0980                     L7:	
  4732                           ;usb_device.c: 2892: else
  4733                           ;usb_device.c: 2893: {
  4734                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  4735                           
  4736  0980  0086               	movwf	6
  4737  0981  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4738  0982  0087               	movwf	7
  4739  0983  1701               	bsf	1,6
  4740  0984                     l7703:	
  4741                           
  4742                           ;usb_device.c: 2896: }
  4743                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  4744  0984  3004               	movlw	4
  4745  0985  0023               	movlb	3	; select bank3
  4746  0986  0665               	xorwf	USBStdFeatureReqHandler@p^(0+384),w
  4747  0987  00E5               	movwf	USBStdFeatureReqHandler@p^(0+384)
  4748                           
  4749                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  4750  0988  18E4               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+384),1
  4751  0989  2990               	goto	l568
  4752  098A  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4753  098B  0086               	movwf	6
  4754  098C  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4755  098D  0087               	movwf	7
  4756  098E  1F81               	btfss	1,7
  4757  098F  29B7               	goto	l7715
  4758  0990                     l568:	
  4759                           
  4760                           ;usb_device.c: 2907: {
  4761                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  4762  0990  0020               	movlb	0	; select bank0
  4763  0991  1BD4               	btfsc	84,7	;volatile
  4764  0992  2997               	goto	l7711
  4765                           
  4766                           ;usb_device.c: 2909: {
  4767                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4768  0993  0854               	movf	84,w	;volatile
  4769  0994  390F               	andlw	15
  4770  0995  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  4771  0996  299A               	goto	L6
  4772  0997                     l7711:	
  4773                           ;usb_device.c: 2911: }
  4774                           
  4775                           
  4776                           ;usb_device.c: 2912: else
  4777                           ;usb_device.c: 2913: {
  4778                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4779  0997  0854               	movf	84,w	;volatile
  4780  0998  390F               	andlw	15
  4781  0999  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  4782  099A                     L6:	
  4783  099A  0086               	movwf	6
  4784  099B  3002               	movlw	2	; select bank5/6
  4785  099C  0087               	movwf	7
  4786  099D  1081               	bcf	1,1
  4787                           
  4788                           ;usb_device.c: 2915: }
  4789                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  4790  099E  0023               	movlb	3	; select bank3
  4791  099F  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4792  09A0  0086               	movwf	6
  4793  09A1  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4794  09A2  0087               	movwf	7
  4795  09A3  303B               	movlw	59
  4796  09A4  0581               	andwf	1,f
  4797                           
  4798                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4799  09A5  3005               	movlw	5
  4800  09A6  0022               	movlb	2	; select bank2
  4801  09A7  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  4802  09A8  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  4803  09A9  0023               	movlb	3	; select bank3
  4804  09AA  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4805  09AB  0022               	movlb	2	; select bank2
  4806  09AC  00ED               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  4807  09AD  0023               	movlb	3	; select bank3
  4808  09AE  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4809  09AF  0022               	movlb	2	; select bank2
  4810  09B0  00EC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  4811  09B1  3002               	movlw	2
  4812  09B2  00EE               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  4813  09B3  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  4814  09B4  2275  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4815                           
  4816                           ;usb_device.c: 2921: }
  4817  09B6  29BD               	goto	l7717
  4818  09B7                     l7715:	
  4819                           
  4820                           ;usb_device.c: 2922: else
  4821                           ;usb_device.c: 2923: {
  4822                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  4823  09B7  0865               	movf	USBStdFeatureReqHandler@p^(0+384),w
  4824  09B8  0086               	movwf	6
  4825  09B9  0866               	movf	(USBStdFeatureReqHandler@p+1)^(0+384),w
  4826  09BA  0087               	movwf	7
  4827  09BB  303B               	movlw	59
  4828  09BC  0581               	andwf	1,f
  4829  09BD                     l7717:	
  4830                           
  4831                           ;usb_device.c: 2926: }
  4832                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  4833  09BD  0020               	movlb	0	; select bank0
  4834  09BE  0854               	movf	84,w	;volatile
  4835  09BF  390F               	andlw	15
  4836  09C0  3E98               	addlw	152
  4837  09C1  0023               	movlb	3	; select bank3
  4838  09C2  00E0               	movwf	??_USBStdFeatureReqHandler^(0+384)
  4839  09C3  300E               	movlw	14
  4840  09C4  01E1               	clrf	(??_USBStdFeatureReqHandler^(0+384)+1)
  4841  09C5  3DE1               	addwfc	(??_USBStdFeatureReqHandler^(0+384)+1),f
  4842  09C6  0860               	movf	??_USBStdFeatureReqHandler^(0+384),w
  4843  09C7  00E2               	movwf	USBStdFeatureReqHandler@pUEP^(0+384)
  4844  09C8  0861               	movf	(??_USBStdFeatureReqHandler+1)^(0+384),w
  4845  09C9  00E3               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+384)
  4846                           
  4847                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  4848  09CA  0862               	movf	USBStdFeatureReqHandler@pUEP^(0+384),w
  4849  09CB  0086               	movwf	6
  4850  09CC  0863               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+384),w
  4851  09CD  0087               	movwf	7
  4852  09CE  1001               	bcf	1,0
  4853  09CF  0008               	return
  4854  09D0                     __end_of_USBStdFeatureReqHandler:	
  4855  09D0                     __ptext7:	
  4856 ;; *************** function _USBDeviceTasks *****************
  4857 ;; Defined at:
  4858 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  i               1   11[BANK3 ] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/1
  4869 ;;		On exit  : 1F/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4874 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4876 ;;Total ram usage:        2 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:   18
  4879 ;; This function calls:
  4880 ;;		_USBCtrlEPAllowStatusStage
  4881 ;;		_USBCtrlEPService
  4882 ;;		_USBDeviceInit
  4883 ;;		_USBIncrement1msInternalTimers
  4884 ;;		_USBStallHandler
  4885 ;;		_USBSuspend
  4886 ;;		_USBWakeFromSuspend
  4887 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _USBDeviceTasks
  4895  09D0                     _USBDeviceTasks:	
  4896                           
  4897                           ;usb_device.c: 479: uint8_t i;
  4898                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4899                           
  4900                           ;incstack = 0
  4901 ;; hardware stack exceeded
  4902                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4903  09D0  0024               	movlb	4	; select bank4
  4904  09D1  036D               	decf	_USBDeviceState^(0+512),w	;volatile
  4905  09D2  1D03               	btfss	3,2
  4906  09D3  29DD               	goto	l7985
  4907                           
  4908                           ;usb_device.c: 591: {
  4909                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4910  09D4  003D               	movlb	29	; select bank29
  4911  09D5  1A8E               	btfsc	14,5	;volatile
  4912  09D6  29DD               	goto	l7985
  4913                           
  4914                           ;usb_device.c: 602: {
  4915                           ;usb_device.c: 608: {UIR = 0;};
  4916  09D7  0190               	clrf	16	;volatile
  4917                           
  4918                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4919  09D8  1412               	bsf	18,0	;volatile
  4920                           
  4921                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4922  09D9  1612               	bsf	18,4	;volatile
  4923                           
  4924                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4925  09DA  3002               	movlw	2
  4926  09DB  0024               	movlb	4	; select bank4
  4927  09DC  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
  4928  09DD                     l7985:	
  4929                           
  4930                           ;usb_device.c: 617: }
  4931                           ;usb_device.c: 618: }
  4932                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4933  09DD  003D               	movlb	29	; select bank29
  4934  09DE  1910               	btfsc	16,2	;volatile
  4935  09DF  1D12               	btfss	18,2	;volatile
  4936  09E0  29E4               	goto	l7993
  4937                           
  4938                           ;usb_device.c: 635: {
  4939                           ;usb_device.c: 636: (UIR &= 0xFB);
  4940  09E1  1110               	bcf	16,2	;volatile
  4941                           
  4942                           ;usb_device.c: 640: USBWakeFromSuspend();
  4943  09E2  2403  3188         	fcall	_USBWakeFromSuspend
  4944  09E4                     l7993:	
  4945                           
  4946                           ;usb_device.c: 642: }
  4947                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4948  09E4  003D               	movlb	29	; select bank29
  4949  09E5  1C8E               	btfss	14,1	;volatile
  4950  09E6  29EA               	goto	l333
  4951                           
  4952                           ;usb_device.c: 648: {
  4953                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4954  09E7  0020               	movlb	0	; select bank0
  4955  09E8  1112               	bcf	18,2	;volatile
  4956                           
  4957                           ;usb_device.c: 650: return;
  4958  09E9  0008               	return
  4959  09EA                     l333:	
  4960                           
  4961                           ;usb_device.c: 651: }
  4962                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4963  09EA  1810               	btfsc	16,0	;volatile
  4964  09EB  1C12               	btfss	18,0	;volatile
  4965  09EC  29F6               	goto	l8007
  4966                           
  4967                           ;usb_device.c: 664: {
  4968                           ;usb_device.c: 665: USBDeviceInit();
  4969  09ED  2294  3188         	fcall	_USBDeviceInit
  4970                           
  4971                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4972  09EF  0021               	movlb	1	; select bank1
  4973  09F0  1512               	bsf	18,2	;volatile
  4974                           
  4975                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4976  09F1  3004               	movlw	4
  4977  09F2  0024               	movlb	4	; select bank4
  4978  09F3  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
  4979                           
  4980                           ;usb_device.c: 681: (UIR &= 0xFE);
  4981  09F4  003D               	movlb	29	; select bank29
  4982  09F5  1010               	bcf	16,0	;volatile
  4983  09F6                     l8007:	
  4984                           
  4985                           ;usb_device.c: 682: }
  4986                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4987  09F6  1A10               	btfsc	16,4	;volatile
  4988  09F7  1E12               	btfss	18,4	;volatile
  4989  09F8  29FB               	goto	l8013
  4990                           
  4991                           ;usb_device.c: 688: {
  4992                           ;usb_device.c: 694: USBSuspend();
  4993  09F9  23F3  3188         	fcall	_USBSuspend
  4994  09FB                     l8013:	
  4995                           
  4996                           ;usb_device.c: 696: }
  4997                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4998  09FB  003D               	movlb	29	; select bank29
  4999  09FC  1F10               	btfss	16,6	;volatile
  5000  09FD  2A17               	goto	l8031
  5001                           
  5002                           ;usb_device.c: 709: {
  5003                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  5004  09FE  1F12               	btfss	18,6	;volatile
  5005  09FF  2A0B               	goto	l8019
  5006                           
  5007                           ;usb_device.c: 712: {
  5008                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  5009  0A00  3073               	movlw	115
  5010  0A01  0022               	movlb	2	; select bank2
  5011  0A02  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  5012  0A03  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  5013  0A04  01EC               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  5014  0A05  01ED               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  5015  0A06  01EE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  5016  0A07  0AEE               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256),f
  5017  0A08  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  5018  0A09  2275  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5019  0A0B                     l8019:	
  5020                           
  5021                           ;usb_device.c: 714: }
  5022                           ;usb_device.c: 715: (UIR &= 0xBF);
  5023  0A0B  003D               	movlb	29	; select bank29
  5024  0A0C  1310               	bcf	16,6	;volatile
  5025                           
  5026                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  5027  0A0D  23C1  3188         	fcall	_USBIncrement1msInternalTimers
  5028                           
  5029                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  5030  0A0F  0857               	movf	_USBStatusStageTimeoutCounter^(0+640),w
  5031  0A10  1D03               	btfss	3,2
  5032                           
  5033                           ;usb_device.c: 736: {
  5034                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  5035  0A11  03D7               	decf	_USBStatusStageTimeoutCounter^(0+640),f	;volatile
  5036                           
  5037                           ;usb_device.c: 738: }
  5038                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  5039  0A12  0857               	movf	_USBStatusStageTimeoutCounter^(0+640),w	;volatile
  5040  0A13  1D03               	btfss	3,2
  5041  0A14  2A17               	goto	l8031
  5042                           
  5043                           ;usb_device.c: 745: {
  5044                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  5045  0A15  2315  3188         	fcall	_USBCtrlEPAllowStatusStage
  5046  0A17                     l8031:	
  5047                           
  5048                           ;usb_device.c: 747: }
  5049                           ;usb_device.c: 749: }
  5050                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  5051  0A17  003D               	movlb	29	; select bank29
  5052  0A18  1A90               	btfsc	16,5	;volatile
  5053  0A19  1E92               	btfss	18,5	;volatile
  5054  0A1A  2A1D               	goto	l8037
  5055                           
  5056                           ;usb_device.c: 752: {
  5057                           ;usb_device.c: 753: USBStallHandler();
  5058  0A1B  23D3  3188         	fcall	_USBStallHandler
  5059  0A1D                     l8037:	
  5060                           
  5061                           ;usb_device.c: 754: }
  5062                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  5063  0A1D  1890               	btfsc	16,1	;volatile
  5064  0A1E  1C92               	btfss	18,1	;volatile
  5065  0A1F  2A2E               	goto	l8045
  5066                           
  5067                           ;usb_device.c: 757: {
  5068                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  5069  0A20  30FF               	movlw	255
  5070  0A21  0022               	movlb	2	; select bank2
  5071  0A22  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  5072  0A23  307F               	movlw	127
  5073  0A24  00EB               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)+1)
  5074  0A25  01EC               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  5075  0A26  01ED               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  5076  0A27  01EE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  5077  0A28  0AEE               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256),f
  5078  0A29  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  5079  0A2A  2275  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5080                           
  5081                           ;usb_device.c: 759: {UEIR = 0;};
  5082  0A2C  003D               	movlb	29	; select bank29
  5083  0A2D  0193               	clrf	19	;volatile
  5084  0A2E                     l8045:	
  5085                           
  5086                           ;usb_device.c: 767: }
  5087                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  5088  0A2E  3004               	movlw	4
  5089  0A2F  0024               	movlb	4	; select bank4
  5090  0A30  026D               	subwf	_USBDeviceState^(0+512),w	;volatile
  5091  0A31  1803               	skipnc
  5092  0A32  2A36               	goto	l343
  5093                           
  5094                           ;usb_device.c: 775: {
  5095                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  5096  0A33  0020               	movlb	0	; select bank0
  5097  0A34  1112               	bcf	18,2	;volatile
  5098                           
  5099                           ;usb_device.c: 777: return;
  5100  0A35  0008               	return
  5101  0A36                     l343:	
  5102                           
  5103                           ;usb_device.c: 778: }
  5104                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  5105  0A36  003D               	movlb	29	; select bank29
  5106  0A37  1D92               	btfss	18,3	;volatile
  5107  0A38  2A72               	goto	l344
  5108                           
  5109                           ;usb_device.c: 784: {
  5110                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  5111  0A39  0023               	movlb	3	; select bank3
  5112  0A3A  01EB               	clrf	USBDeviceTasks@i^(0+384)
  5113  0A3B  2A6F               	goto	l345
  5114  0A3C                     l8055:	
  5115                           
  5116                           ;usb_device.c: 788: {
  5117                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  5118  0A3C  080F               	movf	15,w	;volatile
  5119  0A3D  0023               	movlb	3	; select bank3
  5120  0A3E  00EF               	movwf	_USTATcopy^(0+384)	;volatile
  5121                           
  5122                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  5123  0A3F  0C6F               	rrf	_USTATcopy^(0+384),w	;volatile
  5124  0A40  00EA               	movwf	??_USBDeviceTasks^(0+384)
  5125  0A41  0CEA               	rrf	??_USBDeviceTasks^(0+384),f
  5126  0A42  0C6A               	rrf	??_USBDeviceTasks^(0+384),w
  5127  0A43  390F               	andlw	15
  5128  0A44  0025               	movlb	5	; select bank5
  5129  0A45  00D9               	movwf	_endpoint_number^(0+640)	;volatile
  5130                           
  5131                           ;usb_device.c: 793: (UIR &= 0xF7);
  5132  0A46  003D               	movlb	29	; select bank29
  5133  0A47  1190               	bcf	16,3	;volatile
  5134                           
  5135                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  5136  0A48  0023               	movlb	3	; select bank3
  5137  0A49  196F               	btfsc	_USTATcopy^(0+384),2	;volatile
  5138  0A4A  2A4F               	goto	l8065
  5139                           
  5140                           ;usb_device.c: 799: {
  5141                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5142  0A4B  0025               	movlb	5	; select bank5
  5143  0A4C  0859               	movf	_endpoint_number^(0+640),w	;volatile
  5144  0A4D  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  5145  0A4E  2A52               	goto	L2
  5146  0A4F                     l8065:	
  5147                           ;usb_device.c: 801: }
  5148                           
  5149                           
  5150                           ;usb_device.c: 802: else
  5151                           ;usb_device.c: 803: {
  5152                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5153  0A4F  0025               	movlb	5	; select bank5
  5154  0A50  0859               	movf	_endpoint_number^(0+640),w	;volatile
  5155  0A51  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  5156  0A52                     L2:	
  5157  0A52  0086               	movwf	6
  5158  0A53  3002               	movlw	2	; select bank5/6
  5159  0A54  0087               	movwf	7
  5160  0A55  3001               	movlw	1
  5161  0A56  0681               	xorwf	1,f
  5162                           
  5163                           ;usb_device.c: 805: }
  5164                           ;usb_device.c: 810: if(endpoint_number == 0)
  5165  0A57  0859               	movf	_endpoint_number^(0+640),w	;volatile
  5166  0A58  1D03               	btfss	3,2
  5167  0A59  2A5D               	goto	l8071
  5168                           
  5169                           ;usb_device.c: 811: {
  5170                           ;usb_device.c: 812: USBCtrlEPService();
  5171  0A5A  2380  3188         	fcall	_USBCtrlEPService
  5172                           
  5173                           ;usb_device.c: 813: }
  5174  0A5C  2A69               	goto	l8073
  5175  0A5D                     l8071:	
  5176                           
  5177                           ;usb_device.c: 814: else
  5178                           ;usb_device.c: 815: {
  5179                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5180  0A5D  3072               	movlw	114
  5181  0A5E  0022               	movlb	2	; select bank2
  5182  0A5F  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  5183  0A60  30EF               	movlw	low _USTATcopy
  5184  0A61  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  5185  0A62  00EC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  5186  0A63  3001               	movlw	high _USTATcopy
  5187  0A64  00ED               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  5188  0A65  01EE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  5189  0A66  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  5190  0A67  2275  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5191  0A69                     l8073:	
  5192  0A69  0023               	movlb	3	; select bank3
  5193  0A6A  3004               	movlw	4
  5194  0A6B  0AEB               	incf	USBDeviceTasks@i^(0+384),f
  5195  0A6C  026B               	subwf	USBDeviceTasks@i^(0+384),w
  5196  0A6D  1803               	btfsc	3,0
  5197  0A6E  2A72               	goto	l344
  5198  0A6F                     l345:	
  5199                           
  5200                           ;usb_device.c: 786: {
  5201                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  5202  0A6F  003D               	movlb	29	; select bank29
  5203  0A70  1990               	btfsc	16,3	;volatile
  5204  0A71  2A3C               	goto	l8055
  5205  0A72                     l344:	
  5206                           
  5207                           ;usb_device.c: 822: }
  5208                           ;usb_device.c: 823: }
  5209                           ;usb_device.c: 824: }
  5210                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  5211  0A72  0020               	movlb	0	; select bank0
  5212  0A73  1112               	bcf	18,2	;volatile
  5213  0A74  0008               	return
  5214  0A75                     __end_of_USBDeviceTasks:	
  5215  0A75                     __ptext22:	
  5216 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  5217 ;; Defined at:
  5218 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  event           2   10[BANK2 ] enum E34
  5221 ;;  pdata           2   12[BANK2 ] PTR void 
  5222 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  5223 ;;		 -> NULL(0), 
  5224 ;;  size            2   14[BANK2 ] unsigned int 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      unsigned char 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 1F/2
  5233 ;;		On exit  : 18/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5236 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  5240 ;;Total ram usage:        6 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:   13
  5243 ;; This function calls:
  5244 ;;		_CDCInitEP
  5245 ;;		_USBCheckCDCRequest
  5246 ;; This function is called by:
  5247 ;;		_USBDeviceTasks
  5248 ;;		_USBStdSetCfgHandler
  5249 ;;		_USBSuspend
  5250 ;;		_USBWakeFromSuspend
  5251 ;;		_USBCtrlTrfSetupHandler
  5252 ;;		_USBCheckStdRequest
  5253 ;;		_USBStdFeatureReqHandler
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           
  5258                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  5259  0A75                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  5260  0A75                     l7529:	
  5261                           ;incstack = 0
  5262                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5263                           
  5264                           
  5265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5266                           ; Switch size 1, requested type "speed"
  5267                           ; Number of cases is 2, Range of values is 0 to 127
  5268                           ; switch strategies available:
  5269                           ; Name         Instructions Cycles
  5270                           ; simple_byte            7     4 (average)
  5271                           ; direct_byte          262     6 (fixed)
  5272                           ; jumptable            260     6 (fixed)
  5273                           ;	Chosen strategy is simple_byte
  5274                           
  5275                           ;usb_device_events.c: 86: break;
  5276                           
  5277                           ;usb_device_events.c: 51: switch( (int) event )
  5278  0A75  086B               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256),w
  5279  0A76  3A00               	xorlw	0	; case 0
  5280  0A77  1903               	skipnz
  5281  0A78  2A81               	goto	l8539
  5282  0A79  3A7F               	xorlw	127	; case 127
  5283  0A7A  1903               	skipnz
  5284  0A7B  2A8E               	goto	l8541
  5285  0A7C  2A93               	goto	l184
  5286  0A7D                     l7531:	
  5287                           
  5288                           ;usb_device_events.c: 76: CDCInitEP();
  5289  0A7D  319B  2B9D         	ljmp	l7517
  5290  0A7F                     l7533:	
  5291                           ;usb_device_events.c: 77: break;
  5292                           
  5293                           
  5294                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  5295  0A7F  319A  2A4F         	ljmp	l4489
  5296  0A81                     l8539:	
  5297                           
  5298                           ; Switch size 1, requested type "speed"
  5299                           ; Number of cases is 8, Range of values is 1 to 117
  5300                           ; switch strategies available:
  5301                           ; Name         Instructions Cycles
  5302                           ; direct_byte          243     9 (fixed)
  5303                           ; simple_byte           25    13 (average)
  5304                           ; jumptable            263     9 (fixed)
  5305                           ;	Chosen strategy is direct_byte
  5306  0A81  086A               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256),w
  5307  0A82  3EFF               	addlw	-1
  5308  0A83  1C03               	skipc
  5309  0A84  0008               	return
  5310  0A85  0084               	movwf	4
  5311  0A86  3075               	movlw	117
  5312  0A87  0204               	subwf	4,w
  5313  0A88  1803               	skipnc
  5314  0A89  0008               	return
  5315  0A8A  3187               	movlp	high S8543
  5316  0A8B  3504               	lslf	4,w
  5317  0A8C  3E0E               	addlw	low S8543
  5318  0A8D  0082               	movwf	2
  5319  0A8E                     l8541:	
  5320                           
  5321                           ; Switch size 1, requested type "speed"
  5322                           ; Number of cases is 1, Range of values is 255 to 255
  5323                           ; switch strategies available:
  5324                           ; Name         Instructions Cycles
  5325                           ; simple_byte            4     3 (average)
  5326                           ; direct_byte            7     5 (fixed)
  5327                           ; jumptable            263     9 (fixed)
  5328                           ;	Chosen strategy is simple_byte
  5329  0A8E  086A               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256),w
  5330  0A8F  3AFF               	xorlw	255	; case 255
  5331  0A90  1903               	skipnz
  5332  0A91  2A93               	goto	l184
  5333  0A92  2A93               	goto	l184
  5334  0A93                     l184:	
  5335  0A93  0008               	return
  5336  0A94                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  5337  0A94                     __ptext34:	
  5338 ;; *************** function _USBDeviceInit *****************
  5339 ;; Defined at:
  5340 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  p               2    0[BANK2 ] PTR unsigned char 
  5345 ;;		 -> UEP1(1), 
  5346 ;;  i               1    2[BANK2 ] unsigned char 
  5347 ;;  i               1    3[BANK2 ] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5352 ;; Tracked objects:
  5353 ;;		On entry : 2/4
  5354 ;;		On exit  : 1F/4
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;Total ram usage:        4 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:   10
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_SYSTEM_Initialize
  5368 ;;		_USBDeviceTasks
  5369 ;;		_main
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           
  5374                           ;psect for function _USBDeviceInit
  5375  0A94                     _USBDeviceInit:	
  5376                           
  5377                           ;usb_device.c: 279: uint8_t i;
  5378                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5379                           
  5380                           ;incstack = 0
  5381                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  5382  0A94  0021               	movlb	1	; select bank1
  5383  0A95  1112               	bcf	18,2	;volatile
  5384                           
  5385                           ;usb_device.c: 285: ;
  5386                           ;usb_device.c: 288: {UEIR = 0;};
  5387  0A96  003D               	movlb	29	; select bank29
  5388  0A97  0193               	clrf	19	;volatile
  5389                           
  5390                           ;usb_device.c: 291: {UIR = 0;};
  5391  0A98  0190               	clrf	16	;volatile
  5392                           
  5393                           ;usb_device.c: 294: UEP0 = 0;
  5394  0A99  0198               	clrf	24	;volatile
  5395                           
  5396                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  5397  0A9A  300E               	movlw	14
  5398  0A9B  0022               	movlb	2	; select bank2
  5399  0A9C  00E1               	movwf	(USBDeviceInit@p+1)^(0+256)
  5400  0A9D  3099               	movlw	153
  5401  0A9E  00E0               	movwf	USBDeviceInit@p^(0+256)
  5402  0A9F  01E2               	clrf	USBDeviceInit@i_1358^(0+256)
  5403  0AA0                     l7825:	
  5404  0AA0  0860               	movf	USBDeviceInit@p^(0+256),w
  5405  0AA1  0086               	movwf	6
  5406  0AA2  0861               	movf	(USBDeviceInit@p+1)^(0+256),w
  5407  0AA3  0087               	movwf	7
  5408  0AA4  0181               	clrf	1
  5409  0AA5  0AE0               	incf	USBDeviceInit@p^(0+256),f
  5410  0AA6  1903               	skipnz
  5411  0AA7  0AE1               	incf	(USBDeviceInit@p+1)^(0+256),f
  5412  0AA8  3002               	movlw	2
  5413  0AA9  0AE2               	incf	USBDeviceInit@i_1358^(0+256),f
  5414  0AAA  0262               	subwf	USBDeviceInit@i_1358^(0+256),w
  5415  0AAB  1C03               	skipc
  5416  0AAC  2AA0               	goto	l7825
  5417                           
  5418                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5419  0AAD  3016               	movlw	22
  5420  0AAE  003D               	movlb	29	; select bank29
  5421  0AAF  0091               	movwf	17	;volatile
  5422  0AB0  309F               	movlw	159
  5423  0AB1  0097               	movwf	23	;volatile
  5424  0AB2  307B               	movlw	123
  5425  0AB3  0092               	movwf	18	;volatile
  5426                           
  5427                           ;usb_device.c: 301: ;
  5428                           ;usb_device.c: 304: ;
  5429                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5430  0AB4  0022               	movlb	2	; select bank2
  5431  0AB5  01E3               	clrf	USBDeviceInit@i^(0+256)
  5432  0AB6                     l7841:	
  5433                           
  5434                           ;usb_device.c: 308: {
  5435                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5436  0AB6  0863               	movf	USBDeviceInit@i^(0+256),w
  5437  0AB7  0709               	addwf	9,w
  5438  0AB8  0709               	addwf	9,w
  5439  0AB9  3E20               	addlw	32
  5440  0ABA  0086               	movwf	6
  5441  0ABB  3000               	movlw	0
  5442  0ABC  0187               	clrf	7
  5443  0ABD  3FC0               	movwi [0]fsr1
  5444  0ABE  3FC1               	movwi [1]fsr1
  5445  0ABF  3FC2               	movwi [2]fsr1
  5446  0AC0  3FC3               	movwi [3]fsr1
  5447  0AC1  300C               	movlw	12
  5448  0AC2  0AE3               	incf	USBDeviceInit@i^(0+256),f
  5449  0AC3  0263               	subwf	USBDeviceInit@i^(0+256),w
  5450  0AC4  1C03               	skipc
  5451  0AC5  2AB6               	goto	l7841
  5452                           
  5453                           ;usb_device.c: 310: }
  5454                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5455  0AC6  003D               	movlb	29	; select bank29
  5456  0AC7  170E               	bsf	14,6	;volatile
  5457                           
  5458                           ;usb_device.c: 316: UADDR = 0x00;
  5459  0AC8  0196               	clrf	22	;volatile
  5460                           
  5461                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5462  0AC9  120E               	bcf	14,4	;volatile
  5463                           
  5464                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5465  0ACA  130E               	bcf	14,6	;volatile
  5466  0ACB                     l7853:	
  5467                           
  5468                           ;usb_device.c: 326: {
  5469                           ;usb_device.c: 327: (UIR &= 0xF7);
  5470  0ACB  1190               	bcf	16,3	;volatile
  5471                           
  5472                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5473  0ACC  0021               	movlb	1	; select bank1
  5474  0ACD  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
  5475                           
  5476                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5477  0ACE  0025               	movlb	5	; select bank5
  5478  0ACF  01A2               	clrf	(_outPipes^(0+640)+2)	;volatile
  5479                           
  5480                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5481  0AD0  01A3               	clrf	(_outPipes^(0+640)+3)	;volatile
  5482  0AD1  01A4               	clrf	((_outPipes+1)^(0+640)+3)	;volatile
  5483                           
  5484                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5485  0AD2  003D               	movlb	29	; select bank29
  5486  0AD3  1990               	btfsc	16,3	;volatile
  5487  0AD4  2ACB               	goto	l7853
  5488                           
  5489                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5490  0AD5  3001               	movlw	1
  5491  0AD6  0025               	movlb	5	; select bank5
  5492  0AD7  00D5               	movwf	_USBStatusStageEnabledFlag1^(0+640)	;volatile
  5493                           
  5494                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5495  0AD8  00D4               	movwf	_USBStatusStageEnabledFlag2^(0+640)	;volatile
  5496                           
  5497                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5498  0AD9  01D3               	clrf	_USBDeferINDataStagePackets^(0+640)	;volatile
  5499                           
  5500                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5501  0ADA  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+640)	;volatile
  5502                           
  5503                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5504  0ADB  01DA               	clrf	_USBBusIsSuspended^(0+640)	;volatile
  5505                           
  5506                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5507  0ADC  0022               	movlb	2	; select bank2
  5508  0ADD  01E3               	clrf	USBDeviceInit@i^(0+256)
  5509  0ADE                     l7869:	
  5510                           
  5511                           ;usb_device.c: 346: {
  5512                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5513  0ADE  3563               	lslf	USBDeviceInit@i^(0+256),w
  5514  0ADF  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  5515  0AE0  0086               	movwf	6
  5516  0AE1  3002               	movlw	2	; select bank5/6
  5517  0AE2  0087               	movwf	7
  5518  0AE3  3000               	movlw	0
  5519  0AE4  3FC0               	movwi [0]fsr1
  5520  0AE5  3FC1               	movwi [1]fsr1
  5521                           
  5522                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5523  0AE6  3563               	lslf	USBDeviceInit@i^(0+256),w
  5524  0AE7  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  5525  0AE8  0086               	movwf	6
  5526  0AE9  3000               	movlw	0
  5527  0AEA  3FC0               	movwi [0]fsr1
  5528  0AEB  3FC1               	movwi [1]fsr1
  5529                           
  5530                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5531  0AEC  0863               	movf	USBDeviceInit@i^(0+256),w
  5532  0AED  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  5533  0AEE  0086               	movwf	6
  5534  0AEF  0181               	clrf	1
  5535                           
  5536                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5537  0AF0  0863               	movf	USBDeviceInit@i^(0+256),w
  5538  0AF1  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  5539  0AF2  0086               	movwf	6
  5540  0AF3  3003               	movlw	3
  5541  0AF4  0181               	clrf	1
  5542  0AF5  0AE3               	incf	USBDeviceInit@i^(0+256),f
  5543  0AF6  0263               	subwf	USBDeviceInit@i^(0+256),w
  5544  0AF7  1C03               	skipc
  5545  0AF8  2ADE               	goto	l7869
  5546                           
  5547                           ;usb_device.c: 351: }
  5548                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5549  0AF9  3028               	movlw	40
  5550  0AFA  0025               	movlb	5	; select bank5
  5551  0AFB  00A7               	movwf	_pBDTEntryIn^(0+640)
  5552  0AFC  3016               	movlw	22
  5553  0AFD  01A8               	clrf	(_pBDTEntryIn+1)^(0+640)
  5554                           
  5555                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5556  0AFE  003D               	movlb	29	; select bank29
  5557  0AFF  0098               	movwf	24	;volatile
  5558                           
  5559                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5560  0B00  0020               	movlb	0	; select bank0
  5561  0B01  01A3               	clrf	35	;volatile
  5562  0B02  3050               	movlw	80
  5563  0B03  00A2               	movwf	34	;volatile
  5564                           
  5565                           ;usb_device.c: 359: BDT[0].CNT = 16;
  5566  0B04  3010               	movlw	16
  5567  0B05  00A1               	movwf	33	;volatile
  5568                           
  5569                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5570  0B06  3004               	movlw	4
  5571  0B07  00A0               	movwf	32	;volatile
  5572                           
  5573                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5574  0B08  17A0               	bsf	32,7	;volatile
  5575                           
  5576                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5577  0B09  0025               	movlb	5	; select bank5
  5578  0B0A  01E8               	clrf	_USBActiveConfiguration^(0+640)	;volatile
  5579                           
  5580                           ;usb_device.c: 366: USB1msTickCount = 0;
  5581  0B0B  0026               	movlb	6	; select bank6
  5582  0B0C  01A0               	clrf	_USB1msTickCount^(0+768)	;volatile
  5583  0B0D  01A1               	clrf	(_USB1msTickCount+1)^(0+768)	;volatile
  5584  0B0E  01A2               	clrf	(_USB1msTickCount+2)^(0+768)	;volatile
  5585  0B0F  01A3               	clrf	(_USB1msTickCount+3)^(0+768)	;volatile
  5586                           
  5587                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5588  0B10  0025               	movlb	5	; select bank5
  5589  0B11  01D1               	clrf	_USBTicksSinceSuspendEnd^(0+640)	;volatile
  5590                           
  5591                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5592  0B12  0024               	movlb	4	; select bank4
  5593  0B13  01ED               	clrf	_USBDeviceState^(0+512)	;volatile
  5594  0B14  0008               	return
  5595  0B15                     __end_of_USBDeviceInit:	
  5596  0B15                     __ptext29:	
  5597 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  5598 ;; Defined at:
  5599 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5608 ;; Tracked objects:
  5609 ;;		On entry : 18/5
  5610 ;;		On exit  : 18/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;Total ram usage:        2 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:   10
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_USBDeviceTasks
  5624 ;;		_USBCtrlEPServiceComplete
  5625 ;;		_USBCtrlTrfRxService
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function _USBCtrlEPAllowStatusStage
  5631  0B15                     _USBCtrlEPAllowStatusStage:	
  5632  0B15                     l4765:	
  5633                           ;incstack = 0
  5634                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  5635                           
  5636                           
  5637                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  5638  0B15  0025               	movlb	5	; select bank5
  5639  0B16  0855               	movf	_USBStatusStageEnabledFlag1^(0+640),w	;volatile
  5640  0B17  1D03               	btfss	3,2
  5641  0B18  0008               	return
  5642                           
  5643                           ;usb_device.c: 1424: {
  5644                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  5645  0B19  3001               	movlw	1
  5646  0B1A  00D5               	movwf	_USBStatusStageEnabledFlag1^(0+640)	;volatile
  5647                           
  5648                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  5649  0B1B  0854               	movf	_USBStatusStageEnabledFlag2^(0+640),w	;volatile
  5650  0B1C  1D03               	btfss	3,2
  5651  0B1D  0008               	return
  5652                           
  5653                           ;usb_device.c: 1427: {
  5654                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  5655  0B1E  3001               	movlw	1
  5656  0B1F  00D4               	movwf	_USBStatusStageEnabledFlag2^(0+640)	;volatile
  5657                           
  5658                           ;usb_device.c: 1432: if(controlTransferState == 2)
  5659  0B20  3002               	movlw	2
  5660  0B21  0024               	movlb	4	; select bank4
  5661  0B22  066C               	xorwf	_controlTransferState^(0+512),w	;volatile
  5662  0B23  1D03               	btfss	3,2
  5663  0B24  2B38               	goto	l4781
  5664                           
  5665                           ;usb_device.c: 1433: {
  5666                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  5667  0B25  0025               	movlb	5	; select bank5
  5668  0B26  0827               	movf	_pBDTEntryIn^(0+640),w
  5669  0B27  0086               	movwf	6
  5670  0B28  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  5671  0B29  0087               	movwf	7
  5672  0B2A  3141               	addfsr 1,1
  5673  0B2B  0181               	clrf	1
  5674                           
  5675                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5676  0B2C  0827               	movf	_pBDTEntryIn^(0+640),w
  5677  0B2D  0086               	movwf	6
  5678  0B2E  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  5679  0B2F  0087               	movwf	7
  5680  0B30  3048               	movlw	72
  5681  0B31  0081               	movwf	1
  5682                           
  5683                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5684  0B32  0827               	movf	_pBDTEntryIn^(0+640),w
  5685  0B33  0086               	movwf	6
  5686  0B34  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  5687  0B35  0087               	movwf	7
  5688  0B36  1781               	bsf	1,7
  5689                           
  5690                           ;usb_device.c: 1437: }
  5691  0B37  0008               	return
  5692  0B38                     l4781:	
  5693                           
  5694                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  5695  0B38  0B6C               	decfsz	_controlTransferState^(0+512),w	;volatile
  5696  0B39  0008               	return
  5697                           
  5698                           ;usb_device.c: 1439: {
  5699                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  5700  0B3A  0025               	movlb	5	; select bank5
  5701  0B3B  01D8               	clrf	_BothEP0OutUOWNsSet^(0+640)	;volatile
  5702                           
  5703                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
  5704  0B3C  0023               	movlb	3	; select bank3
  5705  0B3D  0A6E               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
  5706  0B3E  0086               	movwf	6
  5707  0B3F  3010               	movlw	16
  5708  0B40  0187               	clrf	7
  5709  0B41  0081               	movwf	1
  5710                           
  5711                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5712  0B42  3050               	movlw	80
  5713  0B43  0022               	movlb	2	; select bank2
  5714  0B44  00E0               	movwf	??_USBCtrlEPAllowStatusStage^(0+256)
  5715  0B45  01E1               	clrf	(??_USBCtrlEPAllowStatusStage^(0+256)+1)
  5716  0B46  0023               	movlb	3	; select bank3
  5717  0B47  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5718  0B48  3E02               	addlw	2
  5719  0B49  0086               	movwf	6
  5720  0B4A  0022               	movlb	2	; select bank2
  5721  0B4B  0860               	movf	??_USBCtrlEPAllowStatusStage^(0+256),w
  5722  0B4C  3FC0               	movwi [0]fsr1
  5723  0B4D  0861               	movf	(??_USBCtrlEPAllowStatusStage^(0+256)+1),w
  5724  0B4E  3FC1               	movwi [1]fsr1
  5725                           
  5726                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  5727  0B4F  0023               	movlb	3	; select bank3
  5728  0B50  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5729  0B51  0086               	movwf	6
  5730  0B52  3004               	movlw	4
  5731  0B53  0081               	movwf	1
  5732                           
  5733                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5734  0B54  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5735  0B55  0086               	movwf	6
  5736  0B56  3001               	movlw	1
  5737  0B57  1781               	bsf	1,7
  5738                           
  5739                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  5740  0B58  0025               	movlb	5	; select bank5
  5741  0B59  00D8               	movwf	_BothEP0OutUOWNsSet^(0+640)	;volatile
  5742                           
  5743                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
  5744  0B5A  0023               	movlb	3	; select bank3
  5745  0B5B  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  5746  0B5C  3E01               	addlw	1
  5747  0B5D  0022               	movlb	2	; select bank2
  5748  0B5E  00E0               	movwf	??_USBCtrlEPAllowStatusStage^(0+256)
  5749  0B5F  3000               	movlw	0
  5750  0B60  0023               	movlb	3	; select bank3
  5751  0B61  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  5752  0B62  0022               	movlb	2	; select bank2
  5753  0B63  00E1               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+256)
  5754  0B64  0860               	movf	??_USBCtrlEPAllowStatusStage^(0+256),w
  5755  0B65  0086               	movwf	6
  5756  0B66  0861               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+256),w
  5757  0B67  0087               	movwf	7
  5758  0B68  3010               	movlw	16
  5759  0B69  0081               	movwf	1
  5760                           
  5761                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5762  0B6A  3050               	movlw	80
  5763  0B6B  00E0               	movwf	??_USBCtrlEPAllowStatusStage^(0+256)
  5764  0B6C  01E1               	clrf	(??_USBCtrlEPAllowStatusStage^(0+256)+1)
  5765  0B6D  0023               	movlb	3	; select bank3
  5766  0B6E  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  5767  0B6F  0086               	movwf	6
  5768  0B70  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  5769  0B71  0087               	movwf	7
  5770  0B72  3142               	addfsr 1,2
  5771  0B73  0022               	movlb	2	; select bank2
  5772  0B74  0860               	movf	??_USBCtrlEPAllowStatusStage^(0+256),w
  5773  0B75  3FC0               	movwi [0]fsr1
  5774  0B76  0861               	movf	(??_USBCtrlEPAllowStatusStage^(0+256)+1),w
  5775  0B77  3FC1               	movwi [1]fsr1
  5776                           
  5777                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  5778  0B78  0023               	movlb	3	; select bank3
  5779  0B79  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  5780  0B7A  0086               	movwf	6
  5781  0B7B  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  5782  0B7C  0087               	movwf	7
  5783  0B7D  3080               	movlw	128
  5784  0B7E  0081               	movwf	1
  5785  0B7F  0008               	return
  5786  0B80                     __end_of_USBCtrlEPAllowStatusStage:	
  5787  0B80                     __ptext12:	
  5788 ;; *************** function _USBCtrlEPService *****************
  5789 ;; Defined at:
  5790 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 1F/5
  5801 ;;		On exit  : 18/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Temps:          0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  5807 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  5808 ;;Total ram usage:        3 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:   17
  5811 ;; This function calls:
  5812 ;;		_USBCtrlTrfInHandler
  5813 ;;		_USBCtrlTrfOutHandler
  5814 ;;		_USBCtrlTrfSetupHandler
  5815 ;; This function is called by:
  5816 ;;		_USBDeviceTasks
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           
  5821                           ;psect for function _USBCtrlEPService
  5822  0B80                     _USBCtrlEPService:	
  5823                           
  5824                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5825                           
  5826                           ;incstack = 0
  5827 ;; hardware stack exceeded
  5828                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5829  0B80  302D               	movlw	45
  5830  0B81  00D7               	movwf	_USBStatusStageTimeoutCounter^(0+640)	;volatile
  5831                           
  5832                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5833  0B82  0023               	movlb	3	; select bank3
  5834  0B83  086F               	movf	_USTATcopy^(0+384),w	;volatile
  5835  0B84  39FD               	andlw	253
  5836  0B85  1D03               	btfss	3,2
  5837  0B86  2BB9               	goto	l7969
  5838                           
  5839                           ;usb_device.c: 2383: {
  5840                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5841  0B87  366F               	lsrf	_USTATcopy^(0+384),w	;volatile
  5842  0B88  393F               	andlw	63
  5843  0B89  0709               	addwf	9,w
  5844  0B8A  0709               	addwf	9,w
  5845  0B8B  3E20               	addlw	32
  5846  0B8C  00EE               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  5847                           
  5848                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5849  0B8D  00EC               	movwf	_pBDTEntryEP0OutNext^(0+384)
  5850  0B8E  39FF               	andlw	255
  5851  0B8F  1D03               	skipz
  5852  0B90  3000               	movlw	0
  5853  0B91  00ED               	movwf	(_pBDTEntryEP0OutNext+1)^(0+384)
  5854                           
  5855                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5856  0B92  3004               	movlw	4
  5857  0B93  066C               	xorwf	_pBDTEntryEP0OutNext^(0+384),w
  5858  0B94  00EC               	movwf	_pBDTEntryEP0OutNext^(0+384)
  5859                           
  5860                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5861  0B95  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5862  0B96  0086               	movwf	6
  5863  0B97  0187               	clrf	7
  5864  0B98  0C01               	rrf	1,w
  5865  0B99  0C89               	rrf	9,f
  5866  0B9A  390F               	andlw	15
  5867  0B9B  3A0D               	xorlw	13
  5868  0B9C  1D03               	skipz
  5869  0B9D  2BB7               	goto	l7967
  5870                           
  5871                           ;usb_device.c: 2400: {
  5872                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  5873  0B9E  3050               	movlw	80
  5874  0B9F  0086               	movwf	6
  5875  0BA0  0023               	movlb	3	; select bank3
  5876  0BA1  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5877  0BA2  3E02               	addlw	2
  5878  0BA3  0084               	movwf	4
  5879  0BA4  0185               	clrf	5
  5880  0BA5  3F00               	moviw [0]fsr0
  5881  0BA6  00E7               	movwf	??_USBCtrlEPService^(0+384)
  5882  0BA7  3F01               	moviw [1]fsr0
  5883  0BA8  00E8               	movwf	(??_USBCtrlEPService^(0+384)+1)
  5884  0BA9  0867               	movf	??_USBCtrlEPService^(0+384),w
  5885  0BAA  0084               	movwf	4
  5886  0BAB  0868               	movf	(??_USBCtrlEPService+1)^(0+384),w
  5887  0BAC  0085               	movwf	5
  5888  0BAD  3008               	movlw	8
  5889  0BAE  00E9               	movwf	(??_USBCtrlEPService+2)^(0+384)
  5890  0BAF  0869               	movf	(??_USBCtrlEPService+2)^(0+384),w
  5891  0BB0  1903               	skipnz
  5892  0BB1  2BB6               	goto	l7965
  5893  0BB2                     u694m0:	
  5894  0BB2  0012               	moviw fsr0++
  5895  0BB3  001E               	movwi fsr1++
  5896  0BB4  0BE9               	decfsz	(??_USBCtrlEPService+2)^(0+384),f
  5897  0BB5  2BB2               	goto	u694m0
  5898  0BB6                     l7965:	
  5899                           
  5900                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5901  0BB6  2837               	ljmp	l7765
  5902  0BB7                     l7967:	
  5903                           ;usb_device.c: 2409: }
  5904                           
  5905                           
  5906                           ;usb_device.c: 2410: else
  5907                           ;usb_device.c: 2411: {
  5908                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  5909  0BB7  319F  2F21         	ljmp	l5579
  5910  0BB9                     l7969:	
  5911                           
  5912                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5913  0BB9  30FD               	movlw	253
  5914  0BBA  056F               	andwf	_USTATcopy^(0+384),w	;volatile
  5915  0BBB  00E7               	movwf	??_USBCtrlEPService^(0+384)
  5916  0BBC  3A04               	xorlw	4
  5917  0BBD  1D03               	btfss	3,2
  5918  0BBE  0008               	return
  5919                           
  5920                           ;usb_device.c: 2417: {
  5921                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  5922  0BBF  3197  2F32         	ljmp	l5597
  5923  0BC1                     __end_of_USBCtrlEPService:	
  5924  0BC1                     __ptext11:	
  5925 ;; *************** function _USBIncrement1msInternalTimers *****************
  5926 ;; Defined at:
  5927 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;		None
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;		None
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, status,0
  5936 ;; Tracked objects:
  5937 ;;		On entry : 1F/1D
  5938 ;;		On exit  : 1F/5
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;Total ram usage:        0 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:   10
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_USBDeviceTasks
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           
  5956                           ;psect for function _USBIncrement1msInternalTimers
  5957  0BC1                     _USBIncrement1msInternalTimers:	
  5958                           
  5959                           ;usb_device.c: 3033: USB1msTickCount++;
  5960                           
  5961                           ;incstack = 0
  5962                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5963  0BC1  3001               	movlw	1
  5964  0BC2  0026               	movlb	6	; select bank6
  5965  0BC3  07A0               	addwf	_USB1msTickCount^(0+768),f	;volatile
  5966  0BC4  3000               	movlw	0
  5967  0BC5  3DA1               	addwfc	(_USB1msTickCount+1)^(0+768),f	;volatile
  5968  0BC6  3DA2               	addwfc	(_USB1msTickCount+2)^(0+768),f	;volatile
  5969  0BC7  3DA3               	addwfc	(_USB1msTickCount+3)^(0+768),f	;volatile
  5970                           
  5971                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5972  0BC8  0025               	movlb	5	; select bank5
  5973  0BC9  085A               	movf	_USBBusIsSuspended^(0+640),w	;volatile
  5974  0BCA  1D03               	btfss	3,2
  5975  0BCB  0008               	return
  5976                           
  5977                           ;usb_device.c: 3035: {
  5978                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5979  0BCC  0AD1               	incf	_USBTicksSinceSuspendEnd^(0+640),f	;volatile
  5980                           
  5981                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5982  0BCD  0851               	movf	_USBTicksSinceSuspendEnd^(0+640),w	;volatile
  5983  0BCE  1D03               	btfss	3,2
  5984  0BCF  0008               	return
  5985                           
  5986                           ;usb_device.c: 3039: {
  5987                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5988  0BD0  30FF               	movlw	255
  5989  0BD1  00D1               	movwf	_USBTicksSinceSuspendEnd^(0+640)	;volatile
  5990  0BD2  0008               	return
  5991  0BD3                     __end_of_USBIncrement1msInternalTimers:	
  5992  0BD3                     __ptext10:	
  5993 ;; *************** function _USBStallHandler *****************
  5994 ;; Defined at:
  5995 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;		None
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6004 ;; Tracked objects:
  6005 ;;		On entry : 1F/1D
  6006 ;;		On exit  : 1F/1D
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;Total ram usage:        0 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:   10
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_USBDeviceTasks
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function _USBStallHandler
  6025  0BD3                     _USBStallHandler:	
  6026                           
  6027                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  6028                           
  6029                           ;incstack = 0
  6030                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6031  0BD3  1C18               	btfss	24,0	;volatile
  6032  0BD4  2BF1               	goto	l7949
  6033                           
  6034                           ;usb_device.c: 2215: {
  6035                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6036  0BD5  0023               	movlb	3	; select bank3
  6037  0BD6  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  6038  0BD7  0086               	movwf	6
  6039  0BD8  3080               	movlw	128
  6040  0BD9  0187               	clrf	7
  6041  0BDA  0601               	xorwf	1,w
  6042  0BDB  1D03               	btfss	3,2
  6043  0BDC  2BEF               	goto	l7947
  6044  0BDD  0025               	movlb	5	; select bank5
  6045  0BDE  0827               	movf	_pBDTEntryIn^(0+640),w
  6046  0BDF  0086               	movwf	6
  6047  0BE0  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6048  0BE1  0087               	movwf	7
  6049  0BE2  3084               	movlw	132
  6050  0BE3  0601               	xorwf	1,w
  6051  0BE4  1D03               	btfss	3,2
  6052  0BE5  2BEF               	goto	l7947
  6053                           
  6054                           ;usb_device.c: 2218: {
  6055                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6056  0BE6  0023               	movlb	3	; select bank3
  6057  0BE7  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  6058  0BE8  0086               	movwf	6
  6059  0BE9  300C               	movlw	12
  6060  0BEA  0187               	clrf	7
  6061  0BEB  0081               	movwf	1
  6062                           
  6063                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6064  0BEC  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  6065  0BED  0086               	movwf	6
  6066  0BEE  1781               	bsf	1,7
  6067  0BEF                     l7947:	
  6068                           
  6069                           ;usb_device.c: 2222: }
  6070                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  6071  0BEF  003D               	movlb	29	; select bank29
  6072  0BF0  1018               	bcf	24,0	;volatile
  6073  0BF1                     l7949:	
  6074                           
  6075                           ;usb_device.c: 2224: }
  6076                           ;usb_device.c: 2226: (UIR &= 0xDF);
  6077  0BF1  1290               	bcf	16,5	;volatile
  6078  0BF2  0008               	return
  6079  0BF3                     __end_of_USBStallHandler:	
  6080  0BF3                     __ptext9:	
  6081 ;; *************** function _USBSuspend *****************
  6082 ;; Defined at:
  6083 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 1F/1D
  6094 ;;		On exit  : 18/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;Total ram usage:        0 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:   14
  6104 ;; This function calls:
  6105 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6106 ;; This function is called by:
  6107 ;;		_USBDeviceTasks
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           
  6112                           ;psect for function _USBSuspend
  6113  0BF3                     _USBSuspend:	
  6114                           
  6115                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  6116                           
  6117                           ;incstack = 0
  6118                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6119  0BF3  1512               	bsf	18,2	;volatile
  6120                           
  6121                           ;usb_device.c: 2271: (UIR &= 0xEF);
  6122  0BF4  1210               	bcf	16,4	;volatile
  6123                           
  6124                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  6125  0BF5  148E               	bsf	14,1	;volatile
  6126                           
  6127                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  6128  0BF6  3001               	movlw	1
  6129  0BF7  0025               	movlb	5	; select bank5
  6130  0BF8  00DA               	movwf	_USBBusIsSuspended^(0+640)	;volatile
  6131                           
  6132                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  6133  0BF9  01D1               	clrf	_USBTicksSinceSuspendEnd^(0+640)	;volatile
  6134                           
  6135                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6136  0BFA  3075               	movlw	117
  6137  0BFB  0022               	movlb	2	; select bank2
  6138  0BFC  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  6139  0BFD  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  6140  0BFE  01EC               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  6141  0BFF  01ED               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  6142  0C00  01EE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  6143  0C01  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  6144  0C02  2A75               	ljmp	l7529
  6145  0C03                     __end_of_USBSuspend:	
  6146  0C03                     __ptext8:	
  6147 ;; *************** function _USBWakeFromSuspend *****************
  6148 ;; Defined at:
  6149 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 1F/1D
  6160 ;;		On exit  : 1F/5
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:   14
  6170 ;; This function calls:
  6171 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6172 ;; This function is called by:
  6173 ;;		_USBDeviceTasks
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           
  6178                           ;psect for function _USBWakeFromSuspend
  6179  0C03                     _USBWakeFromSuspend:	
  6180                           
  6181                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  6182                           
  6183                           ;incstack = 0
  6184                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6185  0C03  0025               	movlb	5	; select bank5
  6186  0C04  01DA               	clrf	_USBBusIsSuspended^(0+640)	;volatile
  6187                           
  6188                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  6189  0C05  3074               	movlw	116
  6190  0C06  0022               	movlb	2	; select bank2
  6191  0C07  00EA               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  6192  0C08  3000               	movlw	0
  6193  0C09  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  6194  0C0A  01EC               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  6195  0C0B  01ED               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  6196  0C0C  01EE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  6197  0C0D  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  6198  0C0E  2275  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6199                           
  6200                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  6201  0C10  003D               	movlb	29	; select bank29
  6202  0C11  108E               	bcf	14,1	;volatile
  6203                           
  6204                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  6205  0C12  1112               	bcf	18,2	;volatile
  6206  0C13                     l493:	
  6207                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  6208                           
  6209  0C13  1D10               	btfss	16,2	;volatile
  6210  0C14  2C17               	goto	l7921
  6211                           
  6212                           ;usb_device.c: 2343: {
  6213                           ;usb_device.c: 2344: (UIR &= 0xFB);
  6214  0C15  1110               	bcf	16,2	;volatile
  6215  0C16  2C13               	goto	l493
  6216  0C17                     l7921:	
  6217                           
  6218                           ;usb_device.c: 2345: }
  6219                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  6220  0C17  0025               	movlb	5	; select bank5
  6221  0C18  01D1               	clrf	_USBTicksSinceSuspendEnd^(0+640)	;volatile
  6222  0C19  0008               	return
  6223  0C1A                     __end_of_USBWakeFromSuspend:	
  6224                           
  6225                           	psect	text14
  6226  1644                     __ptext14:	
  6227 ;; *************** function _USBCtrlEPServiceComplete *****************
  6228 ;; Defined at:
  6229 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;		None
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 18/5
  6240 ;;		On exit  : 18/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;Total ram usage:        2 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:   12
  6250 ;; This function calls:
  6251 ;;		_USBCtrlEPAllowDataStage
  6252 ;;		_USBCtrlEPAllowStatusStage
  6253 ;; This function is called by:
  6254 ;;		_USBCtrlTrfSetupHandler
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           
  6259                           ;psect for function _USBCtrlEPServiceComplete
  6260  1644                     _USBCtrlEPServiceComplete:	
  6261  1644                     l5269:	
  6262                           ;incstack = 0
  6263                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6264                           
  6265                           
  6266                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6267  1644  003D               	movlb	29	; select bank29
  6268  1645  120E               	bcf	14,4	;volatile
  6269                           
  6270                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6271  1646  0021               	movlb	1	; select bank1
  6272  1647  1BE2               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  6273  1648  2E8F               	goto	l407
  6274                           
  6275                           ;usb_device.c: 1629: {
  6276                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6277  1649  0025               	movlb	5	; select bank5
  6278  164A  1FA2               	btfss	(_outPipes^(0+640)+2),7	;volatile
  6279  164B  2E58               	goto	l5283
  6280                           
  6281                           ;usb_device.c: 1631: {
  6282                           ;usb_device.c: 1632: controlTransferState = 2;
  6283  164C  3002               	movlw	2
  6284  164D  0024               	movlb	4	; select bank4
  6285  164E  00EC               	movwf	_controlTransferState^(0+512)	;volatile
  6286                           
  6287                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6288  164F  0025               	movlb	5	; select bank5
  6289  1650  0852               	movf	_USBDeferOUTDataStagePackets^(0+640),w	;volatile
  6290  1651  1D03               	btfss	3,2
  6291  1652  2E54               	goto	l5279
  6292                           
  6293                           ;usb_device.c: 1644: {
  6294                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6295  1653  26D1               	fcall	_USBCtrlEPAllowDataStage
  6296  1654                     l5279:	
  6297                           
  6298                           ;usb_device.c: 1646: }
  6299                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6300  1654  0025               	movlb	5	; select bank5
  6301  1655  01D4               	clrf	_USBStatusStageEnabledFlag2^(0+640)	;volatile
  6302                           
  6303                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6304  1656  01D5               	clrf	_USBStatusStageEnabledFlag1^(0+640)	;volatile
  6305                           
  6306                           ;usb_device.c: 1652: }
  6307  1657  0008               	return
  6308  1658                     l5283:	
  6309                           
  6310                           ;usb_device.c: 1653: else
  6311                           ;usb_device.c: 1654: {
  6312                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
  6313  1658  0023               	movlb	3	; select bank3
  6314  1659  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6315  165A  3E01               	addlw	1
  6316  165B  0022               	movlb	2	; select bank2
  6317  165C  00E5               	movwf	??_USBCtrlEPServiceComplete^(0+256)
  6318  165D  3000               	movlw	0
  6319  165E  0023               	movlb	3	; select bank3
  6320  165F  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6321  1660  0022               	movlb	2	; select bank2
  6322  1661  00E6               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+256)
  6323  1662  0865               	movf	??_USBCtrlEPServiceComplete^(0+256),w
  6324  1663  0086               	movwf	6
  6325  1664  0866               	movf	(??_USBCtrlEPServiceComplete+1)^(0+256),w
  6326  1665  0087               	movwf	7
  6327  1666  3010               	movlw	16
  6328  1667  0081               	movwf	1
  6329                           
  6330                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6331  1668  3050               	movlw	80
  6332  1669  00E5               	movwf	??_USBCtrlEPServiceComplete^(0+256)
  6333  166A  01E6               	clrf	(??_USBCtrlEPServiceComplete^(0+256)+1)
  6334  166B  0023               	movlb	3	; select bank3
  6335  166C  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6336  166D  0086               	movwf	6
  6337  166E  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6338  166F  0087               	movwf	7
  6339  1670  3142               	addfsr 1,2
  6340  1671  0022               	movlb	2	; select bank2
  6341  1672  0865               	movf	??_USBCtrlEPServiceComplete^(0+256),w
  6342  1673  3FC0               	movwi [0]fsr1
  6343  1674  0866               	movf	(??_USBCtrlEPServiceComplete^(0+256)+1),w
  6344  1675  3FC1               	movwi [1]fsr1
  6345                           
  6346                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6347  1676  0023               	movlb	3	; select bank3
  6348  1677  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6349  1678  0086               	movwf	6
  6350  1679  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6351  167A  0087               	movwf	7
  6352  167B  300C               	movlw	12
  6353  167C  0081               	movwf	1
  6354                           
  6355                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6356  167D  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6357  167E  0086               	movwf	6
  6358  167F  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6359  1680  0087               	movwf	7
  6360  1681  1781               	bsf	1,7
  6361                           
  6362                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6363  1682  0025               	movlb	5	; select bank5
  6364  1683  0827               	movf	_pBDTEntryIn^(0+640),w
  6365  1684  0086               	movwf	6
  6366  1685  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6367  1686  0087               	movwf	7
  6368  1687  3004               	movlw	4
  6369  1688  0081               	movwf	1
  6370                           
  6371                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6372  1689  0827               	movf	_pBDTEntryIn^(0+640),w
  6373  168A  0086               	movwf	6
  6374  168B  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6375  168C  0087               	movwf	7
  6376  168D  1781               	bsf	1,7
  6377  168E  0008               	return
  6378  168F                     l407:	
  6379                           
  6380                           ;usb_device.c: 1667: else
  6381                           ;usb_device.c: 1668: {
  6382                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6383  168F  0020               	movlb	0	; select bank0
  6384  1690  1FD0               	btfss	80,7	;volatile
  6385  1691  2EA3               	goto	l5309
  6386                           
  6387                           ;usb_device.c: 1670: {
  6388                           ;usb_device.c: 1671: controlTransferState = 1;
  6389  1692  3001               	movlw	1
  6390  1693  0024               	movlb	4	; select bank4
  6391  1694  00EC               	movwf	_controlTransferState^(0+512)	;volatile
  6392                           
  6393                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6394  1695  0025               	movlb	5	; select bank5
  6395  1696  0853               	movf	_USBDeferINDataStagePackets^(0+640),w	;volatile
  6396  1697  1D03               	btfss	3,2
  6397  1698  2E9B               	goto	l5301
  6398                           
  6399                           ;usb_device.c: 1686: {
  6400                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6401  1699  26D1  3196         	fcall	_USBCtrlEPAllowDataStage
  6402  169B                     l5301:	
  6403                           
  6404                           ;usb_device.c: 1688: }
  6405                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6406  169B  0025               	movlb	5	; select bank5
  6407  169C  01D4               	clrf	_USBStatusStageEnabledFlag2^(0+640)	;volatile
  6408                           
  6409                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6410  169D  01D5               	clrf	_USBStatusStageEnabledFlag1^(0+640)	;volatile
  6411                           
  6412                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6413  169E  0856               	movf	_USBDeferStatusStagePacket^(0+640),w	;volatile
  6414  169F  1D03               	btfss	3,2
  6415  16A0  0008               	return
  6416                           
  6417                           ;usb_device.c: 1713: {
  6418                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6419  16A1  318B  2B15         	ljmp	l4765
  6420  16A3                     l5309:	
  6421                           
  6422                           ;usb_device.c: 1717: else
  6423                           ;usb_device.c: 1718: {
  6424                           ;usb_device.c: 1729: controlTransferState = 2;
  6425  16A3  3002               	movlw	2
  6426  16A4  0024               	movlb	4	; select bank4
  6427  16A5  00EC               	movwf	_controlTransferState^(0+512)	;volatile
  6428                           
  6429                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
  6430  16A6  0023               	movlb	3	; select bank3
  6431  16A7  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6432  16A8  3E01               	addlw	1
  6433  16A9  0022               	movlb	2	; select bank2
  6434  16AA  00E5               	movwf	??_USBCtrlEPServiceComplete^(0+256)
  6435  16AB  3000               	movlw	0
  6436  16AC  0023               	movlb	3	; select bank3
  6437  16AD  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6438  16AE  0022               	movlb	2	; select bank2
  6439  16AF  00E6               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+256)
  6440  16B0  0865               	movf	??_USBCtrlEPServiceComplete^(0+256),w
  6441  16B1  0086               	movwf	6
  6442  16B2  0866               	movf	(??_USBCtrlEPServiceComplete+1)^(0+256),w
  6443  16B3  0087               	movwf	7
  6444  16B4  3010               	movlw	16
  6445  16B5  0081               	movwf	1
  6446                           
  6447                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6448  16B6  3050               	movlw	80
  6449  16B7  00E5               	movwf	??_USBCtrlEPServiceComplete^(0+256)
  6450  16B8  01E6               	clrf	(??_USBCtrlEPServiceComplete^(0+256)+1)
  6451  16B9  0023               	movlb	3	; select bank3
  6452  16BA  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6453  16BB  0086               	movwf	6
  6454  16BC  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6455  16BD  0087               	movwf	7
  6456  16BE  3142               	addfsr 1,2
  6457  16BF  0022               	movlb	2	; select bank2
  6458  16C0  0865               	movf	??_USBCtrlEPServiceComplete^(0+256),w
  6459  16C1  3FC0               	movwi [0]fsr1
  6460  16C2  0866               	movf	(??_USBCtrlEPServiceComplete^(0+256)+1),w
  6461  16C3  3FC1               	movwi [1]fsr1
  6462                           
  6463                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6464  16C4  0023               	movlb	3	; select bank3
  6465  16C5  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6466  16C6  0086               	movwf	6
  6467  16C7  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6468  16C8  0087               	movwf	7
  6469  16C9  3004               	movlw	4
  6470  16CA  0081               	movwf	1
  6471                           
  6472                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6473  16CB  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6474  16CC  0086               	movwf	6
  6475  16CD  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6476  16CE  0087               	movwf	7
  6477  16CF  1781               	bsf	1,7
  6478  16D0  2E9B               	goto	l5301
  6479  16D1                     __end_of_USBCtrlEPServiceComplete:	
  6480                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6481                           
  6482                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6483                           
  6484                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6485                           
  6486  16D1                     __ptext15:	
  6487 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6488 ;; Defined at:
  6489 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;		None
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 1F/5
  6500 ;;		On exit  : 19/1
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;Total ram usage:        2 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:   11
  6510 ;; This function calls:
  6511 ;;		_USBCtrlTrfTxService
  6512 ;; This function is called by:
  6513 ;;		_USBCtrlEPServiceComplete
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           
  6518                           ;psect for function _USBCtrlEPAllowDataStage
  6519  16D1                     _USBCtrlEPAllowDataStage:	
  6520                           
  6521                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6522                           
  6523                           ;incstack = 0
  6524                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6525  16D1  01D3               	clrf	_USBDeferINDataStagePackets^(0+640)	;volatile
  6526                           
  6527                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6528  16D2  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+640)	;volatile
  6529                           
  6530                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6531  16D3  3002               	movlw	2
  6532  16D4  0024               	movlb	4	; select bank4
  6533  16D5  066C               	xorwf	_controlTransferState^(0+512),w	;volatile
  6534  16D6  1D03               	btfss	3,2
  6535  16D7  2F03               	goto	l4813
  6536                           
  6537                           ;usb_device.c: 1494: {
  6538                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
  6539  16D8  0023               	movlb	3	; select bank3
  6540  16D9  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6541  16DA  3E01               	addlw	1
  6542  16DB  0022               	movlb	2	; select bank2
  6543  16DC  00E3               	movwf	??_USBCtrlEPAllowDataStage^(0+256)
  6544  16DD  3000               	movlw	0
  6545  16DE  0023               	movlb	3	; select bank3
  6546  16DF  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6547  16E0  0022               	movlb	2	; select bank2
  6548  16E1  00E4               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+256)
  6549  16E2  0863               	movf	??_USBCtrlEPAllowDataStage^(0+256),w
  6550  16E3  0086               	movwf	6
  6551  16E4  0864               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+256),w
  6552  16E5  0087               	movwf	7
  6553  16E6  3010               	movlw	16
  6554  16E7  0081               	movwf	1
  6555                           
  6556                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6557  16E8  3060               	movlw	96
  6558  16E9  00E3               	movwf	??_USBCtrlEPAllowDataStage^(0+256)
  6559  16EA  01E4               	clrf	(??_USBCtrlEPAllowDataStage^(0+256)+1)
  6560  16EB  0023               	movlb	3	; select bank3
  6561  16EC  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6562  16ED  0086               	movwf	6
  6563  16EE  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6564  16EF  0087               	movwf	7
  6565  16F0  3142               	addfsr 1,2
  6566  16F1  0022               	movlb	2	; select bank2
  6567  16F2  0863               	movf	??_USBCtrlEPAllowDataStage^(0+256),w
  6568  16F3  3FC0               	movwi [0]fsr1
  6569  16F4  0864               	movf	(??_USBCtrlEPAllowDataStage^(0+256)+1),w
  6570  16F5  3FC1               	movwi [1]fsr1
  6571                           
  6572                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6573  16F6  0023               	movlb	3	; select bank3
  6574  16F7  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6575  16F8  0086               	movwf	6
  6576  16F9  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6577  16FA  0087               	movwf	7
  6578  16FB  3048               	movlw	72
  6579  16FC  0081               	movwf	1
  6580                           
  6581                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6582  16FD  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6583  16FE  0086               	movwf	6
  6584  16FF  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6585  1700  0087               	movwf	7
  6586  1701  1781               	bsf	1,7
  6587                           
  6588                           ;usb_device.c: 1500: }
  6589  1702  0008               	return
  6590  1703                     l4813:	
  6591                           
  6592                           ;usb_device.c: 1501: else
  6593                           ;usb_device.c: 1502: {
  6594                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6595  1703  0021               	movlb	1	; select bank1
  6596  1704  0864               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  6597  1705  0020               	movlb	0	; select bank0
  6598  1706  0257               	subwf	87,w	;volatile
  6599  1707  1D03               	skipz
  6600  1708  2F0D               	goto	u3595
  6601  1709  0021               	movlb	1	; select bank1
  6602  170A  0863               	movf	(_inPipes^(0+128)+3),w	;volatile
  6603  170B  0020               	movlb	0	; select bank0
  6604  170C  0256               	subwf	86,w	;volatile
  6605  170D                     u3595:	
  6606  170D  1803               	skipnc
  6607  170E  2F16               	goto	l4817
  6608                           
  6609                           ;usb_device.c: 1506: {
  6610                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6611  170F  0857               	movf	87,w	;volatile
  6612  1710  0021               	movlb	1	; select bank1
  6613  1711  00E4               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6614  1712  0020               	movlb	0	; select bank0
  6615  1713  0856               	movf	86,w	;volatile
  6616  1714  0021               	movlb	1	; select bank1
  6617  1715  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  6618  1716                     l4817:	
  6619                           
  6620                           ;usb_device.c: 1508: }
  6621                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6622  1716  279D               	fcall	_USBCtrlTrfTxService
  6623                           
  6624                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6625  1717  3060               	movlw	96
  6626  1718  00E3               	movwf	??_USBCtrlEPAllowDataStage^(0+256)
  6627  1719  01E4               	clrf	(??_USBCtrlEPAllowDataStage^(0+256)+1)
  6628  171A  0025               	movlb	5	; select bank5
  6629  171B  0827               	movf	_pBDTEntryIn^(0+640),w
  6630  171C  0086               	movwf	6
  6631  171D  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6632  171E  0087               	movwf	7
  6633  171F  3142               	addfsr 1,2
  6634  1720  0022               	movlb	2	; select bank2
  6635  1721  0863               	movf	??_USBCtrlEPAllowDataStage^(0+256),w
  6636  1722  3FC0               	movwi [0]fsr1
  6637  1723  0864               	movf	(??_USBCtrlEPAllowDataStage^(0+256)+1),w
  6638  1724  3FC1               	movwi [1]fsr1
  6639                           
  6640                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6641  1725  0025               	movlb	5	; select bank5
  6642  1726  0827               	movf	_pBDTEntryIn^(0+640),w
  6643  1727  0086               	movwf	6
  6644  1728  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6645  1729  0087               	movwf	7
  6646  172A  3048               	movlw	72
  6647  172B  0081               	movwf	1
  6648                           
  6649                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6650  172C  0827               	movf	_pBDTEntryIn^(0+640),w
  6651  172D  0086               	movwf	6
  6652  172E  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6653  172F  0087               	movwf	7
  6654  1730  1781               	bsf	1,7
  6655  1731  0008               	return
  6656  1732                     __end_of_USBCtrlEPAllowDataStage:	
  6657  1732                     __ptext30:	
  6658 ;; *************** function _USBCtrlTrfInHandler *****************
  6659 ;; Defined at:
  6660 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;		None
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  lastDTS         1    5[BANK2 ] unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 1F/3
  6671 ;;		On exit  : 1E/4
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;Total ram usage:        3 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:   11
  6681 ;; This function calls:
  6682 ;;		_USBCtrlTrfTxService
  6683 ;; This function is called by:
  6684 ;;		_USBCtrlEPService
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           
  6689                           ;psect for function _USBCtrlTrfInHandler
  6690  1732                     _USBCtrlTrfInHandler:	
  6691  1732                     l5597:	
  6692                           ;incstack = 0
  6693                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6694                           
  6695                           
  6696                           ;usb_device.c: 2594: uint8_t lastDTS;
  6697                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  6698  1732  0025               	movlb	5	; select bank5
  6699  1733  0827               	movf	_pBDTEntryIn^(0+640),w
  6700  1734  0086               	movwf	6
  6701  1735  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6702  1736  0087               	movwf	7
  6703  1737  3000               	movlw	0
  6704  1738  1B01               	btfsc	1,6
  6705  1739  3001               	movlw	1
  6706  173A  0022               	movlb	2	; select bank2
  6707  173B  00E5               	movwf	USBCtrlTrfInHandler@lastDTS^(0+256)
  6708                           
  6709                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6710  173C  3004               	movlw	4
  6711  173D  0025               	movlb	5	; select bank5
  6712  173E  0627               	xorwf	_pBDTEntryIn^(0+640),w
  6713  173F  00A7               	movwf	_pBDTEntryIn^(0+640)
  6714                           
  6715                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  6716  1740  3008               	movlw	8
  6717  1741  0024               	movlb	4	; select bank4
  6718  1742  066D               	xorwf	_USBDeviceState^(0+512),w	;volatile
  6719  1743  1D03               	btfss	3,2
  6720  1744  2F52               	goto	l5611
  6721                           
  6722                           ;usb_device.c: 2605: {
  6723                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  6724  1745  0020               	movlb	0	; select bank0
  6725  1746  0852               	movf	82,w	;volatile
  6726  1747  397F               	andlw	127
  6727  1748  003D               	movlb	29	; select bank29
  6728  1749  0096               	movwf	22	;volatile
  6729                           
  6730                           ;usb_device.c: 2607: if(UADDR != 0u)
  6731  174A  0816               	movf	22,w
  6732  174B  1903               	btfsc	3,2
  6733  174C  2F4F               	goto	l5609
  6734                           
  6735                           ;usb_device.c: 2608: {
  6736                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  6737  174D  3010               	movlw	16
  6738  174E  2F50               	goto	L9
  6739  174F                     l5609:	
  6740                           ;usb_device.c: 2610: }
  6741                           
  6742                           
  6743                           ;usb_device.c: 2611: else
  6744                           ;usb_device.c: 2612: {
  6745                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  6746  174F  3004               	movlw	4
  6747  1750                     L9:	
  6748  1750  0024               	movlb	4	; select bank4
  6749  1751  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
  6750  1752                     l5611:	
  6751                           
  6752                           ;usb_device.c: 2614: }
  6753                           ;usb_device.c: 2615: }
  6754                           ;usb_device.c: 2618: if(controlTransferState == 1)
  6755  1752  0B6C               	decfsz	_controlTransferState^(0+512),w	;volatile
  6756  1753  2F94               	goto	l520
  6757                           
  6758                           ;usb_device.c: 2619: {
  6759                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  6760  1754  3060               	movlw	96
  6761  1755  0022               	movlb	2	; select bank2
  6762  1756  00E3               	movwf	??_USBCtrlTrfInHandler^(0+256)
  6763  1757  01E4               	clrf	(??_USBCtrlTrfInHandler^(0+256)+1)
  6764  1758  0025               	movlb	5	; select bank5
  6765  1759  0827               	movf	_pBDTEntryIn^(0+640),w
  6766  175A  0086               	movwf	6
  6767  175B  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6768  175C  0087               	movwf	7
  6769  175D  3142               	addfsr 1,2
  6770  175E  0022               	movlb	2	; select bank2
  6771  175F  0863               	movf	??_USBCtrlTrfInHandler^(0+256),w
  6772  1760  3FC0               	movwi [0]fsr1
  6773  1761  0864               	movf	(??_USBCtrlTrfInHandler^(0+256)+1),w
  6774  1762  3FC1               	movwi [1]fsr1
  6775                           
  6776                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  6777  1763  279D  3196         	fcall	_USBCtrlTrfTxService
  6778                           
  6779                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  6780  1765  3002               	movlw	2
  6781  1766  0025               	movlb	5	; select bank5
  6782  1767  065D               	xorwf	_shortPacketStatus^(0+640),w	;volatile
  6783  1768  1D03               	btfss	3,2
  6784  1769  2F76               	goto	l5621
  6785                           
  6786                           ;usb_device.c: 2628: {
  6787                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  6788  176A  0827               	movf	_pBDTEntryIn^(0+640),w
  6789  176B  0086               	movwf	6
  6790  176C  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6791  176D  0087               	movwf	7
  6792  176E  3004               	movlw	4
  6793  176F  0081               	movwf	1
  6794                           
  6795                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6796  1770  0827               	movf	_pBDTEntryIn^(0+640),w
  6797  1771  0086               	movwf	6
  6798  1772  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6799  1773  0087               	movwf	7
  6800  1774  1781               	bsf	1,7
  6801                           
  6802                           ;usb_device.c: 2633: }
  6803  1775  0008               	return
  6804  1776                     l5621:	
  6805                           
  6806                           ;usb_device.c: 2634: else
  6807                           ;usb_device.c: 2635: {
  6808                           ;usb_device.c: 2636: if(lastDTS == 0)
  6809  1776  0022               	movlb	2	; select bank2
  6810  1777  0865               	movf	USBCtrlTrfInHandler@lastDTS^(0+256),w
  6811  1778  1D03               	btfss	3,2
  6812  1779  2F87               	goto	l5625
  6813                           
  6814                           ;usb_device.c: 2637: {
  6815                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6816  177A  0025               	movlb	5	; select bank5
  6817  177B  0827               	movf	_pBDTEntryIn^(0+640),w
  6818  177C  0086               	movwf	6
  6819  177D  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6820  177E  0087               	movwf	7
  6821  177F  3048               	movlw	72
  6822  1780  0081               	movwf	1
  6823                           
  6824                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6825  1781  0827               	movf	_pBDTEntryIn^(0+640),w
  6826  1782  0086               	movwf	6
  6827  1783  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6828  1784  0087               	movwf	7
  6829  1785  1781               	bsf	1,7
  6830                           
  6831                           ;usb_device.c: 2640: }
  6832  1786  0008               	return
  6833  1787                     l5625:	
  6834                           
  6835                           ;usb_device.c: 2641: else
  6836                           ;usb_device.c: 2642: {
  6837                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  6838  1787  0025               	movlb	5	; select bank5
  6839  1788  0827               	movf	_pBDTEntryIn^(0+640),w
  6840  1789  0086               	movwf	6
  6841  178A  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6842  178B  0087               	movwf	7
  6843  178C  3008               	movlw	8
  6844  178D  0081               	movwf	1
  6845                           
  6846                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6847  178E  0827               	movf	_pBDTEntryIn^(0+640),w
  6848  178F  0086               	movwf	6
  6849  1790  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  6850  1791  0087               	movwf	7
  6851  1792  1781               	bsf	1,7
  6852  1793  0008               	return
  6853  1794                     l520:	
  6854                           
  6855                           ;usb_device.c: 2648: else
  6856                           ;usb_device.c: 2649: {
  6857                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  6858  1794  0025               	movlb	5	; select bank5
  6859  1795  1FA2               	btfss	(_outPipes^(0+640)+2),7	;volatile
  6860  1796  2F9A               	goto	l5629
  6861                           
  6862                           ;usb_device.c: 2656: {
  6863                           ;usb_device.c: 2657: outPipes[0].pFunc();
  6864  1797  0825               	movf	(low ((_outPipes| (0+512)+5)))^(0+128),w	;volatile
  6865  1798  0826               	movf	((low ((_outPipes| (0+512)+5))+1))^(0+128),w	;volatile
  6866                           
  6867                           ;usb_device.c: 2658: }
  6868                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  6869  1799  13A2               	bcf	(_outPipes^(0+640)+2),7	;volatile
  6870  179A                     l5629:	
  6871                           
  6872                           ;usb_device.c: 2660: }
  6873                           ;usb_device.c: 2662: controlTransferState = 0;
  6874  179A  0024               	movlb	4	; select bank4
  6875  179B  01EC               	clrf	_controlTransferState^(0+512)	;volatile
  6876  179C  0008               	return
  6877  179D                     __end_of_USBCtrlTrfInHandler:	
  6878  179D                     __ptext31:	
  6879 ;; *************** function _USBCtrlTrfTxService *****************
  6880 ;; Defined at:
  6881 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;		None
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  byteToSend      1    2[BANK2 ] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      void 
  6888 ;; Registers used:
  6889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6890 ;; Tracked objects:
  6891 ;;		On entry : 1C/0
  6892 ;;		On exit  : 1F/2
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  6897 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  6899 ;;Total ram usage:        3 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:   10
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_USBCtrlEPAllowDataStage
  6906 ;;		_USBCtrlTrfInHandler
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           
  6911                           ;psect for function _USBCtrlTrfTxService
  6912  179D                     _USBCtrlTrfTxService:	
  6913                           
  6914                           ;usb_device.c: 1773: uint8_t byteToSend;
  6915                           ;usb_device.c: 1777: byteToSend = 16;
  6916                           
  6917                           ;incstack = 0
  6918                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  6919  179D  3010               	movlw	16
  6920  179E  0022               	movlb	2	; select bank2
  6921  179F  00E2               	movwf	USBCtrlTrfTxService@byteToSend^(0+256)
  6922                           
  6923                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
  6924  17A0  3000               	movlw	0
  6925  17A1  0021               	movlb	1	; select bank1
  6926  17A2  0264               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  6927  17A3  3010               	movlw	16
  6928  17A4  1903               	skipnz
  6929  17A5  0263               	subwf	(_inPipes^(0+128)+3),w	;volatile
  6930  17A6  1803               	skipnc
  6931  17A7  2FB5               	goto	l420
  6932                           
  6933                           ;usb_device.c: 1779: {
  6934                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  6935  17A8  0863               	movf	(_inPipes^(0+128)+3),w	;volatile
  6936  17A9  0022               	movlb	2	; select bank2
  6937  17AA  00E2               	movwf	USBCtrlTrfTxService@byteToSend^(0+256)
  6938                           
  6939                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  6940  17AB  0025               	movlb	5	; select bank5
  6941  17AC  085D               	movf	_shortPacketStatus^(0+640),w	;volatile
  6942  17AD  1D03               	btfss	3,2
  6943  17AE  2FB1               	goto	l4649
  6944                           
  6945                           ;usb_device.c: 1788: {
  6946                           ;usb_device.c: 1789: shortPacketStatus = 1;
  6947  17AF  3001               	movlw	1
  6948  17B0  2FB4               	goto	L10
  6949  17B1                     l4649:	
  6950                           ;usb_device.c: 1790: }
  6951                           
  6952                           
  6953                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  6954  17B1  0B5D               	decfsz	_shortPacketStatus^(0+640),w	;volatile
  6955  17B2  2FB5               	goto	l420
  6956                           
  6957                           ;usb_device.c: 1792: {
  6958                           ;usb_device.c: 1793: shortPacketStatus = 2;
  6959  17B3  3002               	movlw	2
  6960  17B4                     L10:	
  6961  17B4  00DD               	movwf	_shortPacketStatus^(0+640)	;volatile
  6962  17B5                     l420:	
  6963                           
  6964                           ;usb_device.c: 1794: }
  6965                           ;usb_device.c: 1795: }
  6966                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  6967  17B5  0022               	movlb	2	; select bank2
  6968  17B6  0862               	movf	USBCtrlTrfTxService@byteToSend^(0+256),w
  6969  17B7  0021               	movlb	1	; select bank1
  6970  17B8  02E3               	subwf	(_inPipes^(0+128)+3),f	;volatile
  6971  17B9  1C03               	skipc
  6972  17BA  03E4               	decf	((_inPipes+1)^(0+128)+3),f	;volatile
  6973                           
  6974                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  6975  17BB  0025               	movlb	5	; select bank5
  6976  17BC  0827               	movf	_pBDTEntryIn^(0+640),w
  6977  17BD  3E01               	addlw	1
  6978  17BE  0022               	movlb	2	; select bank2
  6979  17BF  00E0               	movwf	??_USBCtrlTrfTxService^(0+256)
  6980  17C0  3000               	movlw	0
  6981  17C1  0025               	movlb	5	; select bank5
  6982  17C2  3D28               	addwfc	(_pBDTEntryIn+1)^(0+640),w
  6983  17C3  0022               	movlb	2	; select bank2
  6984  17C4  00E1               	movwf	(??_USBCtrlTrfTxService+1)^(0+256)
  6985  17C5  0860               	movf	??_USBCtrlTrfTxService^(0+256),w
  6986  17C6  0086               	movwf	6
  6987  17C7  0861               	movf	(??_USBCtrlTrfTxService+1)^(0+256),w
  6988  17C8  0087               	movwf	7
  6989  17C9  0862               	movf	USBCtrlTrfTxService@byteToSend^(0+256),w
  6990  17CA  0081               	movwf	1
  6991                           
  6992                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  6993  17CB  3060               	movlw	96
  6994  17CC  0025               	movlb	5	; select bank5
  6995  17CD  00DC               	movwf	_pDst^(0+640)
  6996                           
  6997                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  6998  17CE  0021               	movlb	1	; select bank1
  6999  17CF  1C62               	btfss	(_inPipes^(0+128)+2),0	;volatile
  7000  17D0  2FE4               	goto	l4669
  7001  17D1  2FFB               	goto	l4679
  7002  17D2                     l4661:	
  7003                           
  7004                           ;usb_device.c: 1812: {
  7005                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  7006  17D2  0025               	movlb	5	; select bank5
  7007  17D3  085C               	movf	_pDst^(0+640),w
  7008  17D4  0086               	movwf	6
  7009  17D5  0187               	clrf	7
  7010  17D6  0021               	movlb	1	; select bank1
  7011  17D7  0860               	movf	_inPipes^(0+128),w	;volatile
  7012  17D8  0084               	movwf	4
  7013  17D9  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
  7014  17DA  0085               	movwf	5
  7015  17DB  0800               	movf	0,w	;code access
  7016  17DC  0081               	movwf	1
  7017  17DD  0AE0               	incf	_inPipes^(0+128),f	;volatile
  7018  17DE  1903               	skipnz
  7019  17DF  0AE1               	incf	(_inPipes+1)^(0+128),f	;volatile
  7020  17E0  0025               	movlb	5	; select bank5
  7021  17E1  0ADC               	incf	_pDst^(0+640),f
  7022                           
  7023                           ;usb_device.c: 1814: byteToSend--;
  7024  17E2  0022               	movlb	2	; select bank2
  7025  17E3  03E2               	decf	USBCtrlTrfTxService@byteToSend^(0+256),f
  7026  17E4                     l4669:	
  7027  17E4  0022               	movlb	2	; select bank2
  7028  17E5  0862               	movf	USBCtrlTrfTxService@byteToSend^(0+256),w
  7029  17E6  1903               	btfsc	3,2
  7030  17E7  0008               	return
  7031  17E8  2FD2               	goto	l4661
  7032  17E9                     l4671:	
  7033                           
  7034                           ;usb_device.c: 1820: {
  7035                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  7036  17E9  0025               	movlb	5	; select bank5
  7037  17EA  085C               	movf	_pDst^(0+640),w
  7038  17EB  0086               	movwf	6
  7039  17EC  0187               	clrf	7
  7040  17ED  0021               	movlb	1	; select bank1
  7041  17EE  0860               	movf	_inPipes^(0+128),w	;volatile
  7042  17EF  0084               	movwf	4
  7043  17F0  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
  7044  17F1  0085               	movwf	5
  7045  17F2  0800               	movf	0,w	;code access
  7046  17F3  0081               	movwf	1
  7047  17F4  0AE0               	incf	_inPipes^(0+128),f	;volatile
  7048  17F5  1903               	skipnz
  7049  17F6  0AE1               	incf	(_inPipes+1)^(0+128),f	;volatile
  7050  17F7  0025               	movlb	5	; select bank5
  7051  17F8  0ADC               	incf	_pDst^(0+640),f
  7052                           
  7053                           ;usb_device.c: 1822: byteToSend--;
  7054  17F9  0022               	movlb	2	; select bank2
  7055  17FA  03E2               	decf	USBCtrlTrfTxService@byteToSend^(0+256),f
  7056  17FB                     l4679:	
  7057  17FB  0022               	movlb	2	; select bank2
  7058  17FC  0862               	movf	USBCtrlTrfTxService@byteToSend^(0+256),w
  7059  17FD  1903               	btfsc	3,2
  7060  17FE  0008               	return
  7061  17FF  2FE9               	goto	l4671
  7062  1800                     __end_of_USBCtrlTrfTxService:	
  7063                           
  7064                           	psect	swtext1
  7065  0800                     __pswtext1:	
  7066  0800                     S8537:	
  7067  0800  3188  288F         	ljmp	l7739
  7068  0802  3188  2891         	ljmp	l7741
  7069  0804  3188  287A         	ljmp	l532
  7070  0806  3188  2891         	ljmp	l7741
  7071  0808  3188  287A         	ljmp	l532
  7072  080A  3188  287B         	ljmp	l534
  7073  080C  3188  2881         	ljmp	l7727
  7074  080E  3188  28A8         	ljmp	l7753
  7075  0810  3188  2885         	ljmp	l7731
  7076  0812  3188  2883         	ljmp	l7729
  7077  0814  3188  2892         	ljmp	l7743
  7078  0816  3188  289D         	ljmp	l543
  7079  0818  3188  287A         	ljmp	l532
  7080                           
  7081                           	psect	text17
  7082  1DDE                     __ptext17:	
  7083 ;; *************** function _USBStdSetCfgHandler *****************
  7084 ;; Defined at:
  7085 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;		None
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  p               2    0[BANK3 ] PTR unsigned char 
  7090 ;;		 -> UEP1(1), 
  7091 ;;  i               1    2[BANK3 ] unsigned char 
  7092 ;;  i               1    3[BANK3 ] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7097 ;; Tracked objects:
  7098 ;;		On entry : 1A/0
  7099 ;;		On exit  : 1F/4
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  7106 ;;Total ram usage:        4 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:   14
  7109 ;; This function calls:
  7110 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7111 ;;		_memset
  7112 ;; This function is called by:
  7113 ;;		_USBCheckStdRequest
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           
  7118                           ;psect for function _USBStdSetCfgHandler
  7119  1DDE                     _USBStdSetCfgHandler:	
  7120  1DDE                     l7559:	
  7121                           ;incstack = 0
  7122 ;; hardware stack exceeded
  7123                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7124                           
  7125                           
  7126                           ;usb_device.c: 1970: uint8_t i;
  7127                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  7128  1DDE  0021               	movlb	1	; select bank1
  7129  1DDF  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7130                           
  7131                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  7132  1DE0  300E               	movlw	14
  7133  1DE1  0023               	movlb	3	; select bank3
  7134  1DE2  00E1               	movwf	(USBStdSetCfgHandler@p+1)^(0+384)
  7135  1DE3  3099               	movlw	153
  7136  1DE4  00E0               	movwf	USBStdSetCfgHandler@p^(0+384)
  7137  1DE5  01E2               	clrf	USBStdSetCfgHandler@i_2033^(0+384)
  7138  1DE6                     l7567:	
  7139  1DE6  0860               	movf	USBStdSetCfgHandler@p^(0+384),w
  7140  1DE7  0086               	movwf	6
  7141  1DE8  0861               	movf	(USBStdSetCfgHandler@p+1)^(0+384),w
  7142  1DE9  0087               	movwf	7
  7143  1DEA  0181               	clrf	1
  7144  1DEB  0AE0               	incf	USBStdSetCfgHandler@p^(0+384),f
  7145  1DEC  1903               	skipnz
  7146  1DED  0AE1               	incf	(USBStdSetCfgHandler@p+1)^(0+384),f
  7147  1DEE  3002               	movlw	2
  7148  1DEF  0AE2               	incf	USBStdSetCfgHandler@i_2033^(0+384),f
  7149  1DF0  0262               	subwf	USBStdSetCfgHandler@i_2033^(0+384),w
  7150  1DF1  1C03               	skipc
  7151  1DF2  2DE6               	goto	l7567
  7152                           
  7153                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  7154  1DF3  3020               	movlw	32
  7155  1DF4  0022               	movlb	2	; select bank2
  7156  1DF5  00E0               	movwf	memset@p1^(0+256)
  7157  1DF6  3030               	movlw	48
  7158  1DF7  01E1               	clrf	(memset@p1+1)^(0+256)
  7159  1DF8  01E2               	clrf	memset@c^(0+256)
  7160  1DF9  01E3               	clrf	(memset@c+1)^(0+256)
  7161  1DFA  00E4               	movwf	memset@n^(0+256)
  7162  1DFB  01E5               	clrf	(memset@n+1)^(0+256)
  7163  1DFC  2647  319D         	fcall	_memset
  7164                           
  7165                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  7166  1DFE  003D               	movlb	29	; select bank29
  7167  1DFF  170E               	bsf	14,6	;volatile
  7168                           
  7169                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  7170  1E00  0023               	movlb	3	; select bank3
  7171  1E01  01E3               	clrf	USBStdSetCfgHandler@i^(0+384)
  7172  1E02                     l7585:	
  7173                           
  7174                           ;usb_device.c: 1988: {
  7175                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  7176  1E02  0863               	movf	USBStdSetCfgHandler@i^(0+384),w
  7177  1E03  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  7178  1E04  0086               	movwf	6
  7179  1E05  3002               	movlw	2	; select bank5/6
  7180  1E06  0087               	movwf	7
  7181  1E07  0181               	clrf	1
  7182                           
  7183                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  7184  1E08  0863               	movf	USBStdSetCfgHandler@i^(0+384),w
  7185  1E09  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  7186  1E0A  0086               	movwf	6
  7187  1E0B  3003               	movlw	3
  7188  1E0C  0181               	clrf	1
  7189  1E0D  0AE3               	incf	USBStdSetCfgHandler@i^(0+384),f
  7190  1E0E  0263               	subwf	USBStdSetCfgHandler@i^(0+384),w
  7191  1E0F  1C03               	skipc
  7192  1E10  2E02               	goto	l7585
  7193                           
  7194                           ;usb_device.c: 1991: }
  7195                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  7196  1E11  30E6               	movlw	low _USBAlternateInterface
  7197  1E12  0022               	movlb	2	; select bank2
  7198  1E13  00E0               	movwf	memset@p1^(0+256)
  7199  1E14  3002               	movlw	high _USBAlternateInterface
  7200  1E15  00E1               	movwf	(memset@p1+1)^(0+256)
  7201  1E16  3002               	movlw	2
  7202  1E17  01E2               	clrf	memset@c^(0+256)
  7203  1E18  01E3               	clrf	(memset@c+1)^(0+256)
  7204  1E19  00E4               	movwf	memset@n^(0+256)
  7205  1E1A  01E5               	clrf	(memset@n+1)^(0+256)
  7206  1E1B  2647  319D         	fcall	_memset
  7207                           
  7208                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  7209  1E1D  003D               	movlb	29	; select bank29
  7210  1E1E  130E               	bcf	14,6	;volatile
  7211                           
  7212                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7213  1E1F  3028               	movlw	40
  7214  1E20  0025               	movlb	5	; select bank5
  7215  1E21  00A7               	movwf	_pBDTEntryIn^(0+640)
  7216  1E22  3020               	movlw	32
  7217  1E23  01A8               	clrf	(_pBDTEntryIn+1)^(0+640)
  7218                           
  7219                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7220  1E24  0023               	movlb	3	; select bank3
  7221  1E25  00EE               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  7222                           
  7223                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7224  1E26  00EC               	movwf	_pBDTEntryEP0OutNext^(0+384)
  7225  1E27  39FF               	andlw	255
  7226  1E28  1D03               	skipz
  7227  1E29  3000               	movlw	0
  7228  1E2A  00ED               	movwf	(_pBDTEntryEP0OutNext+1)^(0+384)
  7229                           
  7230                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7231  1E2B  0020               	movlb	0	; select bank0
  7232  1E2C  0852               	movf	82,w	;volatile
  7233  1E2D  0025               	movlb	5	; select bank5
  7234  1E2E  00E8               	movwf	_USBActiveConfiguration^(0+640)	;volatile
  7235                           
  7236                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  7237  1E2F  0868               	movf	_USBActiveConfiguration^(0+640),w	;volatile
  7238  1E30  1D03               	btfss	3,2
  7239  1E31  2E36               	goto	l7607
  7240                           
  7241                           ;usb_device.c: 2010: {
  7242                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  7243  1E32  3010               	movlw	16
  7244  1E33  0024               	movlb	4	; select bank4
  7245  1E34  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
  7246                           
  7247                           ;usb_device.c: 2013: }
  7248  1E35  0008               	return
  7249  1E36                     l7607:	
  7250                           
  7251                           ;usb_device.c: 2014: else
  7252                           ;usb_device.c: 2015: {
  7253                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7254  1E36  0022               	movlb	2	; select bank2
  7255  1E37  30E8               	movlw	low _USBActiveConfiguration
  7256  1E38  01EA               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256)
  7257  1E39  0AEA               	incf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+256),f
  7258  1E3A  01EB               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+256)
  7259  1E3B  00EC               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+256)
  7260  1E3C  3002               	movlw	high _USBActiveConfiguration
  7261  1E3D  00ED               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+256)
  7262  1E3E  01EE               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256)
  7263  1E3F  0AEE               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+256),f
  7264  1E40  01EF               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+256)
  7265  1E41  318A  2275         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7266                           
  7267                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  7268  1E43  3020               	movlw	32
  7269  1E44  0024               	movlb	4	; select bank4
  7270  1E45  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
  7271  1E46  0008               	return
  7272  1E47                     __end_of_USBStdSetCfgHandler:	
  7273  1E47                     __ptext18:	
  7274 ;; *************** function _memset *****************
  7275 ;; Defined at:
  7276 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  p1              2    0[BANK2 ] PTR void 
  7279 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7280 ;;  c               2    2[BANK2 ] int 
  7281 ;;  n               2    4[BANK2 ] unsigned int 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  p               2    6[BANK2 ] PTR unsigned char 
  7284 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  2    0[BANK2 ] PTR void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7289 ;; Tracked objects:
  7290 ;;		On entry : 1F/2
  7291 ;;		On exit  : 1F/2
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7294 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;Total ram usage:        8 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:   10
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_USBStdSetCfgHandler
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           
  7309                           ;psect for function _memset
  7310  1E47                     _memset:	
  7311                           
  7312                           ;incstack = 0
  7313                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7314  1E47  0861               	movf	(memset@p1+1)^(0+256),w
  7315  1E48  00E7               	movwf	(memset@p+1)^(0+256)
  7316  1E49  0860               	movf	memset@p1^(0+256),w
  7317  1E4A  00E6               	movwf	memset@p^(0+256)
  7318  1E4B                     l7557:	
  7319  1E4B  3001               	movlw	1
  7320  1E4C  02E4               	subwf	memset@n^(0+256),f
  7321  1E4D  3000               	movlw	0
  7322  1E4E  3BE5               	subwfb	(memset@n+1)^(0+256),f
  7323  1E4F  0F64               	incfsz	memset@n^(0+256),w
  7324  1E50  2E54               	goto	l7553
  7325  1E51  0A65               	incf	(memset@n+1)^(0+256),w
  7326  1E52  1903               	btfsc	3,2
  7327  1E53  0008               	return
  7328  1E54                     l7553:	
  7329  1E54  0866               	movf	memset@p^(0+256),w
  7330  1E55  0086               	movwf	6
  7331  1E56  0867               	movf	(memset@p+1)^(0+256),w
  7332  1E57  0087               	movwf	7
  7333  1E58  0862               	movf	memset@c^(0+256),w
  7334  1E59  0081               	movwf	1
  7335  1E5A  0AE6               	incf	memset@p^(0+256),f
  7336  1E5B  1903               	skipnz
  7337  1E5C  0AE7               	incf	(memset@p+1)^(0+256),f
  7338  1E5D  2E4B               	goto	l7557
  7339  1E5E                     __end_of_memset:	
  7340                           
  7341                           	psect	text19
  7342  1AE9                     __ptext19:	
  7343 ;; *************** function _USBStdGetStatusHandler *****************
  7344 ;; Defined at:
  7345 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  p               2    0[BANK2 ] PTR struct __BDT
  7350 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  1    wreg      void 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7355 ;; Tracked objects:
  7356 ;;		On entry : 1A/0
  7357 ;;		On exit  : 1F/1
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;Total ram usage:        2 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:   10
  7367 ;; This function calls:
  7368 ;;		Nothing
  7369 ;; This function is called by:
  7370 ;;		_USBCheckStdRequest
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           
  7375                           ;psect for function _USBStdGetStatusHandler
  7376  1AE9                     _USBStdGetStatusHandler:	
  7377  1AE9                     l7611:	
  7378                           ;incstack = 0
  7379                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  7380                           
  7381                           
  7382                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7383  1AE9  0020               	movlb	0	; select bank0
  7384  1AEA  01E0               	clrf	96	;volatile
  7385                           
  7386                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7387  1AEB  01E1               	clrf	97	;volatile
  7388                           
  7389                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7390  1AEC  2B25               	goto	l7631
  7391  1AED                     l472:	
  7392                           ;usb_device.c: 2135: {
  7393                           ;usb_device.c: 2136: case (0x00):
  7394                           
  7395                           
  7396                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7397  1AED  0021               	movlb	1	; select bank1
  7398  1AEE  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7399                           
  7400                           ;usb_device.c: 2145: }
  7401                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7402                           
  7403                           ;usb_device.c: 2142: if(0 == 1)
  7404  1AEF  0025               	movlb	5	; select bank5
  7405  1AF0  0B5B               	decfsz	_RemoteWakeup^(0+640),w	;volatile
  7406  1AF1  2B30               	goto	l475
  7407                           
  7408                           ;usb_device.c: 2148: {
  7409                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7410  1AF2  0020               	movlb	0	; select bank0
  7411  1AF3  14E0               	bsf	96,1	;volatile
  7412  1AF4  2B30               	goto	l475
  7413  1AF5                     l476:	
  7414                           ;usb_device.c: 2152: case (0x01):
  7415                           
  7416                           
  7417                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7418  1AF5  0021               	movlb	1	; select bank1
  7419  1AF6  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7420                           
  7421                           ;usb_device.c: 2154: break;
  7422  1AF7  2B30               	goto	l475
  7423  1AF8                     l477:	
  7424                           ;usb_device.c: 2155: case (0x02):
  7425                           
  7426                           
  7427                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7428  1AF8  0021               	movlb	1	; select bank1
  7429  1AF9  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7430                           
  7431                           ;usb_device.c: 2160: {
  7432                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7433                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7434  1AFA  0020               	movlb	0	; select bank0
  7435  1AFB  1BD4               	btfsc	84,7	;volatile
  7436  1AFC  2B09               	goto	l7621
  7437                           
  7438                           ;usb_device.c: 2164: {
  7439                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7440  1AFD  0854               	movf	84,w	;volatile
  7441  1AFE  390F               	andlw	15
  7442  1AFF  0709               	addwf	9,w
  7443  1B00  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7444  1B01  0086               	movwf	6
  7445  1B02  3002               	movlw	2	; select bank5/6
  7446  1B03  0087               	movwf	7
  7447  1B04  3F40               	moviw [0]fsr1
  7448  1B05  0022               	movlb	2	; select bank2
  7449  1B06  00E0               	movwf	USBStdGetStatusHandler@p^(0+256)
  7450  1B07  3F41               	moviw [1]fsr1
  7451  1B08  2B14               	goto	L3
  7452  1B09                     l7621:	
  7453                           ;usb_device.c: 2166: }
  7454                           
  7455                           
  7456                           ;usb_device.c: 2167: else
  7457                           ;usb_device.c: 2168: {
  7458                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7459  1B09  0854               	movf	84,w	;volatile
  7460  1B0A  390F               	andlw	15
  7461  1B0B  0709               	addwf	9,w
  7462  1B0C  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  7463  1B0D  0086               	movwf	6
  7464  1B0E  3002               	movlw	2	; select bank5/6
  7465  1B0F  0087               	movwf	7
  7466  1B10  3F40               	moviw [0]fsr1
  7467  1B11  0022               	movlb	2	; select bank2
  7468  1B12  00E0               	movwf	USBStdGetStatusHandler@p^(0+256)
  7469  1B13  3F41               	moviw [1]fsr1
  7470  1B14                     L3:	
  7471  1B14  00E1               	movwf	(USBStdGetStatusHandler@p+1)^(0+256)
  7472                           
  7473                           ;usb_device.c: 2170: }
  7474                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7475  1B15  0860               	movf	USBStdGetStatusHandler@p^(0+256),w
  7476  1B16  0086               	movwf	6
  7477  1B17  0861               	movf	(USBStdGetStatusHandler@p+1)^(0+256),w
  7478  1B18  0087               	movwf	7
  7479  1B19  1F81               	btfss	1,7
  7480  1B1A  2B30               	goto	l475
  7481  1B1B  0860               	movf	USBStdGetStatusHandler@p^(0+256),w
  7482  1B1C  0086               	movwf	6
  7483  1B1D  0861               	movf	(USBStdGetStatusHandler@p+1)^(0+256),w
  7484  1B1E  0087               	movwf	7
  7485  1B1F  1D01               	btfss	1,2
  7486  1B20  2B30               	goto	l475
  7487                           
  7488                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7489  1B21  3001               	movlw	1
  7490  1B22  0020               	movlb	0	; select bank0
  7491  1B23  00E0               	movwf	96	;volatile
  7492  1B24  2B30               	goto	l475
  7493  1B25                     l7631:	
  7494  1B25  0850               	movf	80,w	;volatile
  7495  1B26  391F               	andlw	31
  7496                           
  7497                           ; Switch size 1, requested type "speed"
  7498                           ; Number of cases is 3, Range of values is 0 to 2
  7499                           ; switch strategies available:
  7500                           ; Name         Instructions Cycles
  7501                           ; simple_byte           10     6 (average)
  7502                           ; direct_byte           12     6 (fixed)
  7503                           ; jumptable            260     6 (fixed)
  7504                           ;	Chosen strategy is simple_byte
  7505  1B27  1903               	skipnz
  7506  1B28  2AED               	goto	l472
  7507  1B29  3A01               	xorlw	1	; case 1
  7508  1B2A  1903               	skipnz
  7509  1B2B  2AF5               	goto	l476
  7510  1B2C  3A03               	xorlw	3	; case 2
  7511  1B2D  1903               	skipnz
  7512  1B2E  2AF8               	goto	l477
  7513  1B2F  2B30               	goto	l475
  7514  1B30                     l475:	
  7515                           
  7516                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7517  1B30  0021               	movlb	1	; select bank1
  7518  1B31  1FE2               	btfss	(_inPipes^(0+128)+2),7	;volatile
  7519  1B32  0008               	return
  7520                           
  7521                           ;usb_device.c: 2179: {
  7522                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7523  1B33  3060               	movlw	96
  7524  1B34  00E0               	movwf	_inPipes^(0+128)	;volatile
  7525  1B35  01E1               	clrf	(_inPipes+1)^(0+128)	;volatile
  7526                           
  7527                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7528  1B36  1462               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7529                           
  7530                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7531  1B37  3002               	movlw	2
  7532  1B38  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  7533  1B39  0008               	return
  7534  1B3A                     __end_of_USBStdGetStatusHandler:	
  7535                           
  7536                           	psect	text20
  7537  1CE8                     __ptext20:	
  7538 ;; *************** function _USBStdGetDscHandler *****************
  7539 ;; Defined at:
  7540 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;		None
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7549 ;; Tracked objects:
  7550 ;;		On entry : 1A/0
  7551 ;;		On exit  : 1E/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;Total ram usage:        3 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:   10
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		_USBCheckStdRequest
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function _USBStdGetDscHandler
  7570  1CE8                     _USBStdGetDscHandler:	
  7571  1CE8                     l4877:	
  7572                           ;incstack = 0
  7573                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  7574                           
  7575                           
  7576                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7577  1CE8  3080               	movlw	128
  7578  1CE9  0020               	movlb	0	; select bank0
  7579  1CEA  0650               	xorwf	80,w	;volatile
  7580  1CEB  1D03               	btfss	3,2
  7581  1CEC  0008               	return
  7582                           
  7583                           ;usb_device.c: 2046: {
  7584                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7585  1CED  30C0               	movlw	192
  7586  1CEE  0021               	movlb	1	; select bank1
  7587  1CEF  00E2               	movwf	(_inPipes^(0+128)+2)	;volatile
  7588                           
  7589                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7590  1CF0  2D55               	goto	l4905
  7591  1CF1                     l4881:	
  7592                           
  7593                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7594  1CF1  30F7               	movlw	low (_device_dsc| (0+32768))
  7595  1CF2  0021               	movlb	1	; select bank1
  7596  1CF3  00E0               	movwf	_inPipes^(0+128)	;volatile
  7597  1CF4  3098               	movlw	high (_device_dsc| (0+32768))
  7598  1CF5  00E1               	movwf	(_inPipes^(0+128)+1)	;volatile
  7599                           
  7600                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7601  1CF6  3012               	movlw	18
  7602  1CF7  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  7603  1CF8  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  7604                           
  7605                           ;usb_device.c: 2058: break;
  7606  1CF9  0008               	return
  7607  1CFA                     l4883:	
  7608                           
  7609                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7610  1CFA  0852               	movf	82,w	;volatile
  7611  1CFB  1D03               	btfss	3,2
  7612  1CFC  2D2F               	goto	l4891
  7613                           
  7614                           ;usb_device.c: 2064: {
  7615                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7616  1CFD  0852               	movf	82,w	;volatile
  7617  1CFE  0022               	movlb	2	; select bank2
  7618  1CFF  00E0               	movwf	??_USBStdGetDscHandler^(0+256)
  7619  1D00  3013               	movlw	low (_USB_CD_Ptr| (0+32768))
  7620  1D01  01E1               	clrf	(??_USBStdGetDscHandler^(0+256)+1)
  7621  1D02  35E0               	lslf	??_USBStdGetDscHandler^(0+256),f
  7622  1D03  0DE1               	rlf	(??_USBStdGetDscHandler^(0+256)+1),f
  7623  1D04  0760               	addwf	??_USBStdGetDscHandler^(0+256),w
  7624  1D05  0084               	movwf	4
  7625  1D06  3099               	movlw	high (_USB_CD_Ptr| (0+32768))
  7626  1D07  3D61               	addwfc	(??_USBStdGetDscHandler+1)^(0+256),w
  7627  1D08  0085               	movwf	5
  7628  1D09  3F00               	moviw [0]fsr0
  7629  1D0A  0021               	movlb	1	; select bank1
  7630  1D0B  00E0               	movwf	_inPipes^(0+128)	;volatile
  7631  1D0C  3F01               	moviw [1]fsr0
  7632  1D0D  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  7633                           
  7634                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7635  1D0E  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
  7636  1D0F  0022               	movlb	2	; select bank2
  7637  1D10  00E1               	movwf	(??_USBStdGetDscHandler^(0+256)+1)
  7638  1D11  0021               	movlb	1	; select bank1
  7639  1D12  0860               	movf	_inPipes^(0+128),w	;volatile
  7640  1D13  0022               	movlb	2	; select bank2
  7641  1D14  00E0               	movwf	??_USBStdGetDscHandler^(0+256)
  7642  1D15  3E02               	addlw	2
  7643  1D16  0084               	movwf	4
  7644  1D17  0861               	movf	(??_USBStdGetDscHandler^(0+256)+1),w
  7645  1D18  1803               	skipnc
  7646  1D19  0A61               	incf	(??_USBStdGetDscHandler^(0+256)+1),w
  7647  1D1A  0085               	movwf	5
  7648  1D1B  0800               	movf	0,w	;code access
  7649  1D1C  0021               	movlb	1	; select bank1
  7650  1D1D  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  7651                           
  7652                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7653  1D1E  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
  7654  1D1F  0022               	movlb	2	; select bank2
  7655  1D20  00E1               	movwf	(??_USBStdGetDscHandler^(0+256)+1)
  7656  1D21  0021               	movlb	1	; select bank1
  7657  1D22  0860               	movf	_inPipes^(0+128),w	;volatile
  7658  1D23  0022               	movlb	2	; select bank2
  7659  1D24  00E0               	movwf	??_USBStdGetDscHandler^(0+256)
  7660  1D25  3E03               	addlw	3
  7661  1D26  0084               	movwf	4
  7662  1D27  0861               	movf	(??_USBStdGetDscHandler^(0+256)+1),w
  7663  1D28  1803               	skipnc
  7664  1D29  0A61               	incf	(??_USBStdGetDscHandler^(0+256)+1),w
  7665  1D2A  0085               	movwf	5
  7666  1D2B  0800               	movf	0,w	;code access
  7667  1D2C  0021               	movlb	1	; select bank1
  7668  1D2D  00E4               	movwf	(_inPipes^(0+128)+4)	;volatile
  7669                           
  7670                           ;usb_device.c: 2076: }
  7671  1D2E  0008               	return
  7672  1D2F                     l4891:	
  7673                           
  7674                           ;usb_device.c: 2077: else
  7675                           ;usb_device.c: 2078: {
  7676                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7677  1D2F  0021               	movlb	1	; select bank1
  7678  1D30  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
  7679  1D31  0008               	return
  7680  1D32                     l4893:	
  7681                           
  7682                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7683  1D32  3003               	movlw	3
  7684  1D33  0252               	subwf	82,w	;volatile
  7685  1D34  1803               	skipnc
  7686  1D35  2D4F               	goto	l4899
  7687                           
  7688                           ;usb_device.c: 2087: {
  7689                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7690  1D36  0852               	movf	82,w	;volatile
  7691  1D37  0022               	movlb	2	; select bank2
  7692  1D38  00E0               	movwf	??_USBStdGetDscHandler^(0+256)
  7693  1D39  3009               	movlw	low (_USB_SD_Ptr| (0+32768))
  7694  1D3A  01E1               	clrf	(??_USBStdGetDscHandler^(0+256)+1)
  7695  1D3B  35E0               	lslf	??_USBStdGetDscHandler^(0+256),f
  7696  1D3C  0DE1               	rlf	(??_USBStdGetDscHandler^(0+256)+1),f
  7697  1D3D  0760               	addwf	??_USBStdGetDscHandler^(0+256),w
  7698  1D3E  0084               	movwf	4
  7699  1D3F  3099               	movlw	high (_USB_SD_Ptr| (0+32768))
  7700  1D40  3D61               	addwfc	(??_USBStdGetDscHandler+1)^(0+256),w
  7701  1D41  0085               	movwf	5
  7702  1D42  3F00               	moviw [0]fsr0
  7703  1D43  0021               	movlb	1	; select bank1
  7704  1D44  00E0               	movwf	_inPipes^(0+128)	;volatile
  7705  1D45  3F01               	moviw [1]fsr0
  7706  1D46  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  7707                           
  7708                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7709  1D47  0860               	movf	_inPipes^(0+128),w	;volatile
  7710  1D48  0084               	movwf	4
  7711  1D49  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
  7712  1D4A  0085               	movwf	5
  7713  1D4B  0800               	movf	0,w	;code access
  7714  1D4C  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  7715  1D4D  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  7716                           
  7717                           ;usb_device.c: 2092: }
  7718  1D4E  0008               	return
  7719  1D4F                     l4899:	
  7720                           
  7721                           ;usb_device.c: 2102: else
  7722                           ;usb_device.c: 2103: {
  7723                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7724  1D4F  0021               	movlb	1	; select bank1
  7725  1D50  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
  7726  1D51  0008               	return
  7727  1D52                     l4901:	
  7728                           
  7729                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7730  1D52  0021               	movlb	1	; select bank1
  7731  1D53  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
  7732                           
  7733                           ;usb_device.c: 2109: break;
  7734  1D54  0008               	return
  7735  1D55                     l4905:	
  7736  1D55  0020               	movlb	0	; select bank0
  7737  1D56  0853               	movf	83,w	;volatile
  7738                           
  7739                           ; Switch size 1, requested type "speed"
  7740                           ; Number of cases is 3, Range of values is 1 to 3
  7741                           ; switch strategies available:
  7742                           ; Name         Instructions Cycles
  7743                           ; simple_byte           10     6 (average)
  7744                           ; direct_byte           15     9 (fixed)
  7745                           ; jumptable            263     9 (fixed)
  7746                           ;	Chosen strategy is simple_byte
  7747  1D57  3A01               	xorlw	1	; case 1
  7748  1D58  1903               	skipnz
  7749  1D59  2CF1               	goto	l4881
  7750  1D5A  3A03               	xorlw	3	; case 2
  7751  1D5B  1903               	skipnz
  7752  1D5C  2CFA               	goto	l4883
  7753  1D5D  3A01               	xorlw	1	; case 3
  7754  1D5E  1903               	skipnz
  7755  1D5F  2D32               	goto	l4893
  7756  1D60  2D52               	goto	l4901
  7757  1D61  0008               	return
  7758  1D62                     __end_of_USBStdGetDscHandler:	
  7759                           
  7760                           	psect	swtext2
  7761  070E                     __pswtext2:	
  7762  070E                     S8543:	
  7763  070E  318A  2A7D         	ljmp	l7531
  7764  0710  318A  2A93         	ljmp	l184
  7765  0712  318A  2A7F         	ljmp	l7533
  7766  0714  318A  2A93         	ljmp	l184
  7767  0716  318A  2A93         	ljmp	l184
  7768  0718  318A  2A93         	ljmp	l184
  7769  071A  318A  2A93         	ljmp	l184
  7770  071C  318A  2A93         	ljmp	l184
  7771  071E  318A  2A93         	ljmp	l184
  7772  0720  318A  2A93         	ljmp	l184
  7773  0722  318A  2A93         	ljmp	l184
  7774  0724  318A  2A93         	ljmp	l184
  7775  0726  318A  2A93         	ljmp	l184
  7776  0728  318A  2A93         	ljmp	l184
  7777  072A  318A  2A93         	ljmp	l184
  7778  072C  318A  2A93         	ljmp	l184
  7779  072E  318A  2A93         	ljmp	l184
  7780  0730  318A  2A93         	ljmp	l184
  7781  0732  318A  2A93         	ljmp	l184
  7782  0734  318A  2A93         	ljmp	l184
  7783  0736  318A  2A93         	ljmp	l184
  7784  0738  318A  2A93         	ljmp	l184
  7785  073A  318A  2A93         	ljmp	l184
  7786  073C  318A  2A93         	ljmp	l184
  7787  073E  318A  2A93         	ljmp	l184
  7788  0740  318A  2A93         	ljmp	l184
  7789  0742  318A  2A93         	ljmp	l184
  7790  0744  318A  2A93         	ljmp	l184
  7791  0746  318A  2A93         	ljmp	l184
  7792  0748  318A  2A93         	ljmp	l184
  7793  074A  318A  2A93         	ljmp	l184
  7794  074C  318A  2A93         	ljmp	l184
  7795  074E  318A  2A93         	ljmp	l184
  7796  0750  318A  2A93         	ljmp	l184
  7797  0752  318A  2A93         	ljmp	l184
  7798  0754  318A  2A93         	ljmp	l184
  7799  0756  318A  2A93         	ljmp	l184
  7800  0758  318A  2A93         	ljmp	l184
  7801  075A  318A  2A93         	ljmp	l184
  7802  075C  318A  2A93         	ljmp	l184
  7803  075E  318A  2A93         	ljmp	l184
  7804  0760  318A  2A93         	ljmp	l184
  7805  0762  318A  2A93         	ljmp	l184
  7806  0764  318A  2A93         	ljmp	l184
  7807  0766  318A  2A93         	ljmp	l184
  7808  0768  318A  2A93         	ljmp	l184
  7809  076A  318A  2A93         	ljmp	l184
  7810  076C  318A  2A93         	ljmp	l184
  7811  076E  318A  2A93         	ljmp	l184
  7812  0770  318A  2A93         	ljmp	l184
  7813  0772  318A  2A93         	ljmp	l184
  7814  0774  318A  2A93         	ljmp	l184
  7815  0776  318A  2A93         	ljmp	l184
  7816  0778  318A  2A93         	ljmp	l184
  7817  077A  318A  2A93         	ljmp	l184
  7818  077C  318A  2A93         	ljmp	l184
  7819  077E  318A  2A93         	ljmp	l184
  7820  0780  318A  2A93         	ljmp	l184
  7821  0782  318A  2A93         	ljmp	l184
  7822  0784  318A  2A93         	ljmp	l184
  7823  0786  318A  2A93         	ljmp	l184
  7824  0788  318A  2A93         	ljmp	l184
  7825  078A  318A  2A93         	ljmp	l184
  7826  078C  318A  2A93         	ljmp	l184
  7827  078E  318A  2A93         	ljmp	l184
  7828  0790  318A  2A93         	ljmp	l184
  7829  0792  318A  2A93         	ljmp	l184
  7830  0794  318A  2A93         	ljmp	l184
  7831  0796  318A  2A93         	ljmp	l184
  7832  0798  318A  2A93         	ljmp	l184
  7833  079A  318A  2A93         	ljmp	l184
  7834  079C  318A  2A93         	ljmp	l184
  7835  079E  318A  2A93         	ljmp	l184
  7836  07A0  318A  2A93         	ljmp	l184
  7837  07A2  318A  2A93         	ljmp	l184
  7838  07A4  318A  2A93         	ljmp	l184
  7839  07A6  318A  2A93         	ljmp	l184
  7840  07A8  318A  2A93         	ljmp	l184
  7841  07AA  318A  2A93         	ljmp	l184
  7842  07AC  318A  2A93         	ljmp	l184
  7843  07AE  318A  2A93         	ljmp	l184
  7844  07B0  318A  2A93         	ljmp	l184
  7845  07B2  318A  2A93         	ljmp	l184
  7846  07B4  318A  2A93         	ljmp	l184
  7847  07B6  318A  2A93         	ljmp	l184
  7848  07B8  318A  2A93         	ljmp	l184
  7849  07BA  318A  2A93         	ljmp	l184
  7850  07BC  318A  2A93         	ljmp	l184
  7851  07BE  318A  2A93         	ljmp	l184
  7852  07C0  318A  2A93         	ljmp	l184
  7853  07C2  318A  2A93         	ljmp	l184
  7854  07C4  318A  2A93         	ljmp	l184
  7855  07C6  318A  2A93         	ljmp	l184
  7856  07C8  318A  2A93         	ljmp	l184
  7857  07CA  318A  2A93         	ljmp	l184
  7858  07CC  318A  2A93         	ljmp	l184
  7859  07CE  318A  2A93         	ljmp	l184
  7860  07D0  318A  2A93         	ljmp	l184
  7861  07D2  318A  2A93         	ljmp	l184
  7862  07D4  318A  2A93         	ljmp	l184
  7863  07D6  318A  2A93         	ljmp	l184
  7864  07D8  318A  2A93         	ljmp	l184
  7865  07DA  318A  2A93         	ljmp	l184
  7866  07DC  318A  2A93         	ljmp	l184
  7867  07DE  318A  2A93         	ljmp	l184
  7868  07E0  318A  2A93         	ljmp	l184
  7869  07E2  318A  2A93         	ljmp	l184
  7870  07E4  318A  2A93         	ljmp	l184
  7871  07E6  318A  2A93         	ljmp	l184
  7872  07E8  318A  2A93         	ljmp	l184
  7873  07EA  318A  2A93         	ljmp	l184
  7874  07EC  318A  2A93         	ljmp	l184
  7875  07EE  318A  2A93         	ljmp	l184
  7876  07F0  318A  2A93         	ljmp	l184
  7877  07F2  318A  2A93         	ljmp	l184
  7878  07F4  318A  2A93         	ljmp	l184
  7879  07F6  318A  2A93         	ljmp	l184
  7880                           
  7881                           	psect	text23
  7882  1A4F                     __ptext23:	
  7883 ;; *************** function _USBCheckCDCRequest *****************
  7884 ;; Defined at:
  7885 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 1F/2
  7896 ;;		On exit  : 1A/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;Total ram usage:        0 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:   10
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           
  7914                           ;psect for function _USBCheckCDCRequest
  7915  1A4F                     _USBCheckCDCRequest:	
  7916  1A4F                     l4489:	
  7917                           ;incstack = 0
  7918                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  7919                           
  7920                           
  7921                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  7922  1A4F  0020               	movlb	0	; select bank0
  7923  1A50  0850               	movf	80,w	;volatile
  7924  1A51  391F               	andlw	31
  7925  1A52  3A01               	xorlw	1
  7926  1A53  1D03               	btfss	3,2
  7927  1A54  0008               	return
  7928                           
  7929                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  7930  1A55  0E50               	swapf	80,w	;volatile
  7931  1A56  0C89               	rrf	9,f
  7932  1A57  3903               	andlw	3
  7933  1A58  3A01               	xorlw	1
  7934  1A59  1D03               	btfss	3,2
  7935  1A5A  0008               	return
  7936                           
  7937                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  7938                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  7939  1A5B  0854               	movf	84,w	;volatile
  7940  1A5C  1903               	btfsc	3,2
  7941  1A5D  2A90               	goto	l4533
  7942  1A5E  0354               	decf	84,w	;volatile
  7943  1A5F  1D03               	btfss	3,2
  7944  1A60  0008               	return
  7945  1A61  2A90               	goto	l4533
  7946  1A62                     l4503:	
  7947                           
  7948                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7949  1A62  3024               	movlw	low _dummy_encapsulated_cmd_response
  7950  1A63  0021               	movlb	1	; select bank1
  7951  1A64  00E0               	movwf	_inPipes^(0+128)	;volatile
  7952  1A65  3003               	movlw	high _dummy_encapsulated_cmd_response
  7953  1A66  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  7954                           
  7955                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  7956  1A67  3008               	movlw	8
  7957  1A68  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  7958  1A69  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  7959                           
  7960                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7961  1A6A  1462               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7962                           
  7963                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  7964  1A6B  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7965                           
  7966                           ;usb_device_cdc.c: 174: break;
  7967  1A6C  0008               	return
  7968  1A6D                     l4511:	
  7969                           
  7970                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7971  1A6D  3024               	movlw	low _dummy_encapsulated_cmd_response
  7972  1A6E  0021               	movlb	1	; select bank1
  7973  1A6F  00E0               	movwf	_inPipes^(0+128)	;volatile
  7974  1A70  3003               	movlw	high _dummy_encapsulated_cmd_response
  7975  1A71  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  7976                           
  7977                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  7978  1A72  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7979                           
  7980                           ;usb_device_cdc.c: 179: break;
  7981  1A73  0008               	return
  7982  1A74                     l4515:	
  7983                           
  7984                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  7985  1A74  0857               	movf	87,w	;volatile
  7986  1A75  0025               	movlb	5	; select bank5
  7987  1A76  00A4               	movwf	((_outPipes+1)^(0+640)+3)	;volatile
  7988  1A77  0020               	movlb	0	; select bank0
  7989  1A78  0856               	movf	86,w	;volatile
  7990  1A79  0025               	movlb	5	; select bank5
  7991  1A7A  00A3               	movwf	(_outPipes^(0+640)+3)	;volatile
  7992                           
  7993                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7994  1A7B  30DF               	movlw	(low (_line_coding| (0+512)))& (0+255)
  7995  1A7C  00A0               	movwf	_outPipes^(0+640)	;volatile
  7996                           
  7997                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  7998  1A7D  01A5               	clrf	(low ((_outPipes| (0+512)+5)))^(0+128)	;volatile
  7999  1A7E  01A6               	clrf	((low ((_outPipes| (0+512)+5))+1))^(0+128)	;volatile
  8000                           
  8001                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  8002  1A7F  17A2               	bsf	(_outPipes^(0+640)+2),7	;volatile
  8003                           
  8004                           ;usb_device_cdc.c: 188: break;
  8005  1A80  0008               	return
  8006  1A81                     l4521:	
  8007                           
  8008                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  8009  1A81  30DF               	movlw	low _line_coding
  8010  1A82  0021               	movlb	1	; select bank1
  8011  1A83  00E0               	movwf	_inPipes^(0+128)	;volatile
  8012  1A84  3002               	movlw	high _line_coding
  8013  1A85  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  8014  1A86  3007               	movlw	7
  8015  1A87  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  8016  1A88  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  8017  1A89  30C1               	movlw	193
  8018  1A8A  00E2               	movwf	(_inPipes^(0+128)+2)	;volatile
  8019                           
  8020                           ;usb_device_cdc.c: 195: break;
  8021  1A8B  0008               	return
  8022  1A8C                     l4527:	
  8023                           
  8024                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  8025  1A8C  0852               	movf	82,w	;volatile
  8026                           
  8027                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  8028  1A8D  0021               	movlb	1	; select bank1
  8029  1A8E  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  8030                           
  8031                           ;usb_device_cdc.c: 231: break;
  8032  1A8F  0008               	return
  8033  1A90                     l4533:	
  8034  1A90  0851               	movf	81,w	;volatile
  8035                           
  8036                           ; Switch size 1, requested type "speed"
  8037                           ; Number of cases is 5, Range of values is 0 to 34
  8038                           ; switch strategies available:
  8039                           ; Name         Instructions Cycles
  8040                           ; direct_byte           76     6 (fixed)
  8041                           ; simple_byte           16     9 (average)
  8042                           ; jumptable            260     6 (fixed)
  8043                           ;	Chosen strategy is direct_byte
  8044  1A91  0084               	movwf	4
  8045  1A92  3023               	movlw	35
  8046  1A93  0204               	subwf	4,w
  8047  1A94  1803               	skipnc
  8048  1A95  0008               	return
  8049  1A96  3198               	movlp	high S8545
  8050  1A97  3504               	lslf	4,w
  8051  1A98  3E00               	addlw	low S8545
  8052  1A99  0082               	movwf	2
  8053  1A9A                     l40:	
  8054  1A9A  0008               	return
  8055  1A9B                     __end_of_USBCheckCDCRequest:	
  8056                           
  8057                           	psect	swtext3
  8058  1800                     __pswtext3:	
  8059  1800                     S8545:	
  8060  1800  319A  2A62         	ljmp	l4503
  8061  1802  319A  2A6D         	ljmp	l4511
  8062  1804  319A  2A9A         	ljmp	l40
  8063  1806  319A  2A9A         	ljmp	l40
  8064  1808  319A  2A9A         	ljmp	l40
  8065  180A  319A  2A9A         	ljmp	l40
  8066  180C  319A  2A9A         	ljmp	l40
  8067  180E  319A  2A9A         	ljmp	l40
  8068  1810  319A  2A9A         	ljmp	l40
  8069  1812  319A  2A9A         	ljmp	l40
  8070  1814  319A  2A9A         	ljmp	l40
  8071  1816  319A  2A9A         	ljmp	l40
  8072  1818  319A  2A9A         	ljmp	l40
  8073  181A  319A  2A9A         	ljmp	l40
  8074  181C  319A  2A9A         	ljmp	l40
  8075  181E  319A  2A9A         	ljmp	l40
  8076  1820  319A  2A9A         	ljmp	l40
  8077  1822  319A  2A9A         	ljmp	l40
  8078  1824  319A  2A9A         	ljmp	l40
  8079  1826  319A  2A9A         	ljmp	l40
  8080  1828  319A  2A9A         	ljmp	l40
  8081  182A  319A  2A9A         	ljmp	l40
  8082  182C  319A  2A9A         	ljmp	l40
  8083  182E  319A  2A9A         	ljmp	l40
  8084  1830  319A  2A9A         	ljmp	l40
  8085  1832  319A  2A9A         	ljmp	l40
  8086  1834  319A  2A9A         	ljmp	l40
  8087  1836  319A  2A9A         	ljmp	l40
  8088  1838  319A  2A9A         	ljmp	l40
  8089  183A  319A  2A9A         	ljmp	l40
  8090  183C  319A  2A9A         	ljmp	l40
  8091  183E  319A  2A9A         	ljmp	l40
  8092  1840  319A  2A74         	ljmp	l4515
  8093  1842  319A  2A81         	ljmp	l4521
  8094  1844  319A  2A8C         	ljmp	l4527
  8095                           
  8096                           	psect	text24
  8097  1B9D                     __ptext24:	
  8098 ;; *************** function _CDCInitEP *****************
  8099 ;; Defined at:
  8100 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;		None
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      void 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 1F/2
  8111 ;;		On exit  : 1F/5
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;Total ram usage:        0 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:   12
  8121 ;; This function calls:
  8122 ;;		_USBEnableEndpoint
  8123 ;; This function is called by:
  8124 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           
  8129                           ;psect for function _CDCInitEP
  8130  1B9D                     _CDCInitEP:	
  8131  1B9D                     l7517:	
  8132                           ;incstack = 0
  8133                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8134                           
  8135                           
  8136                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  8137  1B9D  0025               	movlb	5	; select bank5
  8138  1B9E  304B               	movlw	75
  8139  1B9F  01E2               	clrf	(_line_coding+3)^(0+640)
  8140  1BA0  01E1               	clrf	(_line_coding+2)^(0+640)
  8141  1BA1  00E0               	movwf	(_line_coding+1)^(0+640)
  8142  1BA2  3008               	movlw	8
  8143  1BA3  01DF               	clrf	_line_coding^(0+640)
  8144                           
  8145                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  8146  1BA4  01E3               	clrf	(_line_coding^(0+640)+4)
  8147  1BA5  01E4               	clrf	(_line_coding^(0+640)+5)
  8148                           
  8149                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  8150  1BA6  00E5               	movwf	(_line_coding^(0+640)+6)
  8151                           
  8152                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  8153  1BA7  301A               	movlw	26
  8154  1BA8  0022               	movlb	2	; select bank2
  8155  1BA9  00E4               	movwf	USBEnableEndpoint@options^(0+256)
  8156  1BAA  3001               	movlw	1
  8157  1BAB  23B4  319B         	fcall	_USBEnableEndpoint
  8158                           
  8159                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  8160  1BAD  301E               	movlw	30
  8161  1BAE  00E4               	movwf	USBEnableEndpoint@options^(0+256)
  8162  1BAF  3002               	movlw	2
  8163  1BB0  23B4               	fcall	_USBEnableEndpoint
  8164                           
  8165                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  8166  1BB1  0025               	movlb	5	; select bank5
  8167  1BB2  01DE               	clrf	_cdc_trf_state^(0+640)
  8168  1BB3  0008               	return
  8169  1BB4                     __end_of_CDCInitEP:	
  8170  1BB4                     __ptext25:	
  8171 ;; *************** function _USBEnableEndpoint *****************
  8172 ;; Defined at:
  8173 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  ep              1    wreg     unsigned char 
  8176 ;;  options         1    4[BANK2 ] unsigned char 
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  ep              1    9[BANK2 ] unsigned char 
  8179 ;;  p               2    7[BANK2 ] PTR unsigned char 
  8180 ;;		 -> UEP0(1), 
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8185 ;; Tracked objects:
  8186 ;;		On entry : 1F/2
  8187 ;;		On exit  : 1F/2
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8190 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  8194 ;;Total ram usage:        6 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:   11
  8197 ;; This function calls:
  8198 ;;		_USBConfigureEndpoint
  8199 ;; This function is called by:
  8200 ;;		_CDCInitEP
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           
  8205                           ;psect for function _USBEnableEndpoint
  8206  1BB4                     _USBEnableEndpoint:	
  8207                           
  8208                           ;incstack = 0
  8209                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8210                           ;USBEnableEndpoint@ep stored from wreg
  8211  1BB4  00E9               	movwf	USBEnableEndpoint@ep^(0+256)
  8212                           
  8213                           ;usb_device.c: 880: unsigned char* p;
  8214                           ;usb_device.c: 884: if(options & 0x04)
  8215  1BB5  1D64               	btfss	USBEnableEndpoint@options^(0+256),2
  8216  1BB6  2BBA               	goto	l4469
  8217                           
  8218                           ;usb_device.c: 885: {
  8219                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8220  1BB7  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  8221  1BB8  23D1  319B         	fcall	_USBConfigureEndpoint
  8222  1BBA                     l4469:	
  8223                           
  8224                           ;usb_device.c: 887: }
  8225                           ;usb_device.c: 888: if(options & 0x02)
  8226  1BBA  1CE4               	btfss	USBEnableEndpoint@options^(0+256),1
  8227  1BBB  2BC0               	goto	l4473
  8228                           
  8229                           ;usb_device.c: 889: {
  8230                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8231  1BBC  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  8232  1BBD  0AE0               	incf	USBConfigureEndpoint@direction^(0+256),f
  8233  1BBE  0869               	movf	USBEnableEndpoint@ep^(0+256),w
  8234  1BBF  23D1               	fcall	_USBConfigureEndpoint
  8235  1BC0                     l4473:	
  8236                           
  8237                           ;usb_device.c: 891: }
  8238                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8239  1BC0  0869               	movf	USBEnableEndpoint@ep^(0+256),w
  8240  1BC1  3E98               	addlw	152
  8241  1BC2  00E5               	movwf	??_USBEnableEndpoint^(0+256)
  8242  1BC3  300E               	movlw	14
  8243  1BC4  01E6               	clrf	(??_USBEnableEndpoint^(0+256)+1)
  8244  1BC5  3DE6               	addwfc	(??_USBEnableEndpoint^(0+256)+1),f
  8245  1BC6  0865               	movf	??_USBEnableEndpoint^(0+256),w
  8246  1BC7  00E7               	movwf	USBEnableEndpoint@p^(0+256)
  8247  1BC8  0866               	movf	(??_USBEnableEndpoint+1)^(0+256),w
  8248  1BC9  00E8               	movwf	(USBEnableEndpoint@p+1)^(0+256)
  8249                           
  8250                           ;usb_device.c: 901: *p = options;
  8251  1BCA  0867               	movf	USBEnableEndpoint@p^(0+256),w
  8252  1BCB  0086               	movwf	6
  8253  1BCC  0868               	movf	(USBEnableEndpoint@p+1)^(0+256),w
  8254  1BCD  0087               	movwf	7
  8255  1BCE  0864               	movf	USBEnableEndpoint@options^(0+256),w
  8256  1BCF  0081               	movwf	1
  8257  1BD0  0008               	return
  8258  1BD1                     __end_of_USBEnableEndpoint:	
  8259  1BD1                     __ptext26:	
  8260 ;; *************** function _USBConfigureEndpoint *****************
  8261 ;; Defined at:
  8262 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  EPNum           1    wreg     unsigned char 
  8265 ;;  direction       1    0[BANK2 ] unsigned char 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  EPNum           1    2[BANK2 ] unsigned char 
  8268 ;;  handle          1    3[BANK2 ] PTR volatile struct __BD
  8269 ;;		 -> BDT(48), 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8274 ;; Tracked objects:
  8275 ;;		On entry : 1F/2
  8276 ;;		On exit  : 1F/2
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8279 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;Total ram usage:        4 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   10
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_USBEnableEndpoint
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function _USBConfigureEndpoint
  8295  1BD1                     _USBConfigureEndpoint:	
  8296                           
  8297                           ;incstack = 0
  8298                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8299                           ;USBConfigureEndpoint@EPNum stored from wreg
  8300  1BD1  00E2               	movwf	USBConfigureEndpoint@EPNum^(0+256)
  8301                           
  8302                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8303                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8304  1BD2  3020               	movlw	32
  8305  1BD3  00E3               	movwf	USBConfigureEndpoint@handle^(0+256)
  8306                           
  8307                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8308  1BD4  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  8309  1BD5  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  8310  1BD6  35E1               	lslf	??_USBConfigureEndpoint^(0+256),f
  8311  1BD7  0862               	movf	USBConfigureEndpoint@EPNum^(0+256),w
  8312  1BD8  0709               	addwf	9,w
  8313  1BD9  0709               	addwf	9,w
  8314  1BDA  0761               	addwf	??_USBConfigureEndpoint^(0+256),w
  8315  1BDB  0709               	addwf	9,w
  8316  1BDC  0709               	addwf	9,w
  8317  1BDD  07E3               	addwf	USBConfigureEndpoint@handle^(0+256),f
  8318                           
  8319                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8320  1BDE  0863               	movf	USBConfigureEndpoint@handle^(0+256),w
  8321  1BDF  0086               	movwf	6
  8322  1BE0  0187               	clrf	7
  8323  1BE1  1381               	bcf	1,7
  8324                           
  8325                           ;usb_device.c: 1557: if(direction == 0)
  8326  1BE2  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  8327  1BE3  1D03               	btfss	3,2
  8328  1BE4  2BEF               	goto	l4443
  8329                           
  8330                           ;usb_device.c: 1558: {
  8331                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8332  1BE5  3562               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  8333  1BE6  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  8334  1BE7  0086               	movwf	6
  8335  1BE8  3002               	movlw	2	; select bank5/6
  8336  1BE9  0087               	movwf	7
  8337  1BEA  0863               	movf	USBConfigureEndpoint@handle^(0+256),w
  8338  1BEB  3FC0               	movwi [0]fsr1
  8339  1BEC  3000               	movlw	0
  8340  1BED  3FC1               	movwi [1]fsr1
  8341                           
  8342                           ;usb_device.c: 1560: }
  8343  1BEE  2BF8               	goto	l4445
  8344  1BEF                     l4443:	
  8345                           
  8346                           ;usb_device.c: 1561: else
  8347                           ;usb_device.c: 1562: {
  8348                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8349  1BEF  3562               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  8350  1BF0  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  8351  1BF1  0086               	movwf	6
  8352  1BF2  3002               	movlw	2	; select bank5/6
  8353  1BF3  0087               	movwf	7
  8354  1BF4  0863               	movf	USBConfigureEndpoint@handle^(0+256),w
  8355  1BF5  3FC0               	movwi [0]fsr1
  8356  1BF6  3000               	movlw	0
  8357  1BF7  3FC1               	movwi [1]fsr1
  8358  1BF8                     l4445:	
  8359                           
  8360                           ;usb_device.c: 1564: }
  8361                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8362  1BF8  0863               	movf	USBConfigureEndpoint@handle^(0+256),w
  8363  1BF9  0086               	movwf	6
  8364  1BFA  0187               	clrf	7
  8365  1BFB  1301               	bcf	1,6
  8366                           
  8367                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8368  1BFC  0863               	movf	USBConfigureEndpoint@handle^(0+256),w
  8369  1BFD  3E04               	addlw	4
  8370  1BFE  0086               	movwf	6
  8371  1BFF  1701               	bsf	1,6
  8372  1C00  0008               	return
  8373  1C01                     __end_of_USBConfigureEndpoint:	
  8374                           
  8375                           	psect	text27
  8376  1F21                     __ptext27:	
  8377 ;; *************** function _USBCtrlTrfOutHandler *****************
  8378 ;; Defined at:
  8379 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;		None
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : 1F/3
  8390 ;;		On exit  : 18/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;Total ram usage:        2 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   12
  8400 ;; This function calls:
  8401 ;;		_USBCtrlTrfRxService
  8402 ;; This function is called by:
  8403 ;;		_USBCtrlEPService
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           
  8408                           ;psect for function _USBCtrlTrfOutHandler
  8409  1F21                     _USBCtrlTrfOutHandler:	
  8410  1F21                     l5579:	
  8411                           ;incstack = 0
  8412                           ; Regs used in _USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8413                           
  8414                           
  8415                           ;usb_device.c: 2540: if(controlTransferState == 2)
  8416  1F21  3002               	movlw	2
  8417  1F22  0024               	movlb	4	; select bank4
  8418  1F23  066C               	xorwf	_controlTransferState^(0+512),w	;volatile
  8419  1F24  1D03               	btfss	3,2
  8420  1F25  2F27               	goto	l5583
  8421                           
  8422                           ;usb_device.c: 2541: {
  8423                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  8424  1F26  2F59               	ljmp	l5325
  8425  1F27                     l5583:	
  8426                           ;usb_device.c: 2543: }
  8427                           
  8428                           
  8429                           ;usb_device.c: 2544: else
  8430                           ;usb_device.c: 2545: {
  8431                           ;usb_device.c: 2548: controlTransferState = 0;
  8432  1F27  01EC               	clrf	_controlTransferState^(0+512)	;volatile
  8433                           
  8434                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  8435  1F28  0025               	movlb	5	; select bank5
  8436  1F29  0858               	movf	_BothEP0OutUOWNsSet^(0+640),w	;volatile
  8437  1F2A  1D03               	btfss	3,2
  8438  1F2B  2F57               	goto	l5595
  8439                           
  8440                           ;usb_device.c: 2556: {
  8441                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
  8442  1F2C  0023               	movlb	3	; select bank3
  8443  1F2D  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8444  1F2E  3E01               	addlw	1
  8445  1F2F  0022               	movlb	2	; select bank2
  8446  1F30  00E6               	movwf	??_USBCtrlTrfOutHandler^(0+256)
  8447  1F31  3000               	movlw	0
  8448  1F32  0023               	movlb	3	; select bank3
  8449  1F33  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8450  1F34  0022               	movlb	2	; select bank2
  8451  1F35  00E7               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+256)
  8452  1F36  0866               	movf	??_USBCtrlTrfOutHandler^(0+256),w
  8453  1F37  0086               	movwf	6
  8454  1F38  0867               	movf	(??_USBCtrlTrfOutHandler+1)^(0+256),w
  8455  1F39  0087               	movwf	7
  8456  1F3A  3010               	movlw	16
  8457  1F3B  0081               	movwf	1
  8458                           
  8459                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8460  1F3C  3050               	movlw	80
  8461  1F3D  00E6               	movwf	??_USBCtrlTrfOutHandler^(0+256)
  8462  1F3E  01E7               	clrf	(??_USBCtrlTrfOutHandler^(0+256)+1)
  8463  1F3F  0023               	movlb	3	; select bank3
  8464  1F40  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8465  1F41  0086               	movwf	6
  8466  1F42  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8467  1F43  0087               	movwf	7
  8468  1F44  3142               	addfsr 1,2
  8469  1F45  0022               	movlb	2	; select bank2
  8470  1F46  0866               	movf	??_USBCtrlTrfOutHandler^(0+256),w
  8471  1F47  3FC0               	movwi [0]fsr1
  8472  1F48  0867               	movf	(??_USBCtrlTrfOutHandler^(0+256)+1),w
  8473  1F49  3FC1               	movwi [1]fsr1
  8474                           
  8475                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8476  1F4A  0023               	movlb	3	; select bank3
  8477  1F4B  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8478  1F4C  0086               	movwf	6
  8479  1F4D  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8480  1F4E  0087               	movwf	7
  8481  1F4F  300C               	movlw	12
  8482  1F50  0081               	movwf	1
  8483                           
  8484                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8485  1F51  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8486  1F52  0086               	movwf	6
  8487  1F53  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8488  1F54  0087               	movwf	7
  8489  1F55  1781               	bsf	1,7
  8490                           
  8491                           ;usb_device.c: 2561: }
  8492  1F56  0008               	return
  8493  1F57                     l5595:	
  8494                           
  8495                           ;usb_device.c: 2562: else
  8496                           ;usb_device.c: 2563: {
  8497                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  8498  1F57  01D8               	clrf	_BothEP0OutUOWNsSet^(0+640)	;volatile
  8499  1F58  0008               	return
  8500  1F59                     __end_of_USBCtrlTrfOutHandler:	
  8501  1F59                     __ptext28:	
  8502 ;; *************** function _USBCtrlTrfRxService *****************
  8503 ;; Defined at:
  8504 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;  byteToRead      1    5[BANK2 ] unsigned char 
  8509 ;;  i               1    4[BANK2 ] unsigned char 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 1F/4
  8516 ;;		On exit  : 18/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;Total ram usage:        4 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:   11
  8526 ;; This function calls:
  8527 ;;		_USBCtrlEPAllowStatusStage
  8528 ;; This function is called by:
  8529 ;;		_USBCtrlTrfOutHandler
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           
  8534                           ;psect for function _USBCtrlTrfRxService
  8535  1F59                     _USBCtrlTrfRxService:	
  8536  1F59                     l5325:	
  8537                           ;incstack = 0
  8538                           ; Regs used in _USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8539                           
  8540                           
  8541                           ;usb_device.c: 1854: uint8_t byteToRead;
  8542                           ;usb_device.c: 1855: uint8_t i;
  8543                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8544  1F59  0023               	movlb	3	; select bank3
  8545  1F5A  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8546  1F5B  0086               	movwf	6
  8547  1F5C  0187               	clrf	7
  8548  1F5D  3F41               	moviw [1]fsr1
  8549  1F5E  0022               	movlb	2	; select bank2
  8550  1F5F  00E5               	movwf	USBCtrlTrfRxService@byteToRead^(0+256)
  8551                           
  8552                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  8553  1F60  00E2               	movwf	??_USBCtrlTrfRxService^(0+256)
  8554  1F61  01E3               	clrf	(??_USBCtrlTrfRxService^(0+256)+1)
  8555  1F62  0863               	movf	(??_USBCtrlTrfRxService+1)^(0+256),w
  8556  1F63  0025               	movlb	5	; select bank5
  8557  1F64  0224               	subwf	((_outPipes+1)^(0+640)+3),w	;volatile
  8558  1F65  1D03               	skipz
  8559  1F66  2F6B               	goto	u4315
  8560  1F67  0022               	movlb	2	; select bank2
  8561  1F68  0862               	movf	??_USBCtrlTrfRxService^(0+256),w
  8562  1F69  0025               	movlb	5	; select bank5
  8563  1F6A  0223               	subwf	(_outPipes^(0+640)+3),w	;volatile
  8564  1F6B                     u4315:	
  8565  1F6B  1803               	skipnc
  8566  1F6C  2F70               	goto	l435
  8567                           
  8568                           ;usb_device.c: 1866: {
  8569                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  8570  1F6D  0823               	movf	(_outPipes^(0+640)+3),w	;volatile
  8571  1F6E  0022               	movlb	2	; select bank2
  8572  1F6F  00E5               	movwf	USBCtrlTrfRxService@byteToRead^(0+256)
  8573  1F70                     l435:	
  8574                           
  8575                           ;usb_device.c: 1868: }
  8576                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  8577  1F70  0022               	movlb	2	; select bank2
  8578  1F71  0865               	movf	USBCtrlTrfRxService@byteToRead^(0+256),w
  8579  1F72  0025               	movlb	5	; select bank5
  8580  1F73  02A3               	subwf	(_outPipes^(0+640)+3),f	;volatile
  8581  1F74  1C03               	skipc
  8582  1F75  03A4               	decf	((_outPipes+1)^(0+640)+3),f	;volatile
  8583                           
  8584                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  8585  1F76  0022               	movlb	2	; select bank2
  8586  1F77  01E4               	clrf	USBCtrlTrfRxService@i^(0+256)
  8587  1F78                     l5339:	
  8588  1F78  0865               	movf	USBCtrlTrfRxService@byteToRead^(0+256),w
  8589  1F79  0264               	subwf	USBCtrlTrfRxService@i^(0+256),w
  8590  1F7A  1803               	btfsc	3,0
  8591  1F7B  2F8D               	goto	l5341
  8592                           
  8593                           ;usb_device.c: 1875: {
  8594                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8595  1F7C  0025               	movlb	5	; select bank5
  8596  1F7D  0820               	movf	_outPipes^(0+640),w	;volatile
  8597  1F7E  0086               	movwf	6
  8598  1F7F  3002               	movlw	2	; select bank4/5
  8599  1F80  0087               	movwf	7
  8600  1F81  0022               	movlb	2	; select bank2
  8601  1F82  0864               	movf	USBCtrlTrfRxService@i^(0+256),w
  8602  1F83  3E60               	addlw	96
  8603  1F84  0084               	movwf	4
  8604  1F85  0185               	clrf	5
  8605  1F86  0800               	movf	0,w
  8606  1F87  0081               	movwf	1
  8607  1F88  0025               	movlb	5	; select bank5
  8608  1F89  0AA0               	incf	_outPipes^(0+640),f	;volatile
  8609  1F8A  0022               	movlb	2	; select bank2
  8610  1F8B  0AE4               	incf	USBCtrlTrfRxService@i^(0+256),f
  8611  1F8C  2F78               	goto	l5339
  8612  1F8D                     l5341:	
  8613                           
  8614                           ;usb_device.c: 1877: }
  8615                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  8616  1F8D  0025               	movlb	5	; select bank5
  8617  1F8E  0823               	movf	(_outPipes^(0+640)+3),w	;volatile
  8618  1F8F  0424               	iorwf	((_outPipes+1)^(0+640)+3),w	;volatile
  8619  1F90  1903               	btfsc	3,2
  8620  1F91  2FCD               	goto	l5353
  8621                           
  8622                           ;usb_device.c: 1882: {
  8623                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
  8624  1F92  0023               	movlb	3	; select bank3
  8625  1F93  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8626  1F94  3E01               	addlw	1
  8627  1F95  0022               	movlb	2	; select bank2
  8628  1F96  00E2               	movwf	??_USBCtrlTrfRxService^(0+256)
  8629  1F97  3000               	movlw	0
  8630  1F98  0023               	movlb	3	; select bank3
  8631  1F99  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8632  1F9A  0022               	movlb	2	; select bank2
  8633  1F9B  00E3               	movwf	(??_USBCtrlTrfRxService+1)^(0+256)
  8634  1F9C  0862               	movf	??_USBCtrlTrfRxService^(0+256),w
  8635  1F9D  0086               	movwf	6
  8636  1F9E  0863               	movf	(??_USBCtrlTrfRxService+1)^(0+256),w
  8637  1F9F  0087               	movwf	7
  8638  1FA0  3010               	movlw	16
  8639  1FA1  0081               	movwf	1
  8640                           
  8641                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8642  1FA2  3060               	movlw	96
  8643  1FA3  00E2               	movwf	??_USBCtrlTrfRxService^(0+256)
  8644  1FA4  01E3               	clrf	(??_USBCtrlTrfRxService^(0+256)+1)
  8645  1FA5  0023               	movlb	3	; select bank3
  8646  1FA6  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8647  1FA7  0086               	movwf	6
  8648  1FA8  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8649  1FA9  0087               	movwf	7
  8650  1FAA  3142               	addfsr 1,2
  8651  1FAB  0022               	movlb	2	; select bank2
  8652  1FAC  0862               	movf	??_USBCtrlTrfRxService^(0+256),w
  8653  1FAD  3FC0               	movwi [0]fsr1
  8654  1FAE  0863               	movf	(??_USBCtrlTrfRxService^(0+256)+1),w
  8655  1FAF  3FC1               	movwi [1]fsr1
  8656                           
  8657                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8658  1FB0  0023               	movlb	3	; select bank3
  8659  1FB1  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8660  1FB2  0086               	movwf	6
  8661  1FB3  0187               	clrf	7
  8662                           
  8663                           ;usb_device.c: 1886: {
  8664                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8665  1FB4  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8666  1FB5  1B01               	btfsc	1,6
  8667  1FB6  2FC2               	goto	L8
  8668  1FB7  0086               	movwf	6
  8669  1FB8  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8670  1FB9  0087               	movwf	7
  8671  1FBA  3048               	movlw	72
  8672  1FBB  0081               	movwf	1
  8673                           
  8674                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8675  1FBC  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8676  1FBD  0086               	movwf	6
  8677  1FBE  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8678  1FBF  0087               	movwf	7
  8679  1FC0  1781               	bsf	1,7
  8680                           
  8681                           ;usb_device.c: 1889: }
  8682  1FC1  0008               	return
  8683  1FC2                     L8:	
  8684                           ;usb_device.c: 1890: else
  8685                           ;usb_device.c: 1891: {
  8686                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8687                           
  8688  1FC2  0086               	movwf	6
  8689  1FC3  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8690  1FC4  0087               	movwf	7
  8691  1FC5  3008               	movlw	8
  8692  1FC6  0081               	movwf	1
  8693                           
  8694                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8695  1FC7  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8696  1FC8  0086               	movwf	6
  8697  1FC9  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8698  1FCA  0087               	movwf	7
  8699  1FCB  1781               	bsf	1,7
  8700  1FCC  0008               	return
  8701  1FCD                     l5353:	
  8702                           
  8703                           ;usb_device.c: 1896: else
  8704                           ;usb_device.c: 1897: {
  8705                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
  8706  1FCD  0023               	movlb	3	; select bank3
  8707  1FCE  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8708  1FCF  3E01               	addlw	1
  8709  1FD0  0022               	movlb	2	; select bank2
  8710  1FD1  00E2               	movwf	??_USBCtrlTrfRxService^(0+256)
  8711  1FD2  3000               	movlw	0
  8712  1FD3  0023               	movlb	3	; select bank3
  8713  1FD4  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8714  1FD5  0022               	movlb	2	; select bank2
  8715  1FD6  00E3               	movwf	(??_USBCtrlTrfRxService+1)^(0+256)
  8716  1FD7  0862               	movf	??_USBCtrlTrfRxService^(0+256),w
  8717  1FD8  0086               	movwf	6
  8718  1FD9  0863               	movf	(??_USBCtrlTrfRxService+1)^(0+256),w
  8719  1FDA  0087               	movwf	7
  8720  1FDB  3010               	movlw	16
  8721  1FDC  0081               	movwf	1
  8722                           
  8723                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8724  1FDD  3050               	movlw	80
  8725  1FDE  00E2               	movwf	??_USBCtrlTrfRxService^(0+256)
  8726  1FDF  01E3               	clrf	(??_USBCtrlTrfRxService^(0+256)+1)
  8727  1FE0  0023               	movlb	3	; select bank3
  8728  1FE1  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8729  1FE2  0086               	movwf	6
  8730  1FE3  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8731  1FE4  0087               	movwf	7
  8732  1FE5  3142               	addfsr 1,2
  8733  1FE6  0022               	movlb	2	; select bank2
  8734  1FE7  0862               	movf	??_USBCtrlTrfRxService^(0+256),w
  8735  1FE8  3FC0               	movwi [0]fsr1
  8736  1FE9  0863               	movf	(??_USBCtrlTrfRxService^(0+256)+1),w
  8737  1FEA  3FC1               	movwi [1]fsr1
  8738                           
  8739                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8740  1FEB  0023               	movlb	3	; select bank3
  8741  1FEC  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8742  1FED  0086               	movwf	6
  8743  1FEE  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8744  1FEF  0087               	movwf	7
  8745  1FF0  3004               	movlw	4
  8746  1FF1  0081               	movwf	1
  8747                           
  8748                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8749  1FF2  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  8750  1FF3  0086               	movwf	6
  8751  1FF4  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  8752  1FF5  0087               	movwf	7
  8753  1FF6  1781               	bsf	1,7
  8754                           
  8755                           ;usb_device.c: 1915: {
  8756                           ;usb_device.c: 1921: outPipes[0].pFunc();
  8757  1FF7  0025               	movlb	5	; select bank5
  8758  1FF8  0825               	movf	(low ((_outPipes| (0+512)+5)))^(0+128),w	;volatile
  8759  1FF9  0826               	movf	((low ((_outPipes| (0+512)+5))+1))^(0+128),w	;volatile
  8760                           
  8761                           ;usb_device.c: 1926: }
  8762                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8763  1FFA  13A2               	bcf	(_outPipes^(0+640)+2),7	;volatile
  8764                           
  8765                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8766  1FFB  0856               	movf	_USBDeferStatusStagePacket^(0+640),w	;volatile
  8767  1FFC  1D03               	btfss	3,2
  8768  1FFD  0008               	return
  8769                           
  8770                           ;usb_device.c: 1942: {
  8771                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8772  1FFE  318B  2B15         	ljmp	l4765
  8773  2000                     __end_of_USBCtrlTrfRxService:	
  8774                           
  8775                           	psect	text32
  8776  19C0                     __ptext32:	
  8777 ;; *************** function _SYSTEM_Initialize *****************
  8778 ;; Defined at:
  8779 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8788 ;; Tracked objects:
  8789 ;;		On entry : B1F/4
  8790 ;;		On exit  : 1F/4
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;Total ram usage:        0 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:   11
  8800 ;; This function calls:
  8801 ;;		_OSCILLATOR_Initialize
  8802 ;;		_PIN_MANAGER_Initialize
  8803 ;;		_USBDeviceAttach
  8804 ;;		_USBDeviceInit
  8805 ;;		_WDT_Initialize
  8806 ;; This function is called by:
  8807 ;;		_main
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           
  8812                           ;psect for function _SYSTEM_Initialize
  8813  19C0                     _SYSTEM_Initialize:	
  8814                           
  8815                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  8816                           
  8817                           ;incstack = 0
  8818                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8819  19C0  21D3  3199         	fcall	_PIN_MANAGER_Initialize
  8820                           
  8821                           ;mcc.c: 76: OSCILLATOR_Initialize();
  8822  19C2  21C9  3199         	fcall	_OSCILLATOR_Initialize
  8823                           
  8824                           ;mcc.c: 77: WDT_Initialize();
  8825  19C4  21E8               	fcall	_WDT_Initialize
  8826                           
  8827                           ;mcc.c: 78: USBDeviceInit();
  8828  19C5  318A  2294  3199   	fcall	_USBDeviceInit
  8829                           
  8830                           ;mcc.c: 79: USBDeviceAttach();
  8831  19C8  29EB               	ljmp	l7895
  8832  19C9                     __end_of_SYSTEM_Initialize:	
  8833  19C9                     __ptext37:	
  8834 ;; *************** function _OSCILLATOR_Initialize *****************
  8835 ;; Defined at:
  8836 ;;		line 82 in file "mcc_generated_files/mcc.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;		None
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;		None
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  1    wreg      void 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2
  8845 ;; Tracked objects:
  8846 ;;		On entry : B1F/2
  8847 ;;		On exit  : B1F/1
  8848 ;;		Unchanged: B00/0
  8849 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;Total ram usage:        0 bytes
  8855 ;; Hardware stack levels used:    1
  8856 ;; Hardware stack levels required when called:   10
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		_SYSTEM_Initialize
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           
  8865                           ;psect for function _OSCILLATOR_Initialize
  8866  19C9                     _OSCILLATOR_Initialize:	
  8867                           
  8868                           ;mcc.c: 85: OSCCON = 0x3C;
  8869                           
  8870                           ;incstack = 0
  8871                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8872  19C9  303C               	movlw	60
  8873  19CA  0021               	movlb	1	; select bank1
  8874  19CB  0099               	movwf	25	;volatile
  8875                           
  8876                           ;mcc.c: 87: OSCTUNE = 0x00;
  8877  19CC  0198               	clrf	24	;volatile
  8878                           
  8879                           ;mcc.c: 89: ACTCON = 0x00;
  8880  19CD  0027               	movlb	7	; select bank7
  8881  19CE  019B               	clrf	27	;volatile
  8882  19CF                     l145:	
  8883                           ;mcc.c: 92: {
  8884                           
  8885  19CF  0021               	movlb	1	; select bank1
  8886  19D0  1B1A               	btfsc	26,6	;volatile
  8887  19D1  0008               	return
  8888  19D2  29CF               	goto	l145
  8889  19D3                     __end_of_OSCILLATOR_Initialize:	
  8890  19D3                     __ptext36:	
  8891 ;; *************** function _PIN_MANAGER_Initialize *****************
  8892 ;; Defined at:
  8893 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;		None
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, status,2
  8902 ;; Tracked objects:
  8903 ;;		On entry : B1F/4
  8904 ;;		On exit  : B1F/2
  8905 ;;		Unchanged: B00/0
  8906 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;Total ram usage:        0 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:   10
  8914 ;; This function calls:
  8915 ;;		Nothing
  8916 ;; This function is called by:
  8917 ;;		_SYSTEM_Initialize
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           
  8922                           ;psect for function _PIN_MANAGER_Initialize
  8923  19D3                     _PIN_MANAGER_Initialize:	
  8924                           
  8925                           ;pin_manager.c: 57: LATA = 0x00;
  8926                           
  8927                           ;incstack = 0
  8928                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8929  19D3  0022               	movlb	2	; select bank2
  8930  19D4  018C               	clrf	12	;volatile
  8931                           
  8932                           ;pin_manager.c: 58: LATC = 0x00;
  8933  19D5  018E               	clrf	14	;volatile
  8934                           
  8935                           ;pin_manager.c: 63: TRISA = 0x30;
  8936  19D6  3030               	movlw	48
  8937  19D7  0021               	movlb	1	; select bank1
  8938  19D8  008C               	movwf	12	;volatile
  8939                           
  8940                           ;pin_manager.c: 64: TRISC = 0x07;
  8941  19D9  3007               	movlw	7
  8942  19DA  008E               	movwf	14	;volatile
  8943                           
  8944                           ;pin_manager.c: 69: ANSELC = 0x08;
  8945  19DB  3008               	movlw	8
  8946  19DC  0023               	movlb	3	; select bank3
  8947  19DD  008E               	movwf	14	;volatile
  8948                           
  8949                           ;pin_manager.c: 70: ANSELA = 0x10;
  8950  19DE  3010               	movlw	16
  8951  19DF  008C               	movwf	12	;volatile
  8952                           
  8953                           ;pin_manager.c: 75: WPUA = 0x38;
  8954  19E0  3038               	movlw	56
  8955  19E1  0024               	movlb	4	; select bank4
  8956  19E2  008C               	movwf	12	;volatile
  8957                           
  8958                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  8959  19E3  0021               	movlb	1	; select bank1
  8960  19E4  1395               	bcf	21,7	;volatile
  8961                           
  8962                           ;pin_manager.c: 82: APFCON = 0x00;
  8963  19E5  0022               	movlb	2	; select bank2
  8964  19E6  019D               	clrf	29	;volatile
  8965  19E7  0008               	return
  8966  19E8                     __end_of_PIN_MANAGER_Initialize:	
  8967  19E8                     __ptext33:	
  8968 ;; *************** function _WDT_Initialize *****************
  8969 ;; Defined at:
  8970 ;;		line 96 in file "mcc_generated_files/mcc.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg
  8979 ;; Tracked objects:
  8980 ;;		On entry : B1F/1
  8981 ;;		On exit  : B1F/1
  8982 ;;		Unchanged: B00/0
  8983 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;Total ram usage:        0 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:   10
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		_SYSTEM_Initialize
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           
  8999                           ;psect for function _WDT_Initialize
  9000  19E8                     _WDT_Initialize:	
  9001                           
  9002                           ;mcc.c: 99: WDTCON = 0x16;
  9003                           
  9004                           ;incstack = 0
  9005                           ; Regs used in _WDT_Initialize: [wreg]
  9006  19E8  3016               	movlw	22
  9007  19E9  0097               	movwf	23	;volatile
  9008  19EA  0008               	return
  9009  19EB                     __end_of_WDT_Initialize:	
  9010  19EB                     __ptext35:	
  9011 ;; *************** function _USBDeviceAttach *****************
  9012 ;; Defined at:
  9013 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;		None
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;		None
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      void 
  9020 ;; Registers used:
  9021 ;;		wreg, status,2, status,0
  9022 ;; Tracked objects:
  9023 ;;		On entry : 1F/4
  9024 ;;		On exit  : 1F/4
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9031 ;;Total ram usage:        0 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:   10
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_SYSTEM_Initialize
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           
  9042                           ;psect for function _USBDeviceAttach
  9043  19EB                     _USBDeviceAttach:	
  9044  19EB                     l7895:	
  9045                           ;incstack = 0
  9046                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  9047                           
  9048                           
  9049                           ;usb_device.c: 1356: {
  9050                           ;usb_device.c: 1357: if(1 == 1)
  9051  19EB  086D               	movf	_USBDeviceState^(0+512),w	;volatile
  9052  19EC  1D03               	btfss	3,2
  9053  19ED  0008               	return
  9054                           
  9055                           ;usb_device.c: 1358: {
  9056                           ;usb_device.c: 1360: UCON = 0;
  9057  19EE  003D               	movlb	29	; select bank29
  9058  19EF  018E               	clrf	14	;volatile
  9059                           
  9060                           ;usb_device.c: 1363: UIE = 0;
  9061  19F0  0192               	clrf	18	;volatile
  9062                           
  9063                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  9064  19F1  3016               	movlw	22
  9065  19F2  0091               	movwf	17	;volatile
  9066  19F3  309F               	movlw	159
  9067  19F4  0097               	movwf	23	;volatile
  9068  19F5  307B               	movlw	123
  9069  19F6  0092               	movwf	18	;volatile
  9070                           
  9071                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  9072  19F7  0021               	movlb	1	; select bank1
  9073  19F8  1512               	bsf	18,2	;volatile
  9074  19F9  170B               	bsf	11,6	;volatile
  9075  19FA  178B               	bsf	11,7	;volatile
  9076  19FB                     l382:	
  9077                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9078                           
  9079  19FB  003D               	movlb	29	; select bank29
  9080  19FC  198E               	btfsc	14,3	;volatile
  9081  19FD  2A00               	goto	l7911
  9082  19FE  158E               	bsf	14,3	;volatile
  9083  19FF  29FB               	goto	l382
  9084  1A00                     l7911:	
  9085                           
  9086                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  9087  1A00  3001               	movlw	1
  9088  1A01  0024               	movlb	4	; select bank4
  9089  1A02  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
  9090  1A03  0008               	return
  9091  1A04                     __end_of_USBDeviceAttach:	
  9092                           
  9093                           	psect	intentry
  9094  0004                     __pintentry:	
  9095 ;; *************** function _INTERRUPT_InterruptManager *****************
  9096 ;; Defined at:
  9097 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;Total ram usage:        0 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    9
  9118 ;; This function calls:
  9119 ;;		i1_USBDeviceTasks
  9120 ;; This function is called by:
  9121 ;;		Interrupt level 1
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125  0004                     _INTERRUPT_InterruptManager:	
  9126                           
  9127                           ;incstack = 0
  9128 ;; hardware stack exceeded
  9129  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9130                           
  9131                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9132  0005  3180               	pagesel	$
  9133                           
  9134                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE2bits.USBIE == 1 && PIR2bits.USB
      +                          IF == 1)
  9135  0006  1F0B               	btfss	11,6	;volatile
  9136  0007  2810               	goto	i1l95
  9137  0008  0021               	movlb	1	; select bank1
  9138  0009  1D12               	btfss	18,2	;volatile
  9139  000A  2810               	goto	i1l95
  9140  000B  0020               	movlb	0	; select bank0
  9141  000C  1D12               	btfss	18,2	;volatile
  9142  000D  2810               	goto	i1l95
  9143                           
  9144                           ;interrupt_manager.c: 55: {
  9145                           ;interrupt_manager.c: 56: USBDeviceTasks();
  9146  000E  318D  25BA         	fcall	i1_USBDeviceTasks
  9147  0010                     i1l95:	
  9148                           ;interrupt_manager.c: 57: }
  9149                           
  9150  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9151  0011  0009               	retfie
  9152  0012                     __end_of_INTERRUPT_InterruptManager:	
  9153                           
  9154                           	psect	text46
  9155  0C1A                     __ptext46:	
  9156 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
  9157 ;; Defined at:
  9158 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      void 
  9165 ;; Registers used:
  9166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/3
  9169 ;;		On exit  : 18/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;Total ram usage:        0 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    6
  9179 ;; This function calls:
  9180 ;;		i1_USBCheckStdRequest
  9181 ;;		i1_USBCtrlEPServiceComplete
  9182 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9183 ;; This function is called by:
  9184 ;;		i1_USBCtrlEPService
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           
  9189                           ;psect for function i1_USBCtrlTrfSetupHandler
  9190  0C1A                     i1_USBCtrlTrfSetupHandler:	
  9191                           
  9192                           ;usb_device.c: 2470: shortPacketStatus = 0;
  9193                           
  9194                           ;incstack = 0
  9195 ;; hardware stack exceeded
  9196                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9197  0C1A  0025               	movlb	5	; select bank5
  9198  0C1B  01DD               	clrf	_shortPacketStatus^(0+640)	;volatile
  9199                           
  9200                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  9201  0C1C  01D6               	clrf	_USBDeferStatusStagePacket^(0+640)	;volatile
  9202                           
  9203                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  9204  0C1D  01D3               	clrf	_USBDeferINDataStagePackets^(0+640)	;volatile
  9205                           
  9206                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  9207  0C1E  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+640)	;volatile
  9208                           
  9209                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  9210  0C1F  01D8               	clrf	_BothEP0OutUOWNsSet^(0+640)	;volatile
  9211                           
  9212                           ;usb_device.c: 2475: controlTransferState = 0;
  9213  0C20  0024               	movlb	4	; select bank4
  9214  0C21  01EC               	clrf	_controlTransferState^(0+512)	;volatile
  9215                           
  9216                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9217  0C22  0025               	movlb	5	; select bank5
  9218  0C23  0827               	movf	_pBDTEntryIn^(0+640),w
  9219  0C24  0086               	movwf	6
  9220  0C25  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  9221  0C26  0087               	movwf	7
  9222  0C27  3004               	movlw	4
  9223  0C28  1381               	bcf	1,7
  9224                           
  9225                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9226  0C29  0627               	xorwf	_pBDTEntryIn^(0+640),w
  9227  0C2A  00A7               	movwf	_pBDTEntryIn^(0+640)
  9228                           
  9229                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9230  0C2B  0086               	movwf	6
  9231  0C2C  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
  9232  0C2D  0087               	movwf	7
  9233  0C2E  3004               	movlw	4
  9234  0C2F  1381               	bcf	1,7
  9235                           
  9236                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9237  0C30  0627               	xorwf	_pBDTEntryIn^(0+640),w
  9238  0C31  00A7               	movwf	_pBDTEntryIn^(0+640)
  9239                           
  9240                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9241  0C32  0023               	movlb	3	; select bank3
  9242  0C33  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
  9243  0C34  0086               	movwf	6
  9244  0C35  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  9245  0C36  0087               	movwf	7
  9246  0C37  1381               	bcf	1,7
  9247                           
  9248                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  9249  0C38  0021               	movlb	1	; select bank1
  9250  0C39  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
  9251                           
  9252                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  9253  0C3A  01E3               	clrf	(_inPipes^(0+128)+3)	;volatile
  9254  0C3B  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  9255                           
  9256                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  9257  0C3C  0025               	movlb	5	; select bank5
  9258  0C3D  01A2               	clrf	(_outPipes^(0+640)+2)	;volatile
  9259                           
  9260                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  9261  0C3E  01A3               	clrf	(_outPipes^(0+640)+3)	;volatile
  9262  0C3F  01A4               	clrf	((_outPipes+1)^(0+640)+3)	;volatile
  9263                           
  9264                           ;usb_device.c: 2500: USBCheckStdRequest();
  9265  0C40  244F  318C         	fcall	i1_USBCheckStdRequest
  9266                           
  9267                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9268  0C42  3003               	movlw	3
  9269  0C43  0020               	movlb	0	; select bank0
  9270  0C44  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9271  0C45  3000               	movlw	0
  9272  0C46  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9273  0C47  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9274  0C48  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9275  0C49  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9276  0C4A  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9277  0C4B  2660               	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9278                           
  9279                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  9280  0C4C  3194  24AD         	fcall	i1_USBCtrlEPServiceComplete
  9281  0C4E  0008               	return
  9282  0C4F                     __end_ofi1_USBCtrlTrfSetupHandler:	
  9283  0C4F                     __ptext49:	
  9284 ;; *************** function i1_USBCheckStdRequest *****************
  9285 ;; Defined at:
  9286 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;		None
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;		None
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  1    wreg      void 
  9293 ;; Registers used:
  9294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9295 ;; Tracked objects:
  9296 ;;		On entry : 1F/5
  9297 ;;		On exit  : 1A/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;Total ram usage:        0 bytes
  9305 ;; Hardware stack levels used:    1
  9306 ;; Hardware stack levels required when called:    5
  9307 ;; This function calls:
  9308 ;;		i1_USBStdFeatureReqHandler
  9309 ;;		i1_USBStdGetDscHandler
  9310 ;;		i1_USBStdGetStatusHandler
  9311 ;;		i1_USBStdSetCfgHandler
  9312 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9313 ;; This function is called by:
  9314 ;;		i1_USBCtrlTrfSetupHandler
  9315 ;; This function uses a non-reentrant model
  9316 ;;
  9317                           
  9318                           
  9319                           ;psect for function i1_USBCheckStdRequest
  9320  0C4F                     i1_USBCheckStdRequest:	
  9321                           
  9322                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  9323                           
  9324                           ;incstack = 0
  9325 ;; hardware stack exceeded
  9326                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9327  0C4F  0020               	movlb	0	; select bank0
  9328  0C50  0E50               	swapf	80,w	;volatile
  9329  0C51  0C89               	rrf	9,f
  9330  0C52  3903               	andlw	3
  9331  0C53  1D03               	btfss	3,2
  9332  0C54  0008               	return
  9333  0C55  2C91               	goto	i1l5545
  9334  0C56                     i1l534:	
  9335                           ;usb_device.c: 2691: {
  9336                           ;usb_device.c: 2692: case 5:
  9337                           
  9338                           
  9339                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  9340  0C56  0021               	movlb	1	; select bank1
  9341  0C57  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  9342                           
  9343                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  9344  0C58  3008               	movlw	8
  9345  0C59  0024               	movlb	4	; select bank4
  9346  0C5A  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
  9347                           
  9348                           ;usb_device.c: 2696: break;
  9349  0C5B  0008               	return
  9350  0C5C                     i1l5515:	
  9351                           
  9352                           ;usb_device.c: 2698: USBStdGetDscHandler();
  9353  0C5C  319C  2401         	fcall	i1_USBStdGetDscHandler
  9354                           
  9355                           ;usb_device.c: 2699: break;
  9356  0C5E  0008               	return
  9357  0C5F                     i1l5517:	
  9358                           
  9359                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  9360  0C5F  319D  2562         	fcall	i1_USBStdSetCfgHandler
  9361                           
  9362                           ;usb_device.c: 2702: break;
  9363  0C61  0008               	return
  9364  0C62                     i1l5519:	
  9365                           
  9366                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9367  0C62  30E8               	movlw	low _USBActiveConfiguration
  9368  0C63  0021               	movlb	1	; select bank1
  9369  0C64  00E0               	movwf	_inPipes^(0+128)	;volatile
  9370  0C65  3002               	movlw	high _USBActiveConfiguration
  9371  0C66  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  9372                           
  9373                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9374  0C67  1462               	bsf	(_inPipes^(0+128)+2),0	;volatile
  9375                           
  9376                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  9377  0C68  3001               	movlw	1
  9378  0C69  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  9379                           
  9380                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  9381  0C6A  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  9382                           
  9383                           ;usb_device.c: 2708: break;
  9384  0C6B  0008               	return
  9385  0C6C                     i1l5527:	
  9386                           
  9387                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  9388  0C6C  319A  229B         	fcall	i1_USBStdGetStatusHandler
  9389                           
  9390                           ;usb_device.c: 2711: break;
  9391  0C6E  0008               	return
  9392  0C6F                     i1l5529:	
  9393                           
  9394                           ;usb_device.c: 2713: case 3:
  9395                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  9396  0C6F  249C               	fcall	i1_USBStdFeatureReqHandler
  9397                           
  9398                           ;usb_device.c: 2715: break;
  9399  0C70  0008               	return
  9400  0C71                     i1l5531:	
  9401                           
  9402                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9403  0C71  0854               	movf	84,w	;volatile
  9404  0C72  3EE6               	addlw	(low (_USBAlternateInterface| (0+512)))& (0+255)
  9405  0C73  0021               	movlb	1	; select bank1
  9406  0C74  00E0               	movwf	_inPipes^(0+128)	;volatile
  9407  0C75  3002               	movlw	2
  9408  0C76  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
  9409                           
  9410                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9411  0C77  1462               	bsf	(_inPipes^(0+128)+2),0	;volatile
  9412                           
  9413                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  9414  0C78  3001               	movlw	1
  9415  0C79  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
  9416                           
  9417                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  9418  0C7A  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  9419                           
  9420                           ;usb_device.c: 2721: break;
  9421  0C7B  0008               	return
  9422  0C7C                     i1l543:	
  9423                           ;usb_device.c: 2722: case 11:
  9424                           
  9425                           
  9426                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  9427  0C7C  0021               	movlb	1	; select bank1
  9428  0C7D  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  9429                           
  9430                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9431  0C7E  0020               	movlb	0	; select bank0
  9432  0C7F  0854               	movf	84,w	;volatile
  9433  0C80  3EE6               	addlw	(low (_USBAlternateInterface| (0+512)))& (0+255)
  9434  0C81  0086               	movwf	6
  9435  0C82  3002               	movlw	2	; select bank5/6
  9436  0C83  0087               	movwf	7
  9437  0C84  0852               	movf	82,w	;volatile
  9438  0C85  0081               	movwf	1
  9439                           
  9440                           ;usb_device.c: 2725: break;
  9441  0C86  0008               	return
  9442  0C87                     i1l5541:	
  9443                           
  9444                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9445  0C87  3002               	movlw	2
  9446  0C88  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9447  0C89  3000               	movlw	0
  9448  0C8A  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9449  0C8B  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9450  0C8C  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9451  0C8D  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9452  0C8E  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9453  0C8F  2660               	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9454                           
  9455                           ;usb_device.c: 2728: break;
  9456  0C90  0008               	return
  9457  0C91                     i1l5545:	
  9458  0C91  0851               	movf	81,w	;volatile
  9459                           
  9460                           ; Switch size 1, requested type "speed"
  9461                           ; Number of cases is 11, Range of values is 0 to 12
  9462                           ; switch strategies available:
  9463                           ; Name         Instructions Cycles
  9464                           ; direct_byte           32     6 (fixed)
  9465                           ; simple_byte           34    18 (average)
  9466                           ; jumptable            260     6 (fixed)
  9467                           ;	Chosen strategy is direct_byte
  9468  0C92  0084               	movwf	4
  9469  0C93  300D               	movlw	13
  9470  0C94  0204               	subwf	4,w
  9471  0C95  1803               	skipnc
  9472  0C96  0008               	return
  9473  0C97  3188               	movlp	high i1S8547
  9474  0C98  3504               	lslf	4,w
  9475  0C99  3E1A               	addlw	low i1S8547
  9476  0C9A  0082               	movwf	2
  9477  0C9B                     i1l532:	
  9478  0C9B  0008               	return
  9479  0C9C                     __end_ofi1_USBCheckStdRequest:	
  9480  0C9C                     __ptext54:	
  9481 ;; *************** function i1_USBStdFeatureReqHandler *****************
  9482 ;; Defined at:
  9483 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;		None
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  USBStdFeatur    2    3[BANK1 ] PTR struct __BDT
  9488 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  9489 ;;  USBStdFeatur    2    0[BANK1 ] PTR unsigned char 
  9490 ;;		 -> UEP0(1), 
  9491 ;;  USBStdFeatur    1    2[BANK1 ] struct .
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  1    wreg      void 
  9494 ;; Registers used:
  9495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9496 ;; Tracked objects:
  9497 ;;		On entry : 1A/0
  9498 ;;		On exit  : 1A/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Totals:         2       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;Total ram usage:        7 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; Hardware stack levels required when called:    4
  9508 ;; This function calls:
  9509 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9510 ;; This function is called by:
  9511 ;;		i1_USBCheckStdRequest
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           
  9516                           ;psect for function i1_USBStdFeatureReqHandler
  9517  0C9C                     i1_USBStdFeatureReqHandler:	
  9518                           
  9519                           ;usb_device.c: 2756: BDT_ENTRY *p;
  9520                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  9521                           ;usb_device.c: 2761: unsigned char* pUEP;
  9522                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  9523                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  9524                           
  9525                           ;incstack = 0
  9526 ;; hardware stack exceeded
  9527                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9528  0C9C  0020               	movlb	0	; select bank0
  9529  0C9D  0B52               	decfsz	82,w	;volatile
  9530  0C9E  2CB0               	goto	i1l5199
  9531  0C9F  0850               	movf	80,w	;volatile
  9532  0CA0  391F               	andlw	31
  9533  0CA1  1D03               	skipz
  9534  0CA2  2CB0               	goto	i1l5199
  9535                           
  9536                           ;usb_device.c: 2801: {
  9537                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  9538  0CA3  0021               	movlb	1	; select bank1
  9539  0CA4  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  9540                           
  9541                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  9542  0CA5  3003               	movlw	3
  9543  0CA6  0020               	movlb	0	; select bank0
  9544  0CA7  0651               	xorwf	81,w	;volatile
  9545  0CA8  1D03               	btfss	3,2
  9546  0CA9  2CAE               	goto	i1l5197
  9547                           
  9548                           ;usb_device.c: 2804: RemoteWakeup = 1;
  9549  0CAA  3001               	movlw	1
  9550  0CAB  0025               	movlb	5	; select bank5
  9551  0CAC  00DB               	movwf	_RemoteWakeup^(0+640)	;volatile
  9552  0CAD  2CB0               	goto	i1l5199
  9553  0CAE                     i1l5197:	
  9554                           
  9555                           ;usb_device.c: 2805: else
  9556                           ;usb_device.c: 2806: RemoteWakeup = 0;
  9557  0CAE  0025               	movlb	5	; select bank5
  9558  0CAF  01DB               	clrf	_RemoteWakeup^(0+640)	;volatile
  9559  0CB0                     i1l5199:	
  9560                           
  9561                           ;usb_device.c: 2807: }
  9562                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  9563                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  9564                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  9565                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  9566  0CB0  0020               	movlb	0	; select bank0
  9567  0CB1  0852               	movf	82,w	;volatile
  9568  0CB2  1D03               	btfss	3,2
  9569  0CB3  0008               	return
  9570  0CB4  0850               	movf	80,w	;volatile
  9571  0CB5  391F               	andlw	31
  9572  0CB6  3A02               	xorlw	2
  9573  0CB7  1D03               	skipz
  9574  0CB8  0008               	return
  9575  0CB9  0854               	movf	84,w	;volatile
  9576  0CBA  390F               	andlw	15
  9577  0CBB  1903               	skipnz
  9578  0CBC  0008               	return
  9579  0CBD  0854               	movf	84,w	;volatile
  9580  0CBE  390F               	andlw	15
  9581  0CBF  00FA               	movwf	??i1_USBStdFeatureReqHandler
  9582  0CC0  3003               	movlw	3
  9583  0CC1  027A               	subwf	??i1_USBStdFeatureReqHandler,w
  9584  0CC2  1803               	skipnc
  9585  0CC3  0008               	return
  9586  0CC4  3020               	movlw	32
  9587  0CC5  0024               	movlb	4	; select bank4
  9588  0CC6  066D               	xorwf	_USBDeviceState^(0+512),w	;volatile
  9589  0CC7  1D03               	btfss	3,2
  9590  0CC8  0008               	return
  9591                           
  9592                           ;usb_device.c: 2814: {
  9593                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  9594  0CC9  0021               	movlb	1	; select bank1
  9595  0CCA  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
  9596                           
  9597                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  9598  0CCB  0020               	movlb	0	; select bank0
  9599  0CCC  1BD4               	btfsc	84,7	;volatile
  9600  0CCD  2CDF               	goto	i1l5213
  9601                           
  9602                           ;usb_device.c: 2821: {
  9603                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9604  0CCE  0854               	movf	84,w	;volatile
  9605  0CCF  390F               	andlw	15
  9606  0CD0  0709               	addwf	9,w
  9607  0CD1  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  9608  0CD2  0086               	movwf	6
  9609  0CD3  3002               	movlw	2	; select bank5/6
  9610  0CD4  0087               	movwf	7
  9611  0CD5  3F40               	moviw [0]fsr1
  9612  0CD6  0021               	movlb	1	; select bank1
  9613  0CD7  00EB               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
  9614  0CD8  3F41               	moviw [1]fsr1
  9615  0CD9  00EC               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
  9616                           
  9617                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  9618  0CDA  0020               	movlb	0	; select bank0
  9619  0CDB  0854               	movf	84,w	;volatile
  9620  0CDC  390F               	andlw	15
  9621  0CDD  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  9622  0CDE  2CEF               	goto	L13
  9623  0CDF                     i1l5213:	
  9624                           ;usb_device.c: 2824: }
  9625                           
  9626                           
  9627                           ;usb_device.c: 2825: else
  9628                           ;usb_device.c: 2826: {
  9629                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9630  0CDF  0854               	movf	84,w	;volatile
  9631  0CE0  390F               	andlw	15
  9632  0CE1  0709               	addwf	9,w
  9633  0CE2  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  9634  0CE3  0086               	movwf	6
  9635  0CE4  3002               	movlw	2	; select bank5/6
  9636  0CE5  0087               	movwf	7
  9637  0CE6  3F40               	moviw [0]fsr1
  9638  0CE7  0021               	movlb	1	; select bank1
  9639  0CE8  00EB               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
  9640  0CE9  3F41               	moviw [1]fsr1
  9641  0CEA  00EC               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
  9642                           
  9643                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  9644  0CEB  0020               	movlb	0	; select bank0
  9645  0CEC  0854               	movf	84,w	;volatile
  9646  0CED  390F               	andlw	15
  9647  0CEE  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  9648  0CEF                     L13:	
  9649  0CEF  0086               	movwf	6
  9650  0CF0  0801               	movf	1,w
  9651  0CF1  0021               	movlb	1	; select bank1
  9652  0CF2  00EA               	movwf	i1USBStdFeatureReqHandler@current_ep_data^(0+128)
  9653                           
  9654                           ;usb_device.c: 2829: }
  9655                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  9656  0CF3  186A               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),0
  9657  0CF4  2D00               	goto	i1l5219
  9658                           
  9659                           ;usb_device.c: 2836: {
  9660                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  9661  0CF5  30FB               	movlw	251
  9662  0CF6  00FA               	movwf	??i1_USBStdFeatureReqHandler
  9663  0CF7  30FF               	movlw	255
  9664  0CF8  00FB               	movwf	??i1_USBStdFeatureReqHandler+1
  9665  0CF9  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9666  0CFA  057A               	andwf	??i1_USBStdFeatureReqHandler,w
  9667  0CFB  00EB               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
  9668  0CFC  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9669  0CFD  057B               	andwf	??i1_USBStdFeatureReqHandler+1,w
  9670  0CFE  00EC               	movwf	(i1USBStdFeatureReqHandler@p+1)^(0+128)
  9671                           
  9672                           ;usb_device.c: 2838: }
  9673  0CFF  2D03               	goto	i1l5221
  9674  0D00                     i1l5219:	
  9675                           
  9676                           ;usb_device.c: 2839: else
  9677                           ;usb_device.c: 2840: {
  9678                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  9679  0D00  3004               	movlw	4
  9680  0D01  046B               	iorwf	i1USBStdFeatureReqHandler@p^(0+128),w
  9681  0D02  00EB               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
  9682  0D03                     i1l5221:	
  9683                           
  9684                           ;usb_device.c: 2842: }
  9685                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  9686  0D03  0020               	movlb	0	; select bank0
  9687  0D04  1BD4               	btfsc	84,7	;volatile
  9688  0D05  2D13               	goto	i1l5225
  9689                           
  9690                           ;usb_device.c: 2848: {
  9691                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9692  0D06  0854               	movf	84,w	;volatile
  9693  0D07  390F               	andlw	15
  9694  0D08  0709               	addwf	9,w
  9695  0D09  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  9696  0D0A  0086               	movwf	6
  9697  0D0B  3002               	movlw	2	; select bank5/6
  9698  0D0C  0087               	movwf	7
  9699  0D0D  0021               	movlb	1	; select bank1
  9700  0D0E  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9701  0D0F  3FC0               	movwi [0]fsr1
  9702  0D10  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9703  0D11  3FC1               	movwi [1]fsr1
  9704                           
  9705                           ;usb_device.c: 2850: }
  9706  0D12  2D1F               	goto	i1l5227
  9707  0D13                     i1l5225:	
  9708                           
  9709                           ;usb_device.c: 2851: else
  9710                           ;usb_device.c: 2852: {
  9711                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9712  0D13  0854               	movf	84,w	;volatile
  9713  0D14  390F               	andlw	15
  9714  0D15  0709               	addwf	9,w
  9715  0D16  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
  9716  0D17  0086               	movwf	6
  9717  0D18  3002               	movlw	2	; select bank5/6
  9718  0D19  0087               	movwf	7
  9719  0D1A  0021               	movlb	1	; select bank1
  9720  0D1B  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9721  0D1C  3FC0               	movwi [0]fsr1
  9722  0D1D  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9723  0D1E  3FC1               	movwi [1]fsr1
  9724  0D1F                     i1l5227:	
  9725                           
  9726                           ;usb_device.c: 2854: }
  9727                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  9728  0D1F  3003               	movlw	3
  9729  0D20  0020               	movlb	0	; select bank0
  9730  0D21  0651               	xorwf	81,w	;volatile
  9731  0D22  1D03               	btfss	3,2
  9732  0D23  2D45               	goto	i1l5241
  9733                           
  9734                           ;usb_device.c: 2858: {
  9735                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  9736  0D24  0021               	movlb	1	; select bank1
  9737  0D25  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9738  0D26  0086               	movwf	6
  9739  0D27  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9740  0D28  0087               	movwf	7
  9741  0D29  1F81               	btfss	1,7
  9742  0D2A  2D39               	goto	i1l5237
  9743                           
  9744                           ;usb_device.c: 2860: {
  9745                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  9746  0D2B  0020               	movlb	0	; select bank0
  9747  0D2C  1BD4               	btfsc	84,7	;volatile
  9748  0D2D  2D32               	goto	i1l5235
  9749                           
  9750                           ;usb_device.c: 2864: {
  9751                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9752  0D2E  0854               	movf	84,w	;volatile
  9753  0D2F  390F               	andlw	15
  9754  0D30  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  9755  0D31  2D35               	goto	L14
  9756  0D32                     i1l5235:	
  9757                           ;usb_device.c: 2866: }
  9758                           
  9759                           
  9760                           ;usb_device.c: 2867: else
  9761                           ;usb_device.c: 2868: {
  9762                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9763  0D32  0854               	movf	84,w	;volatile
  9764  0D33  390F               	andlw	15
  9765  0D34  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  9766  0D35                     L14:	
  9767  0D35  0086               	movwf	6
  9768  0D36  3002               	movlw	2	; select bank5/6
  9769  0D37  0087               	movwf	7
  9770  0D38  1481               	bsf	1,1
  9771  0D39                     i1l5237:	
  9772                           
  9773                           ;usb_device.c: 2870: }
  9774                           ;usb_device.c: 2871: }
  9775                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  9776  0D39  0021               	movlb	1	; select bank1
  9777  0D3A  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9778  0D3B  0086               	movwf	6
  9779  0D3C  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9780  0D3D  0087               	movwf	7
  9781  0D3E  1501               	bsf	1,2
  9782                           
  9783                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  9784  0D3F  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9785  0D40  0086               	movwf	6
  9786  0D41  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9787  0D42  0087               	movwf	7
  9788  0D43  1781               	bsf	1,7
  9789                           
  9790                           ;usb_device.c: 2876: }
  9791  0D44  0008               	return
  9792  0D45                     i1l5241:	
  9793                           
  9794                           ;usb_device.c: 2877: else
  9795                           ;usb_device.c: 2878: {
  9796                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  9797  0D45  3004               	movlw	4
  9798  0D46  0021               	movlb	1	; select bank1
  9799  0D47  066B               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
  9800  0D48  00EB               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
  9801                           
  9802                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  9803  0D49  0086               	movwf	6
  9804  0D4A  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9805  0D4B  0087               	movwf	7
  9806                           
  9807                           ;usb_device.c: 2885: {
  9808                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  9809  0D4C  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9810  0D4D  1F81               	btfss	1,7
  9811  0D4E  2D6A               	goto	L16
  9812  0D4F  0086               	movwf	6
  9813  0D50  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9814  0D51  0087               	movwf	7
  9815  0D52  1381               	bcf	1,7
  9816                           
  9817                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  9818  0D53  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9819  0D54  0086               	movwf	6
  9820  0D55  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9821  0D56  0087               	movwf	7
  9822  0D57  3005               	movlw	5
  9823  0D58  1701               	bsf	1,6
  9824                           
  9825                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9826  0D59  0020               	movlb	0	; select bank0
  9827  0D5A  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9828  0D5B  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9829  0D5C  0021               	movlb	1	; select bank1
  9830  0D5D  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9831  0D5E  0020               	movlb	0	; select bank0
  9832  0D5F  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9833  0D60  0021               	movlb	1	; select bank1
  9834  0D61  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9835  0D62  0020               	movlb	0	; select bank0
  9836  0D63  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9837  0D64  3002               	movlw	2
  9838  0D65  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9839  0D66  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9840  0D67  2660  318C         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9841                           
  9842                           ;usb_device.c: 2891: }
  9843  0D69  2D6E               	goto	i1l5251
  9844  0D6A                     L16:	
  9845                           ;usb_device.c: 2892: else
  9846                           ;usb_device.c: 2893: {
  9847                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  9848                           
  9849  0D6A  0086               	movwf	6
  9850  0D6B  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9851  0D6C  0087               	movwf	7
  9852  0D6D  1701               	bsf	1,6
  9853  0D6E                     i1l5251:	
  9854                           
  9855                           ;usb_device.c: 2896: }
  9856                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  9857  0D6E  3004               	movlw	4
  9858  0D6F  0021               	movlb	1	; select bank1
  9859  0D70  066B               	xorwf	i1USBStdFeatureReqHandler@p^(0+128),w
  9860  0D71  00EB               	movwf	i1USBStdFeatureReqHandler@p^(0+128)
  9861                           
  9862                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  9863  0D72  18EA               	btfsc	i1USBStdFeatureReqHandler@current_ep_data^(0+128),1
  9864  0D73  2D7A               	goto	i1l568
  9865  0D74  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9866  0D75  0086               	movwf	6
  9867  0D76  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9868  0D77  0087               	movwf	7
  9869  0D78  1F81               	btfss	1,7
  9870  0D79  2DA1               	goto	i1l5263
  9871  0D7A                     i1l568:	
  9872                           
  9873                           ;usb_device.c: 2907: {
  9874                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  9875  0D7A  0020               	movlb	0	; select bank0
  9876  0D7B  1BD4               	btfsc	84,7	;volatile
  9877  0D7C  2D81               	goto	i1l5259
  9878                           
  9879                           ;usb_device.c: 2909: {
  9880                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9881  0D7D  0854               	movf	84,w	;volatile
  9882  0D7E  390F               	andlw	15
  9883  0D7F  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  9884  0D80  2D84               	goto	L15
  9885  0D81                     i1l5259:	
  9886                           ;usb_device.c: 2911: }
  9887                           
  9888                           
  9889                           ;usb_device.c: 2912: else
  9890                           ;usb_device.c: 2913: {
  9891                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9892  0D81  0854               	movf	84,w	;volatile
  9893  0D82  390F               	andlw	15
  9894  0D83  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  9895  0D84                     L15:	
  9896  0D84  0086               	movwf	6
  9897  0D85  3002               	movlw	2	; select bank5/6
  9898  0D86  0087               	movwf	7
  9899  0D87  1081               	bcf	1,1
  9900                           
  9901                           ;usb_device.c: 2915: }
  9902                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9903  0D88  0021               	movlb	1	; select bank1
  9904  0D89  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9905  0D8A  0086               	movwf	6
  9906  0D8B  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9907  0D8C  0087               	movwf	7
  9908  0D8D  303B               	movlw	59
  9909  0D8E  0581               	andwf	1,f
  9910                           
  9911                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9912  0D8F  3005               	movlw	5
  9913  0D90  0020               	movlb	0	; select bank0
  9914  0D91  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9915  0D92  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9916  0D93  0021               	movlb	1	; select bank1
  9917  0D94  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9918  0D95  0020               	movlb	0	; select bank0
  9919  0D96  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9920  0D97  0021               	movlb	1	; select bank1
  9921  0D98  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9922  0D99  0020               	movlb	0	; select bank0
  9923  0D9A  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9924  0D9B  3002               	movlw	2
  9925  0D9C  00DC               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9926  0D9D  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9927  0D9E  2660  318C         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9928                           
  9929                           ;usb_device.c: 2921: }
  9930  0DA0  2DA7               	goto	i1l5265
  9931  0DA1                     i1l5263:	
  9932                           
  9933                           ;usb_device.c: 2922: else
  9934                           ;usb_device.c: 2923: {
  9935                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9936  0DA1  086B               	movf	i1USBStdFeatureReqHandler@p^(0+128),w
  9937  0DA2  0086               	movwf	6
  9938  0DA3  086C               	movf	(i1USBStdFeatureReqHandler@p+1)^(0+128),w
  9939  0DA4  0087               	movwf	7
  9940  0DA5  303B               	movlw	59
  9941  0DA6  0581               	andwf	1,f
  9942  0DA7                     i1l5265:	
  9943                           
  9944                           ;usb_device.c: 2926: }
  9945                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  9946  0DA7  0020               	movlb	0	; select bank0
  9947  0DA8  0854               	movf	84,w	;volatile
  9948  0DA9  390F               	andlw	15
  9949  0DAA  3E98               	addlw	152
  9950  0DAB  00FA               	movwf	??i1_USBStdFeatureReqHandler
  9951  0DAC  300E               	movlw	14
  9952  0DAD  01FB               	clrf	??i1_USBStdFeatureReqHandler+1
  9953  0DAE  3DFB               	addwfc	??i1_USBStdFeatureReqHandler+1,f
  9954  0DAF  087A               	movf	??i1_USBStdFeatureReqHandler,w
  9955  0DB0  0021               	movlb	1	; select bank1
  9956  0DB1  00E8               	movwf	i1USBStdFeatureReqHandler@pUEP^(0+128)
  9957  0DB2  087B               	movf	??i1_USBStdFeatureReqHandler+1,w
  9958  0DB3  00E9               	movwf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128)
  9959                           
  9960                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  9961  0DB4  0868               	movf	i1USBStdFeatureReqHandler@pUEP^(0+128),w
  9962  0DB5  0086               	movwf	6
  9963  0DB6  0869               	movf	(i1USBStdFeatureReqHandler@pUEP+1)^(0+128),w
  9964  0DB7  0087               	movwf	7
  9965  0DB8  1001               	bcf	1,0
  9966  0DB9  0008               	return
  9967  0DBA                     __end_ofi1_USBStdFeatureReqHandler:	
  9968  0DBA                     __ptext39:	
  9969 ;; *************** function i1_USBDeviceTasks *****************
  9970 ;; Defined at:
  9971 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;		None
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;  USBDeviceTas    1    7[BANK0h] unsigned char 
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      void 
  9978 ;; Registers used:
  9979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9980 ;; Tracked objects:
  9981 ;;		On entry : 1F/0
  9982 ;;		On exit  : 1F/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;Total ram usage:        2 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:    8
  9992 ;; This function calls:
  9993 ;;		i1_USBCtrlEPAllowStatusStage
  9994 ;;		i1_USBCtrlEPService
  9995 ;;		i1_USBDeviceInit
  9996 ;;		i1_USBIncrement1msInternalTimers
  9997 ;;		i1_USBStallHandler
  9998 ;;		i1_USBSuspend
  9999 ;;		i1_USBWakeFromSuspend
 10000 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10001 ;; This function is called by:
 10002 ;;		_INTERRUPT_InterruptManager
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           
 10007                           ;psect for function i1_USBDeviceTasks
 10008  0DBA                     i1_USBDeviceTasks:	
 10009                           
 10010                           ;usb_device.c: 479: uint8_t i;
 10011                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 10012                           
 10013                           ;incstack = 0
 10014 ;; hardware stack exceeded
 10015                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10016  0DBA  0024               	movlb	4	; select bank4
 10017  0DBB  036D               	decf	_USBDeviceState^(0+512),w	;volatile
 10018  0DBC  1D03               	btfss	3,2
 10019  0DBD  2DC7               	goto	i1l6981
 10020                           
 10021                           ;usb_device.c: 591: {
 10022                           ;usb_device.c: 601: if(!UCONbits.SE0)
 10023  0DBE  003D               	movlb	29	; select bank29
 10024  0DBF  1A8E               	btfsc	14,5	;volatile
 10025  0DC0  2DC7               	goto	i1l6981
 10026                           
 10027                           ;usb_device.c: 602: {
 10028                           ;usb_device.c: 608: {UIR = 0;};
 10029  0DC1  0190               	clrf	16	;volatile
 10030                           
 10031                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 10032  0DC2  1412               	bsf	18,0	;volatile
 10033                           
 10034                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 10035  0DC3  1612               	bsf	18,4	;volatile
 10036                           
 10037                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 10038  0DC4  3002               	movlw	2
 10039  0DC5  0024               	movlb	4	; select bank4
 10040  0DC6  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
 10041  0DC7                     i1l6981:	
 10042                           
 10043                           ;usb_device.c: 617: }
 10044                           ;usb_device.c: 618: }
 10045                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 10046  0DC7  003D               	movlb	29	; select bank29
 10047  0DC8  1910               	btfsc	16,2	;volatile
 10048  0DC9  1D12               	btfss	18,2	;volatile
 10049  0DCA  2DCE               	goto	i1l6989
 10050                           
 10051                           ;usb_device.c: 635: {
 10052                           ;usb_device.c: 636: (UIR &= 0xFB);
 10053  0DCB  1110               	bcf	16,2	;volatile
 10054                           
 10055                           ;usb_device.c: 640: USBWakeFromSuspend();
 10056  0DCC  27E9  318C         	fcall	i1_USBWakeFromSuspend
 10057  0DCE                     i1l6989:	
 10058                           
 10059                           ;usb_device.c: 642: }
 10060                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 10061  0DCE  003D               	movlb	29	; select bank29
 10062  0DCF  1C8E               	btfss	14,1	;volatile
 10063  0DD0  2DD4               	goto	i1l333
 10064                           
 10065                           ;usb_device.c: 648: {
 10066                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
 10067  0DD1  0020               	movlb	0	; select bank0
 10068  0DD2  1112               	bcf	18,2	;volatile
 10069                           
 10070                           ;usb_device.c: 650: return;
 10071  0DD3  0008               	return
 10072  0DD4                     i1l333:	
 10073                           
 10074                           ;usb_device.c: 651: }
 10075                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10076  0DD4  1810               	btfsc	16,0	;volatile
 10077  0DD5  1C12               	btfss	18,0	;volatile
 10078  0DD6  2DE0               	goto	i1l7003
 10079                           
 10080                           ;usb_device.c: 664: {
 10081                           ;usb_device.c: 665: USBDeviceInit();
 10082  0DD7  2729  318C         	fcall	i1_USBDeviceInit
 10083                           
 10084                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 10085  0DD9  0021               	movlb	1	; select bank1
 10086  0DDA  1512               	bsf	18,2	;volatile
 10087                           
 10088                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10089  0DDB  3004               	movlw	4
 10090  0DDC  0024               	movlb	4	; select bank4
 10091  0DDD  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
 10092                           
 10093                           ;usb_device.c: 681: (UIR &= 0xFE);
 10094  0DDE  003D               	movlb	29	; select bank29
 10095  0DDF  1010               	bcf	16,0	;volatile
 10096  0DE0                     i1l7003:	
 10097                           
 10098                           ;usb_device.c: 682: }
 10099                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10100  0DE0  1A10               	btfsc	16,4	;volatile
 10101  0DE1  1E12               	btfss	18,4	;volatile
 10102  0DE2  2DE5               	goto	i1l7009
 10103                           
 10104                           ;usb_device.c: 688: {
 10105                           ;usb_device.c: 694: USBSuspend();
 10106  0DE3  27D7  318C         	fcall	i1_USBSuspend
 10107  0DE5                     i1l7009:	
 10108                           
 10109                           ;usb_device.c: 696: }
 10110                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 10111  0DE5  003D               	movlb	29	; select bank29
 10112  0DE6  1F10               	btfss	16,6	;volatile
 10113  0DE7  2E01               	goto	i1l7027
 10114                           
 10115                           ;usb_device.c: 709: {
 10116                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 10117  0DE8  1F12               	btfss	18,6	;volatile
 10118  0DE9  2DF5               	goto	i1l7015
 10119                           
 10120                           ;usb_device.c: 712: {
 10121                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10122  0DEA  3073               	movlw	115
 10123  0DEB  0020               	movlb	0	; select bank0
 10124  0DEC  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10125  0DED  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10126  0DEE  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10127  0DEF  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10128  0DF0  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10129  0DF1  0ADC               	incf	i1USER_USB_CALLBACK_EVENT_HANDLER@size,f
 10130  0DF2  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10131  0DF3  2660  318C         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10132  0DF5                     i1l7015:	
 10133                           
 10134                           ;usb_device.c: 714: }
 10135                           ;usb_device.c: 715: (UIR &= 0xBF);
 10136  0DF5  003D               	movlb	29	; select bank29
 10137  0DF6  1310               	bcf	16,6	;volatile
 10138                           
 10139                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 10140  0DF7  27A5  318C         	fcall	i1_USBIncrement1msInternalTimers
 10141                           
 10142                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10143  0DF9  0857               	movf	_USBStatusStageTimeoutCounter^(0+640),w
 10144  0DFA  1D03               	btfss	3,2
 10145                           
 10146                           ;usb_device.c: 736: {
 10147                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 10148  0DFB  03D7               	decf	_USBStatusStageTimeoutCounter^(0+640),f	;volatile
 10149                           
 10150                           ;usb_device.c: 738: }
 10151                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 10152  0DFC  0857               	movf	_USBStatusStageTimeoutCounter^(0+640),w	;volatile
 10153  0DFD  1D03               	btfss	3,2
 10154  0DFE  2E01               	goto	i1l7027
 10155                           
 10156                           ;usb_device.c: 745: {
 10157                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 10158  0DFF  2682  318C         	fcall	i1_USBCtrlEPAllowStatusStage
 10159  0E01                     i1l7027:	
 10160                           
 10161                           ;usb_device.c: 747: }
 10162                           ;usb_device.c: 749: }
 10163                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 10164  0E01  003D               	movlb	29	; select bank29
 10165  0E02  1A90               	btfsc	16,5	;volatile
 10166  0E03  1E92               	btfss	18,5	;volatile
 10167  0E04  2E07               	goto	i1l7033
 10168                           
 10169                           ;usb_device.c: 752: {
 10170                           ;usb_device.c: 753: USBStallHandler();
 10171  0E05  27B7  318C         	fcall	i1_USBStallHandler
 10172  0E07                     i1l7033:	
 10173                           
 10174                           ;usb_device.c: 754: }
 10175                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 10176  0E07  1890               	btfsc	16,1	;volatile
 10177  0E08  1C92               	btfss	18,1	;volatile
 10178  0E09  2E18               	goto	i1l7041
 10179                           
 10180                           ;usb_device.c: 757: {
 10181                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 10182  0E0A  30FF               	movlw	255
 10183  0E0B  0020               	movlb	0	; select bank0
 10184  0E0C  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10185  0E0D  307F               	movlw	127
 10186  0E0E  00D9               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10187  0E0F  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10188  0E10  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10189  0E11  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10190  0E12  0ADC               	incf	i1USER_USB_CALLBACK_EVENT_HANDLER@size,f
 10191  0E13  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10192  0E14  2660  318C         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10193                           
 10194                           ;usb_device.c: 759: {UEIR = 0;};
 10195  0E16  003D               	movlb	29	; select bank29
 10196  0E17  0193               	clrf	19	;volatile
 10197  0E18                     i1l7041:	
 10198                           
 10199                           ;usb_device.c: 767: }
 10200                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 10201  0E18  3004               	movlw	4
 10202  0E19  0024               	movlb	4	; select bank4
 10203  0E1A  026D               	subwf	_USBDeviceState^(0+512),w	;volatile
 10204  0E1B  1803               	skipnc
 10205  0E1C  2E20               	goto	i1l343
 10206                           
 10207                           ;usb_device.c: 775: {
 10208                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
 10209  0E1D  0020               	movlb	0	; select bank0
 10210  0E1E  1112               	bcf	18,2	;volatile
 10211                           
 10212                           ;usb_device.c: 777: return;
 10213  0E1F  0008               	return
 10214  0E20                     i1l343:	
 10215                           
 10216                           ;usb_device.c: 778: }
 10217                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 10218  0E20  003D               	movlb	29	; select bank29
 10219  0E21  1D92               	btfss	18,3	;volatile
 10220  0E22  2E5D               	goto	i1l344
 10221                           
 10222                           ;usb_device.c: 784: {
 10223                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 10224  0E23  0020               	movlb	0	; select bank0
 10225  0E24  01DF               	clrf	i1USBDeviceTasks@i
 10226  0E25                     i1l7047:	
 10227  0E25  3004               	movlw	4
 10228  0E26  025F               	subwf	i1USBDeviceTasks@i,w
 10229  0E27  1803               	btfsc	3,0
 10230  0E28  2E5D               	goto	i1l344
 10231                           
 10232                           ;usb_device.c: 786: {
 10233                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 10234  0E29  003D               	movlb	29	; select bank29
 10235  0E2A  1D90               	btfss	16,3	;volatile
 10236  0E2B  2E5D               	goto	i1l344
 10237                           
 10238                           ;usb_device.c: 788: {
 10239                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 10240  0E2C  080F               	movf	15,w	;volatile
 10241  0E2D  0023               	movlb	3	; select bank3
 10242  0E2E  00EF               	movwf	_USTATcopy^(0+384)	;volatile
 10243                           
 10244                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 10245  0E2F  0C6F               	rrf	_USTATcopy^(0+384),w	;volatile
 10246  0E30  0020               	movlb	0	; select bank0
 10247  0E31  00DE               	movwf	??i1_USBDeviceTasks
 10248  0E32  0CDE               	rrf	??i1_USBDeviceTasks,f
 10249  0E33  0C5E               	rrf	??i1_USBDeviceTasks,w
 10250  0E34  390F               	andlw	15
 10251  0E35  0025               	movlb	5	; select bank5
 10252  0E36  00D9               	movwf	_endpoint_number^(0+640)	;volatile
 10253                           
 10254                           ;usb_device.c: 793: (UIR &= 0xF7);
 10255  0E37  003D               	movlb	29	; select bank29
 10256  0E38  1190               	bcf	16,3	;volatile
 10257                           
 10258                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 10259  0E39  0023               	movlb	3	; select bank3
 10260  0E3A  196F               	btfsc	_USTATcopy^(0+384),2	;volatile
 10261  0E3B  2E40               	goto	i1l7061
 10262                           
 10263                           ;usb_device.c: 799: {
 10264                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 10265  0E3C  0025               	movlb	5	; select bank5
 10266  0E3D  0859               	movf	_endpoint_number^(0+640),w	;volatile
 10267  0E3E  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 10268  0E3F  2E43               	goto	L11
 10269  0E40                     i1l7061:	
 10270                           ;usb_device.c: 801: }
 10271                           
 10272                           
 10273                           ;usb_device.c: 802: else
 10274                           ;usb_device.c: 803: {
 10275                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 10276  0E40  0025               	movlb	5	; select bank5
 10277  0E41  0859               	movf	_endpoint_number^(0+640),w	;volatile
 10278  0E42  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 10279  0E43                     L11:	
 10280  0E43  0086               	movwf	6
 10281  0E44  3002               	movlw	2	; select bank5/6
 10282  0E45  0087               	movwf	7
 10283  0E46  3001               	movlw	1
 10284  0E47  0681               	xorwf	1,f
 10285                           
 10286                           ;usb_device.c: 805: }
 10287                           ;usb_device.c: 810: if(endpoint_number == 0)
 10288  0E48  0859               	movf	_endpoint_number^(0+640),w	;volatile
 10289  0E49  1D03               	btfss	3,2
 10290  0E4A  2E4E               	goto	i1l7067
 10291                           
 10292                           ;usb_device.c: 811: {
 10293                           ;usb_device.c: 812: USBCtrlEPService();
 10294  0E4B  26E3  318C         	fcall	i1_USBCtrlEPService
 10295                           
 10296                           ;usb_device.c: 813: }
 10297  0E4D  2E5A               	goto	i1l7069
 10298  0E4E                     i1l7067:	
 10299                           
 10300                           ;usb_device.c: 814: else
 10301                           ;usb_device.c: 815: {
 10302                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 10303  0E4E  3072               	movlw	114
 10304  0E4F  0020               	movlb	0	; select bank0
 10305  0E50  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10306  0E51  30EF               	movlw	low _USTATcopy
 10307  0E52  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10308  0E53  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10309  0E54  3001               	movlw	high _USTATcopy
 10310  0E55  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10311  0E56  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10312  0E57  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10313  0E58  2660  318C         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10314  0E5A                     i1l7069:	
 10315  0E5A  0020               	movlb	0	; select bank0
 10316  0E5B  0ADF               	incf	i1USBDeviceTasks@i,f
 10317  0E5C  2E25               	goto	i1l7047
 10318  0E5D                     i1l344:	
 10319                           
 10320                           ;usb_device.c: 822: }
 10321                           ;usb_device.c: 823: }
 10322                           ;usb_device.c: 824: }
 10323                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
 10324  0E5D  0020               	movlb	0	; select bank0
 10325  0E5E  1112               	bcf	18,2	;volatile
 10326  0E5F  0008               	return
 10327  0E60                     __end_ofi1_USBDeviceTasks:	
 10328  0E60                     __ptext55:	
 10329 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 10330 ;; Defined at:
 10331 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  event           2    0[BANK0h] enum E34
 10334 ;;  pdata           2    2[BANK0h] PTR void 
 10335 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 10336 ;;		 -> NULL(0), 
 10337 ;;  size            2    4[BANK0h] unsigned int 
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      unsigned char 
 10342 ;; Registers used:
 10343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10344 ;; Tracked objects:
 10345 ;;		On entry : 1F/0
 10346 ;;		On exit  : 1A/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10352 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10353 ;;Total ram usage:        6 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:    3
 10356 ;; This function calls:
 10357 ;;		i1_CDCInitEP
 10358 ;;		i1_USBCheckCDCRequest
 10359 ;; This function is called by:
 10360 ;;		i1_USBDeviceTasks
 10361 ;;		i1_USBStdSetCfgHandler
 10362 ;;		i1_USBSuspend
 10363 ;;		i1_USBWakeFromSuspend
 10364 ;;		i1_USBCtrlTrfSetupHandler
 10365 ;;		i1_USBCheckStdRequest
 10366 ;;		i1_USBStdFeatureReqHandler
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           
 10371                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 10372  0E60                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 10373                           
 10374                           ;usb_device_events.c: 51: switch( (int) event )
 10375                           
 10376                           ;incstack = 0
 10377                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10378  0E60  2E67               	goto	i1l4697
 10379  0E61                     i1l4691:	
 10380                           
 10381                           ;usb_device_events.c: 76: CDCInitEP();
 10382  0E61  319B  233A         	fcall	i1_CDCInitEP
 10383                           
 10384                           ;usb_device_events.c: 77: break;
 10385  0E63  0008               	return
 10386  0E64                     i1l4693:	
 10387                           
 10388                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 10389  0E64  319A  2204         	fcall	i1_USBCheckCDCRequest
 10390                           
 10391                           ;usb_device_events.c: 86: break;
 10392  0E66  0008               	return
 10393  0E67                     i1l4697:	
 10394                           
 10395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10396                           ; Switch size 1, requested type "speed"
 10397                           ; Number of cases is 2, Range of values is 0 to 127
 10398                           ; switch strategies available:
 10399                           ; Name         Instructions Cycles
 10400                           ; simple_byte            7     4 (average)
 10401                           ; direct_byte          262     6 (fixed)
 10402                           ; jumptable            260     6 (fixed)
 10403                           ;	Chosen strategy is simple_byte
 10404  0E67  0859               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 10405  0E68  3A00               	xorlw	0	; case 0
 10406  0E69  1903               	skipnz
 10407  0E6A  2E6F               	goto	i1l8549
 10408  0E6B  3A7F               	xorlw	127	; case 127
 10409  0E6C  1903               	skipnz
 10410  0E6D  2E7C               	goto	i1l8551
 10411  0E6E  2E81               	goto	i1l184
 10412  0E6F                     i1l8549:	
 10413                           
 10414                           ; Switch size 1, requested type "speed"
 10415                           ; Number of cases is 8, Range of values is 1 to 117
 10416                           ; switch strategies available:
 10417                           ; Name         Instructions Cycles
 10418                           ; direct_byte          243     9 (fixed)
 10419                           ; simple_byte           25    13 (average)
 10420                           ; jumptable            263     9 (fixed)
 10421                           ;	Chosen strategy is direct_byte
 10422  0E6F  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 10423  0E70  3EFF               	addlw	-1
 10424  0E71  1C03               	skipc
 10425  0E72  0008               	return
 10426  0E73  0084               	movwf	4
 10427  0E74  3075               	movlw	117
 10428  0E75  0204               	subwf	4,w
 10429  0E76  1803               	skipnc
 10430  0E77  0008               	return
 10431  0E78  3190               	movlp	high i1S8553
 10432  0E79  3504               	lslf	4,w
 10433  0E7A  3E00               	addlw	low i1S8553
 10434  0E7B  0082               	movwf	2
 10435  0E7C                     i1l8551:	
 10436                           
 10437                           ; Switch size 1, requested type "speed"
 10438                           ; Number of cases is 1, Range of values is 255 to 255
 10439                           ; switch strategies available:
 10440                           ; Name         Instructions Cycles
 10441                           ; simple_byte            4     3 (average)
 10442                           ; direct_byte            7     5 (fixed)
 10443                           ; jumptable            263     9 (fixed)
 10444                           ;	Chosen strategy is simple_byte
 10445  0E7C  0858               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 10446  0E7D  3AFF               	xorlw	255	; case 255
 10447  0E7E  1903               	skipnz
 10448  0E7F  2E81               	goto	i1l184
 10449  0E80  2E81               	goto	i1l184
 10450  0E81                     i1l184:	
 10451  0E81  0008               	return
 10452  0E82                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 10453  0E82                     __ptext62:	
 10454 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 10455 ;; Defined at:
 10456 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;		None
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      void 
 10463 ;; Registers used:
 10464 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10465 ;; Tracked objects:
 10466 ;;		On entry : 1A/5
 10467 ;;		On exit  : 18/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;Total ram usage:        2 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		i1_USBDeviceTasks
 10480 ;;		i1_USBCtrlEPServiceComplete
 10481 ;;		i1_USBCtrlTrfRxService
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           
 10486                           ;psect for function i1_USBCtrlEPAllowStatusStage
 10487  0E82                     i1_USBCtrlEPAllowStatusStage:	
 10488                           
 10489                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 10490                           
 10491                           ;incstack = 0
 10492                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 10493  0E82  0025               	movlb	5	; select bank5
 10494  0E83  0855               	movf	_USBStatusStageEnabledFlag1^(0+640),w	;volatile
 10495  0E84  1D03               	btfss	3,2
 10496  0E85  0008               	return
 10497                           
 10498                           ;usb_device.c: 1424: {
 10499                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 10500  0E86  3001               	movlw	1
 10501  0E87  00D5               	movwf	_USBStatusStageEnabledFlag1^(0+640)	;volatile
 10502                           
 10503                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 10504  0E88  0854               	movf	_USBStatusStageEnabledFlag2^(0+640),w	;volatile
 10505  0E89  1D03               	btfss	3,2
 10506  0E8A  0008               	return
 10507                           
 10508                           ;usb_device.c: 1427: {
 10509                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 10510  0E8B  3001               	movlw	1
 10511  0E8C  00D4               	movwf	_USBStatusStageEnabledFlag2^(0+640)	;volatile
 10512                           
 10513                           ;usb_device.c: 1432: if(controlTransferState == 2)
 10514  0E8D  3002               	movlw	2
 10515  0E8E  0024               	movlb	4	; select bank4
 10516  0E8F  066C               	xorwf	_controlTransferState^(0+512),w	;volatile
 10517  0E90  1D03               	btfss	3,2
 10518  0E91  2EA5               	goto	i1l5033
 10519                           
 10520                           ;usb_device.c: 1433: {
 10521                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 10522  0E92  0025               	movlb	5	; select bank5
 10523  0E93  0827               	movf	_pBDTEntryIn^(0+640),w
 10524  0E94  0086               	movwf	6
 10525  0E95  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 10526  0E96  0087               	movwf	7
 10527  0E97  3141               	addfsr 1,1
 10528  0E98  0181               	clrf	1
 10529                           
 10530                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10531  0E99  0827               	movf	_pBDTEntryIn^(0+640),w
 10532  0E9A  0086               	movwf	6
 10533  0E9B  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 10534  0E9C  0087               	movwf	7
 10535  0E9D  3048               	movlw	72
 10536  0E9E  0081               	movwf	1
 10537                           
 10538                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10539  0E9F  0827               	movf	_pBDTEntryIn^(0+640),w
 10540  0EA0  0086               	movwf	6
 10541  0EA1  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 10542  0EA2  0087               	movwf	7
 10543  0EA3  1781               	bsf	1,7
 10544                           
 10545                           ;usb_device.c: 1437: }
 10546  0EA4  0008               	return
 10547  0EA5                     i1l5033:	
 10548                           
 10549                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 10550  0EA5  0B6C               	decfsz	_controlTransferState^(0+512),w	;volatile
 10551  0EA6  0008               	return
 10552                           
 10553                           ;usb_device.c: 1439: {
 10554                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 10555  0EA7  0025               	movlb	5	; select bank5
 10556  0EA8  01D8               	clrf	_BothEP0OutUOWNsSet^(0+640)	;volatile
 10557                           
 10558                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 16;
 10559  0EA9  0023               	movlb	3	; select bank3
 10560  0EAA  0A6E               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
 10561  0EAB  0086               	movwf	6
 10562  0EAC  3010               	movlw	16
 10563  0EAD  0187               	clrf	7
 10564  0EAE  0081               	movwf	1
 10565                           
 10566                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10567  0EAF  3050               	movlw	80
 10568  0EB0  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 10569  0EB1  01F1               	clrf	??i1_USBCtrlEPAllowStatusStage+1
 10570  0EB2  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10571  0EB3  3E02               	addlw	2
 10572  0EB4  0086               	movwf	6
 10573  0EB5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 10574  0EB6  3FC0               	movwi [0]fsr1
 10575  0EB7  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 10576  0EB8  3FC1               	movwi [1]fsr1
 10577                           
 10578                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10579  0EB9  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10580  0EBA  0086               	movwf	6
 10581  0EBB  3004               	movlw	4
 10582  0EBC  0081               	movwf	1
 10583                           
 10584                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10585  0EBD  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10586  0EBE  0086               	movwf	6
 10587  0EBF  3001               	movlw	1
 10588  0EC0  1781               	bsf	1,7
 10589                           
 10590                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 10591  0EC1  0025               	movlb	5	; select bank5
 10592  0EC2  00D8               	movwf	_BothEP0OutUOWNsSet^(0+640)	;volatile
 10593                           
 10594                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 16;
 10595  0EC3  0023               	movlb	3	; select bank3
 10596  0EC4  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 10597  0EC5  3E01               	addlw	1
 10598  0EC6  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 10599  0EC7  3000               	movlw	0
 10600  0EC8  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 10601  0EC9  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 10602  0ECA  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 10603  0ECB  0086               	movwf	6
 10604  0ECC  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 10605  0ECD  0087               	movwf	7
 10606  0ECE  3010               	movlw	16
 10607  0ECF  0081               	movwf	1
 10608                           
 10609                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10610  0ED0  3050               	movlw	80
 10611  0ED1  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 10612  0ED2  01F1               	clrf	??i1_USBCtrlEPAllowStatusStage+1
 10613  0ED3  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 10614  0ED4  0086               	movwf	6
 10615  0ED5  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 10616  0ED6  0087               	movwf	7
 10617  0ED7  3142               	addfsr 1,2
 10618  0ED8  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 10619  0ED9  3FC0               	movwi [0]fsr1
 10620  0EDA  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 10621  0EDB  3FC1               	movwi [1]fsr1
 10622                           
 10623                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10624  0EDC  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 10625  0EDD  0086               	movwf	6
 10626  0EDE  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 10627  0EDF  0087               	movwf	7
 10628  0EE0  3080               	movlw	128
 10629  0EE1  0081               	movwf	1
 10630  0EE2  0008               	return
 10631  0EE3                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 10632  0EE3                     __ptext45:	
 10633 ;; *************** function i1_USBCtrlEPService *****************
 10634 ;; Defined at:
 10635 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;		None
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 1F/5
 10646 ;;		On exit  : 18/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        3 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    7
 10656 ;; This function calls:
 10657 ;;		i1_USBCtrlTrfInHandler
 10658 ;;		i1_USBCtrlTrfOutHandler
 10659 ;;		i1_USBCtrlTrfSetupHandler
 10660 ;; This function is called by:
 10661 ;;		i1_USBDeviceTasks
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function i1_USBCtrlEPService
 10667  0EE3                     i1_USBCtrlEPService:	
 10668                           
 10669                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 10670                           
 10671                           ;incstack = 0
 10672 ;; hardware stack exceeded
 10673                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10674  0EE3  302D               	movlw	45
 10675  0EE4  00D7               	movwf	_USBStatusStageTimeoutCounter^(0+640)	;volatile
 10676                           
 10677                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 10678  0EE5  0023               	movlb	3	; select bank3
 10679  0EE6  086F               	movf	_USTATcopy^(0+384),w	;volatile
 10680  0EE7  39FD               	andlw	253
 10681  0EE8  1D03               	btfss	3,2
 10682  0EE9  2F1F               	goto	i1l6047
 10683                           
 10684                           ;usb_device.c: 2383: {
 10685                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 10686  0EEA  366F               	lsrf	_USTATcopy^(0+384),w	;volatile
 10687  0EEB  393F               	andlw	63
 10688  0EEC  0709               	addwf	9,w
 10689  0EED  0709               	addwf	9,w
 10690  0EEE  3E20               	addlw	32
 10691  0EEF  00EE               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 10692                           
 10693                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10694  0EF0  00EC               	movwf	_pBDTEntryEP0OutNext^(0+384)
 10695  0EF1  39FF               	andlw	255
 10696  0EF2  1D03               	skipz
 10697  0EF3  3000               	movlw	0
 10698  0EF4  00ED               	movwf	(_pBDTEntryEP0OutNext+1)^(0+384)
 10699                           
 10700                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 10701  0EF5  3004               	movlw	4
 10702  0EF6  066C               	xorwf	_pBDTEntryEP0OutNext^(0+384),w
 10703  0EF7  00EC               	movwf	_pBDTEntryEP0OutNext^(0+384)
 10704                           
 10705                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 10706  0EF8  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10707  0EF9  0086               	movwf	6
 10708  0EFA  0187               	clrf	7
 10709  0EFB  0C01               	rrf	1,w
 10710  0EFC  0C89               	rrf	9,f
 10711  0EFD  390F               	andlw	15
 10712  0EFE  3A0D               	xorlw	13
 10713  0EFF  1D03               	skipz
 10714  0F00  2F1C               	goto	i1l6045
 10715                           
 10716                           ;usb_device.c: 2400: {
 10717                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 10718  0F01  3050               	movlw	80
 10719  0F02  0086               	movwf	6
 10720  0F03  0023               	movlb	3	; select bank3
 10721  0F04  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10722  0F05  3E02               	addlw	2
 10723  0F06  0084               	movwf	4
 10724  0F07  0185               	clrf	5
 10725  0F08  3F00               	moviw [0]fsr0
 10726  0F09  0021               	movlb	1	; select bank1
 10727  0F0A  00ED               	movwf	??i1_USBCtrlEPService^(0+128)
 10728  0F0B  3F01               	moviw [1]fsr0
 10729  0F0C  00EE               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 10730  0F0D  086D               	movf	??i1_USBCtrlEPService^(0+128),w
 10731  0F0E  0084               	movwf	4
 10732  0F0F  086E               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10733  0F10  0085               	movwf	5
 10734  0F11  3008               	movlw	8
 10735  0F12  00EF               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 10736  0F13  086F               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 10737  0F14  1903               	skipnz
 10738  0F15  2F1A               	goto	i1l6043
 10739  0F16                     u496_2m0:	
 10740  0F16  0012               	moviw fsr0++
 10741  0F17  001E               	movwi fsr1++
 10742  0F18  0BEF               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 10743  0F19  2F16               	goto	u496_2m0
 10744  0F1A                     i1l6043:	
 10745                           
 10746                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 10747  0F1A  241A               	fcall	i1_USBCtrlTrfSetupHandler
 10748                           
 10749                           ;usb_device.c: 2409: }
 10750  0F1B  0008               	return
 10751  0F1C                     i1l6045:	
 10752                           
 10753                           ;usb_device.c: 2410: else
 10754                           ;usb_device.c: 2411: {
 10755                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 10756  0F1C  319E  265E         	fcall	i1_USBCtrlTrfOutHandler
 10757  0F1E  0008               	return
 10758  0F1F                     i1l6047:	
 10759                           
 10760                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 10761  0F1F  30FD               	movlw	253
 10762  0F20  056F               	andwf	_USTATcopy^(0+384),w	;volatile
 10763  0F21  0021               	movlb	1	; select bank1
 10764  0F22  00ED               	movwf	??i1_USBCtrlEPService^(0+128)
 10765  0F23  3A04               	xorlw	4
 10766  0F24  1D03               	btfss	3,2
 10767  0F25  0008               	return
 10768                           
 10769                           ;usb_device.c: 2417: {
 10770                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 10771  0F26  3195  2588         	fcall	i1_USBCtrlTrfInHandler
 10772  0F28  0008               	return
 10773  0F29                     __end_ofi1_USBCtrlEPService:	
 10774  0F29                     __ptext44:	
 10775 ;; *************** function i1_USBDeviceInit *****************
 10776 ;; Defined at:
 10777 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;  USBDeviceIni    2    0[COMMON] PTR unsigned char 
 10782 ;;		 -> UEP1(1), 
 10783 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 10784 ;;  USBDeviceIni    1    2[COMMON] unsigned char 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      void 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10789 ;; Tracked objects:
 10790 ;;		On entry : 1F/1D
 10791 ;;		On exit  : 1F/4
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;Total ram usage:        4 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; This function calls:
 10801 ;;		Nothing
 10802 ;; This function is called by:
 10803 ;;		i1_USBDeviceTasks
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           
 10808                           ;psect for function i1_USBDeviceInit
 10809  0F29                     i1_USBDeviceInit:	
 10810                           
 10811                           ;usb_device.c: 279: uint8_t i;
 10812                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10813                           
 10814                           ;incstack = 0
 10815                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10816  0F29  0021               	movlb	1	; select bank1
 10817  0F2A  1112               	bcf	18,2	;volatile
 10818                           
 10819                           ;usb_device.c: 285: ;
 10820                           ;usb_device.c: 288: {UEIR = 0;};
 10821  0F2B  003D               	movlb	29	; select bank29
 10822  0F2C  0193               	clrf	19	;volatile
 10823                           
 10824                           ;usb_device.c: 291: {UIR = 0;};
 10825  0F2D  0190               	clrf	16	;volatile
 10826                           
 10827                           ;usb_device.c: 294: UEP0 = 0;
 10828  0F2E  0198               	clrf	24	;volatile
 10829                           
 10830                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 10831  0F2F  300E               	movlw	14
 10832  0F30  00F1               	movwf	i1USBDeviceInit@p+1
 10833  0F31  3099               	movlw	153
 10834  0F32  00F0               	movwf	i1USBDeviceInit@p
 10835  0F33  01F2               	clrf	i1USBDeviceInit@i_1358
 10836  0F34                     i1l5929:	
 10837  0F34  0870               	movf	i1USBDeviceInit@p,w
 10838  0F35  0086               	movwf	6
 10839  0F36  0871               	movf	i1USBDeviceInit@p+1,w
 10840  0F37  0087               	movwf	7
 10841  0F38  0181               	clrf	1
 10842  0F39  0AF0               	incf	i1USBDeviceInit@p,f
 10843  0F3A  1903               	skipnz
 10844  0F3B  0AF1               	incf	i1USBDeviceInit@p+1,f
 10845  0F3C  3002               	movlw	2
 10846  0F3D  0AF2               	incf	i1USBDeviceInit@i_1358,f
 10847  0F3E  0272               	subwf	i1USBDeviceInit@i_1358,w
 10848  0F3F  1C03               	skipc
 10849  0F40  2F34               	goto	i1l5929
 10850                           
 10851                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10852  0F41  3016               	movlw	22
 10853  0F42  0091               	movwf	17	;volatile
 10854  0F43  309F               	movlw	159
 10855  0F44  0097               	movwf	23	;volatile
 10856  0F45  307B               	movlw	123
 10857  0F46  0092               	movwf	18	;volatile
 10858                           
 10859                           ;usb_device.c: 301: ;
 10860                           ;usb_device.c: 304: ;
 10861                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 10862  0F47  01F3               	clrf	i1USBDeviceInit@i
 10863  0F48                     i1l5945:	
 10864                           
 10865                           ;usb_device.c: 308: {
 10866                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 10867  0F48  0873               	movf	i1USBDeviceInit@i,w
 10868  0F49  0709               	addwf	9,w
 10869  0F4A  0709               	addwf	9,w
 10870  0F4B  3E20               	addlw	32
 10871  0F4C  0086               	movwf	6
 10872  0F4D  3000               	movlw	0
 10873  0F4E  0187               	clrf	7
 10874  0F4F  3FC0               	movwi [0]fsr1
 10875  0F50  3FC1               	movwi [1]fsr1
 10876  0F51  3FC2               	movwi [2]fsr1
 10877  0F52  3FC3               	movwi [3]fsr1
 10878  0F53  300C               	movlw	12
 10879  0F54  0AF3               	incf	i1USBDeviceInit@i,f
 10880  0F55  0273               	subwf	i1USBDeviceInit@i,w
 10881  0F56  1C03               	skipc
 10882  0F57  2F48               	goto	i1l5945
 10883                           
 10884                           ;usb_device.c: 310: }
 10885                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 10886  0F58  170E               	bsf	14,6	;volatile
 10887                           
 10888                           ;usb_device.c: 316: UADDR = 0x00;
 10889  0F59  0196               	clrf	22	;volatile
 10890                           
 10891                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10892  0F5A  120E               	bcf	14,4	;volatile
 10893                           
 10894                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10895  0F5B  130E               	bcf	14,6	;volatile
 10896  0F5C                     i1l5957:	
 10897                           
 10898                           ;usb_device.c: 326: {
 10899                           ;usb_device.c: 327: (UIR &= 0xF7);
 10900  0F5C  1190               	bcf	16,3	;volatile
 10901                           
 10902                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10903  0F5D  0021               	movlb	1	; select bank1
 10904  0F5E  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
 10905                           
 10906                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10907  0F5F  0025               	movlb	5	; select bank5
 10908  0F60  01A2               	clrf	(_outPipes^(0+640)+2)	;volatile
 10909                           
 10910                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10911  0F61  01A3               	clrf	(_outPipes^(0+640)+3)	;volatile
 10912  0F62  01A4               	clrf	((_outPipes+1)^(0+640)+3)	;volatile
 10913                           
 10914                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10915  0F63  003D               	movlb	29	; select bank29
 10916  0F64  1990               	btfsc	16,3	;volatile
 10917  0F65  2F5C               	goto	i1l5957
 10918                           
 10919                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10920  0F66  3001               	movlw	1
 10921  0F67  0025               	movlb	5	; select bank5
 10922  0F68  00D5               	movwf	_USBStatusStageEnabledFlag1^(0+640)	;volatile
 10923                           
 10924                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10925  0F69  00D4               	movwf	_USBStatusStageEnabledFlag2^(0+640)	;volatile
 10926                           
 10927                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10928  0F6A  01D3               	clrf	_USBDeferINDataStagePackets^(0+640)	;volatile
 10929                           
 10930                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10931  0F6B  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+640)	;volatile
 10932                           
 10933                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10934  0F6C  01DA               	clrf	_USBBusIsSuspended^(0+640)	;volatile
 10935                           
 10936                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 10937  0F6D  01F3               	clrf	i1USBDeviceInit@i
 10938  0F6E                     i1l5973:	
 10939                           
 10940                           ;usb_device.c: 346: {
 10941                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10942  0F6E  3573               	lslf	i1USBDeviceInit@i,w
 10943  0F6F  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
 10944  0F70  0086               	movwf	6
 10945  0F71  3002               	movlw	2	; select bank5/6
 10946  0F72  0087               	movwf	7
 10947  0F73  3000               	movlw	0
 10948  0F74  3FC0               	movwi [0]fsr1
 10949  0F75  3FC1               	movwi [1]fsr1
 10950                           
 10951                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10952  0F76  3573               	lslf	i1USBDeviceInit@i,w
 10953  0F77  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 10954  0F78  0086               	movwf	6
 10955  0F79  3000               	movlw	0
 10956  0F7A  3FC0               	movwi [0]fsr1
 10957  0F7B  3FC1               	movwi [1]fsr1
 10958                           
 10959                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10960  0F7C  0873               	movf	i1USBDeviceInit@i,w
 10961  0F7D  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 10962  0F7E  0086               	movwf	6
 10963  0F7F  0181               	clrf	1
 10964                           
 10965                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10966  0F80  0873               	movf	i1USBDeviceInit@i,w
 10967  0F81  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 10968  0F82  0086               	movwf	6
 10969  0F83  3003               	movlw	3
 10970  0F84  0181               	clrf	1
 10971  0F85  0AF3               	incf	i1USBDeviceInit@i,f
 10972  0F86  0273               	subwf	i1USBDeviceInit@i,w
 10973  0F87  1C03               	skipc
 10974  0F88  2F6E               	goto	i1l5973
 10975                           
 10976                           ;usb_device.c: 351: }
 10977                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10978  0F89  3028               	movlw	40
 10979  0F8A  0025               	movlb	5	; select bank5
 10980  0F8B  00A7               	movwf	_pBDTEntryIn^(0+640)
 10981  0F8C  3016               	movlw	22
 10982  0F8D  01A8               	clrf	(_pBDTEntryIn+1)^(0+640)
 10983                           
 10984                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10985  0F8E  003D               	movlb	29	; select bank29
 10986  0F8F  0098               	movwf	24	;volatile
 10987                           
 10988                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10989  0F90  0020               	movlb	0	; select bank0
 10990  0F91  01A3               	clrf	35	;volatile
 10991  0F92  3050               	movlw	80
 10992  0F93  00A2               	movwf	34	;volatile
 10993                           
 10994                           ;usb_device.c: 359: BDT[0].CNT = 16;
 10995  0F94  3010               	movlw	16
 10996  0F95  00A1               	movwf	33	;volatile
 10997                           
 10998                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10999  0F96  3004               	movlw	4
 11000  0F97  00A0               	movwf	32	;volatile
 11001                           
 11002                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 11003  0F98  17A0               	bsf	32,7	;volatile
 11004                           
 11005                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 11006  0F99  0025               	movlb	5	; select bank5
 11007  0F9A  01E8               	clrf	_USBActiveConfiguration^(0+640)	;volatile
 11008                           
 11009                           ;usb_device.c: 366: USB1msTickCount = 0;
 11010  0F9B  0026               	movlb	6	; select bank6
 11011  0F9C  01A0               	clrf	_USB1msTickCount^(0+768)	;volatile
 11012  0F9D  01A1               	clrf	(_USB1msTickCount+1)^(0+768)	;volatile
 11013  0F9E  01A2               	clrf	(_USB1msTickCount+2)^(0+768)	;volatile
 11014  0F9F  01A3               	clrf	(_USB1msTickCount+3)^(0+768)	;volatile
 11015                           
 11016                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 11017  0FA0  0025               	movlb	5	; select bank5
 11018  0FA1  01D1               	clrf	_USBTicksSinceSuspendEnd^(0+640)	;volatile
 11019                           
 11020                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 11021  0FA2  0024               	movlb	4	; select bank4
 11022  0FA3  01ED               	clrf	_USBDeviceState^(0+512)	;volatile
 11023  0FA4  0008               	return
 11024  0FA5                     __end_ofi1_USBDeviceInit:	
 11025  0FA5                     __ptext43:	
 11026 ;; *************** function i1_USBIncrement1msInternalTimers *****************
 11027 ;; Defined at:
 11028 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
 11029 ;; Parameters:    Size  Location     Type
 11030 ;;		None
 11031 ;; Auto vars:     Size  Location     Type
 11032 ;;		None
 11033 ;; Return value:  Size  Location     Type
 11034 ;;                  1    wreg      void 
 11035 ;; Registers used:
 11036 ;;		wreg, status,2, status,0
 11037 ;; Tracked objects:
 11038 ;;		On entry : 1F/1D
 11039 ;;		On exit  : 1F/5
 11040 ;;		Unchanged: 0/0
 11041 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11046 ;;Total ram usage:        0 bytes
 11047 ;; Hardware stack levels used:    1
 11048 ;; This function calls:
 11049 ;;		Nothing
 11050 ;; This function is called by:
 11051 ;;		i1_USBDeviceTasks
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           
 11056                           ;psect for function i1_USBIncrement1msInternalTimers
 11057  0FA5                     i1_USBIncrement1msInternalTimers:	
 11058                           
 11059                           ;usb_device.c: 3033: USB1msTickCount++;
 11060                           
 11061                           ;incstack = 0
 11062                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
 11063  0FA5  3001               	movlw	1
 11064  0FA6  0026               	movlb	6	; select bank6
 11065  0FA7  07A0               	addwf	_USB1msTickCount^(0+768),f	;volatile
 11066  0FA8  3000               	movlw	0
 11067  0FA9  3DA1               	addwfc	(_USB1msTickCount+1)^(0+768),f	;volatile
 11068  0FAA  3DA2               	addwfc	(_USB1msTickCount+2)^(0+768),f	;volatile
 11069  0FAB  3DA3               	addwfc	(_USB1msTickCount+3)^(0+768),f	;volatile
 11070                           
 11071                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 11072  0FAC  0025               	movlb	5	; select bank5
 11073  0FAD  085A               	movf	_USBBusIsSuspended^(0+640),w	;volatile
 11074  0FAE  1D03               	btfss	3,2
 11075  0FAF  0008               	return
 11076                           
 11077                           ;usb_device.c: 3035: {
 11078                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 11079  0FB0  0AD1               	incf	_USBTicksSinceSuspendEnd^(0+640),f	;volatile
 11080                           
 11081                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 11082  0FB1  0851               	movf	_USBTicksSinceSuspendEnd^(0+640),w	;volatile
 11083  0FB2  1D03               	btfss	3,2
 11084  0FB3  0008               	return
 11085                           
 11086                           ;usb_device.c: 3039: {
 11087                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 11088  0FB4  30FF               	movlw	255
 11089  0FB5  00D1               	movwf	_USBTicksSinceSuspendEnd^(0+640)	;volatile
 11090  0FB6  0008               	return
 11091  0FB7                     __end_ofi1_USBIncrement1msInternalTimers:	
 11092  0FB7                     __ptext42:	
 11093 ;; *************** function i1_USBStallHandler *****************
 11094 ;; Defined at:
 11095 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;		None
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;		None
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  1    wreg      void 
 11102 ;; Registers used:
 11103 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11104 ;; Tracked objects:
 11105 ;;		On entry : 1F/1D
 11106 ;;		On exit  : 1F/1D
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;Total ram usage:        0 bytes
 11114 ;; Hardware stack levels used:    1
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		i1_USBDeviceTasks
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           
 11123                           ;psect for function i1_USBStallHandler
 11124  0FB7                     i1_USBStallHandler:	
 11125                           
 11126                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 11127                           
 11128                           ;incstack = 0
 11129                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 11130  0FB7  1C18               	btfss	24,0	;volatile
 11131  0FB8  2FD5               	goto	i1l6009
 11132                           
 11133                           ;usb_device.c: 2215: {
 11134                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 11135  0FB9  0023               	movlb	3	; select bank3
 11136  0FBA  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11137  0FBB  0086               	movwf	6
 11138  0FBC  3080               	movlw	128
 11139  0FBD  0187               	clrf	7
 11140  0FBE  0601               	xorwf	1,w
 11141  0FBF  1D03               	btfss	3,2
 11142  0FC0  2FD3               	goto	i1l6007
 11143  0FC1  0025               	movlb	5	; select bank5
 11144  0FC2  0827               	movf	_pBDTEntryIn^(0+640),w
 11145  0FC3  0086               	movwf	6
 11146  0FC4  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11147  0FC5  0087               	movwf	7
 11148  0FC6  3084               	movlw	132
 11149  0FC7  0601               	xorwf	1,w
 11150  0FC8  1D03               	btfss	3,2
 11151  0FC9  2FD3               	goto	i1l6007
 11152                           
 11153                           ;usb_device.c: 2218: {
 11154                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11155  0FCA  0023               	movlb	3	; select bank3
 11156  0FCB  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11157  0FCC  0086               	movwf	6
 11158  0FCD  300C               	movlw	12
 11159  0FCE  0187               	clrf	7
 11160  0FCF  0081               	movwf	1
 11161                           
 11162                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11163  0FD0  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11164  0FD1  0086               	movwf	6
 11165  0FD2  1781               	bsf	1,7
 11166  0FD3                     i1l6007:	
 11167                           
 11168                           ;usb_device.c: 2222: }
 11169                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 11170  0FD3  003D               	movlb	29	; select bank29
 11171  0FD4  1018               	bcf	24,0	;volatile
 11172  0FD5                     i1l6009:	
 11173                           
 11174                           ;usb_device.c: 2224: }
 11175                           ;usb_device.c: 2226: (UIR &= 0xDF);
 11176  0FD5  1290               	bcf	16,5	;volatile
 11177  0FD6  0008               	return
 11178  0FD7                     __end_ofi1_USBStallHandler:	
 11179  0FD7                     __ptext41:	
 11180 ;; *************** function i1_USBSuspend *****************
 11181 ;; Defined at:
 11182 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;		None
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;		None
 11187 ;; Return value:  Size  Location     Type
 11188 ;;                  1    wreg      void 
 11189 ;; Registers used:
 11190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11191 ;; Tracked objects:
 11192 ;;		On entry : 1F/1D
 11193 ;;		On exit  : 1A/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;Total ram usage:        0 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; Hardware stack levels required when called:    4
 11203 ;; This function calls:
 11204 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11205 ;; This function is called by:
 11206 ;;		i1_USBDeviceTasks
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           
 11211                           ;psect for function i1_USBSuspend
 11212  0FD7                     i1_USBSuspend:	
 11213                           
 11214                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 11215                           
 11216                           ;incstack = 0
 11217                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11218  0FD7  1512               	bsf	18,2	;volatile
 11219                           
 11220                           ;usb_device.c: 2271: (UIR &= 0xEF);
 11221  0FD8  1210               	bcf	16,4	;volatile
 11222                           
 11223                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 11224  0FD9  148E               	bsf	14,1	;volatile
 11225                           
 11226                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 11227  0FDA  3001               	movlw	1
 11228  0FDB  0025               	movlb	5	; select bank5
 11229  0FDC  00DA               	movwf	_USBBusIsSuspended^(0+640)	;volatile
 11230                           
 11231                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 11232  0FDD  01D1               	clrf	_USBTicksSinceSuspendEnd^(0+640)	;volatile
 11233                           
 11234                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11235  0FDE  3075               	movlw	117
 11236  0FDF  0020               	movlb	0	; select bank0
 11237  0FE0  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11238  0FE1  3000               	movlw	0
 11239  0FE2  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11240  0FE3  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11241  0FE4  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11242  0FE5  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11243  0FE6  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11244  0FE7  2660               	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11245  0FE8  0008               	return
 11246  0FE9                     __end_ofi1_USBSuspend:	
 11247  0FE9                     __ptext40:	
 11248 ;; *************** function i1_USBWakeFromSuspend *****************
 11249 ;; Defined at:
 11250 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;		None
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  1    wreg      void 
 11257 ;; Registers used:
 11258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11259 ;; Tracked objects:
 11260 ;;		On entry : 1F/1D
 11261 ;;		On exit  : 1F/5
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;Total ram usage:        0 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:    4
 11271 ;; This function calls:
 11272 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11273 ;; This function is called by:
 11274 ;;		i1_USBDeviceTasks
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           
 11279                           ;psect for function i1_USBWakeFromSuspend
 11280  0FE9                     i1_USBWakeFromSuspend:	
 11281                           
 11282                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 11283                           
 11284                           ;incstack = 0
 11285                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11286  0FE9  0025               	movlb	5	; select bank5
 11287  0FEA  01DA               	clrf	_USBBusIsSuspended^(0+640)	;volatile
 11288                           
 11289                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11290  0FEB  3074               	movlw	116
 11291  0FEC  0020               	movlb	0	; select bank0
 11292  0FED  00D8               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11293  0FEE  3000               	movlw	0
 11294  0FEF  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11295  0FF0  01DA               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11296  0FF1  01DB               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11297  0FF2  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11298  0FF3  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11299  0FF4  2660  318C         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11300                           
 11301                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 11302  0FF6  003D               	movlb	29	; select bank29
 11303  0FF7  108E               	bcf	14,1	;volatile
 11304                           
 11305                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 11306  0FF8  1112               	bcf	18,2	;volatile
 11307  0FF9                     i1l493:	
 11308                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 11309                           
 11310  0FF9  1D10               	btfss	16,2	;volatile
 11311  0FFA  2FFD               	goto	i1l6027
 11312                           
 11313                           ;usb_device.c: 2343: {
 11314                           ;usb_device.c: 2344: (UIR &= 0xFB);
 11315  0FFB  1110               	bcf	16,2	;volatile
 11316  0FFC  2FF9               	goto	i1l493
 11317  0FFD                     i1l6027:	
 11318                           
 11319                           ;usb_device.c: 2345: }
 11320                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 11321  0FFD  0025               	movlb	5	; select bank5
 11322  0FFE  01D1               	clrf	_USBTicksSinceSuspendEnd^(0+640)	;volatile
 11323  0FFF  0008               	return
 11324  1000                     __end_ofi1_USBWakeFromSuspend:	
 11325                           
 11326                           	psect	text47
 11327  14AD                     __ptext47:	
 11328 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 11329 ;; Defined at:
 11330 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;		None
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      void 
 11337 ;; Registers used:
 11338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11339 ;; Tracked objects:
 11340 ;;		On entry : 1A/5
 11341 ;;		On exit  : 18/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;Total ram usage:        2 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; Hardware stack levels required when called:    2
 11351 ;; This function calls:
 11352 ;;		i1_USBCtrlEPAllowDataStage
 11353 ;;		i1_USBCtrlEPAllowStatusStage
 11354 ;; This function is called by:
 11355 ;;		i1_USBCtrlTrfSetupHandler
 11356 ;; This function uses a non-reentrant model
 11357 ;;
 11358                           
 11359                           
 11360                           ;psect for function i1_USBCtrlEPServiceComplete
 11361  14AD                     i1_USBCtrlEPServiceComplete:	
 11362                           
 11363                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 11364                           
 11365                           ;incstack = 0
 11366                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11367  14AD  003D               	movlb	29	; select bank29
 11368  14AE  120E               	bcf	14,4	;volatile
 11369                           
 11370                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 11371  14AF  0021               	movlb	1	; select bank1
 11372  14B0  1BE2               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 11373  14B1  2CF2               	goto	i1l407
 11374                           
 11375                           ;usb_device.c: 1629: {
 11376                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 11377  14B2  0025               	movlb	5	; select bank5
 11378  14B3  1FA2               	btfss	(_outPipes^(0+640)+2),7	;volatile
 11379  14B4  2CC1               	goto	i1l5425
 11380                           
 11381                           ;usb_device.c: 1631: {
 11382                           ;usb_device.c: 1632: controlTransferState = 2;
 11383  14B5  3002               	movlw	2
 11384  14B6  0024               	movlb	4	; select bank4
 11385  14B7  00EC               	movwf	_controlTransferState^(0+512)	;volatile
 11386                           
 11387                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 11388  14B8  0025               	movlb	5	; select bank5
 11389  14B9  0852               	movf	_USBDeferOUTDataStagePackets^(0+640),w	;volatile
 11390  14BA  1D03               	btfss	3,2
 11391  14BB  2CBD               	goto	i1l5421
 11392                           
 11393                           ;usb_device.c: 1644: {
 11394                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 11395  14BC  252F               	fcall	i1_USBCtrlEPAllowDataStage
 11396  14BD                     i1l5421:	
 11397                           
 11398                           ;usb_device.c: 1646: }
 11399                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 11400  14BD  0025               	movlb	5	; select bank5
 11401  14BE  01D4               	clrf	_USBStatusStageEnabledFlag2^(0+640)	;volatile
 11402                           
 11403                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 11404  14BF  01D5               	clrf	_USBStatusStageEnabledFlag1^(0+640)	;volatile
 11405                           
 11406                           ;usb_device.c: 1652: }
 11407  14C0  0008               	return
 11408  14C1                     i1l5425:	
 11409                           
 11410                           ;usb_device.c: 1653: else
 11411                           ;usb_device.c: 1654: {
 11412                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 16;
 11413  14C1  0023               	movlb	3	; select bank3
 11414  14C2  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11415  14C3  3E01               	addlw	1
 11416  14C4  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11417  14C5  3000               	movlw	0
 11418  14C6  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11419  14C7  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11420  14C8  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11421  14C9  0086               	movwf	6
 11422  14CA  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11423  14CB  0087               	movwf	7
 11424  14CC  3010               	movlw	16
 11425  14CD  0081               	movwf	1
 11426                           
 11427                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11428  14CE  3050               	movlw	80
 11429  14CF  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11430  14D0  01F6               	clrf	??i1_USBCtrlEPServiceComplete+1
 11431  14D1  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11432  14D2  0086               	movwf	6
 11433  14D3  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11434  14D4  0087               	movwf	7
 11435  14D5  3142               	addfsr 1,2
 11436  14D6  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11437  14D7  3FC0               	movwi [0]fsr1
 11438  14D8  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11439  14D9  3FC1               	movwi [1]fsr1
 11440                           
 11441                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11442  14DA  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11443  14DB  0086               	movwf	6
 11444  14DC  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11445  14DD  0087               	movwf	7
 11446  14DE  300C               	movlw	12
 11447  14DF  0081               	movwf	1
 11448                           
 11449                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11450  14E0  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11451  14E1  0086               	movwf	6
 11452  14E2  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11453  14E3  0087               	movwf	7
 11454  14E4  1781               	bsf	1,7
 11455                           
 11456                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 11457  14E5  0025               	movlb	5	; select bank5
 11458  14E6  0827               	movf	_pBDTEntryIn^(0+640),w
 11459  14E7  0086               	movwf	6
 11460  14E8  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11461  14E9  0087               	movwf	7
 11462  14EA  3004               	movlw	4
 11463  14EB  0081               	movwf	1
 11464                           
 11465                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11466  14EC  0827               	movf	_pBDTEntryIn^(0+640),w
 11467  14ED  0086               	movwf	6
 11468  14EE  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11469  14EF  0087               	movwf	7
 11470  14F0  1781               	bsf	1,7
 11471  14F1  0008               	return
 11472  14F2                     i1l407:	
 11473                           
 11474                           ;usb_device.c: 1667: else
 11475                           ;usb_device.c: 1668: {
 11476                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 11477  14F2  0020               	movlb	0	; select bank0
 11478  14F3  1FD0               	btfss	80,7	;volatile
 11479  14F4  2D07               	goto	i1l5451
 11480                           
 11481                           ;usb_device.c: 1670: {
 11482                           ;usb_device.c: 1671: controlTransferState = 1;
 11483  14F5  3001               	movlw	1
 11484  14F6  0024               	movlb	4	; select bank4
 11485  14F7  00EC               	movwf	_controlTransferState^(0+512)	;volatile
 11486                           
 11487                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 11488  14F8  0025               	movlb	5	; select bank5
 11489  14F9  0853               	movf	_USBDeferINDataStagePackets^(0+640),w	;volatile
 11490  14FA  1D03               	btfss	3,2
 11491  14FB  2CFE               	goto	i1l5443
 11492                           
 11493                           ;usb_device.c: 1686: {
 11494                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 11495  14FC  252F  3194         	fcall	i1_USBCtrlEPAllowDataStage
 11496  14FE                     i1l5443:	
 11497                           
 11498                           ;usb_device.c: 1688: }
 11499                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 11500  14FE  0025               	movlb	5	; select bank5
 11501  14FF  01D4               	clrf	_USBStatusStageEnabledFlag2^(0+640)	;volatile
 11502                           
 11503                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 11504  1500  01D5               	clrf	_USBStatusStageEnabledFlag1^(0+640)	;volatile
 11505                           
 11506                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 11507  1501  0856               	movf	_USBDeferStatusStagePacket^(0+640),w	;volatile
 11508  1502  1D03               	btfss	3,2
 11509  1503  0008               	return
 11510                           
 11511                           ;usb_device.c: 1713: {
 11512                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 11513  1504  318E  2682         	fcall	i1_USBCtrlEPAllowStatusStage
 11514  1506  0008               	return
 11515  1507                     i1l5451:	
 11516                           
 11517                           ;usb_device.c: 1717: else
 11518                           ;usb_device.c: 1718: {
 11519                           ;usb_device.c: 1729: controlTransferState = 2;
 11520  1507  3002               	movlw	2
 11521  1508  0024               	movlb	4	; select bank4
 11522  1509  00EC               	movwf	_controlTransferState^(0+512)	;volatile
 11523                           
 11524                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 16;
 11525  150A  0023               	movlb	3	; select bank3
 11526  150B  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11527  150C  3E01               	addlw	1
 11528  150D  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11529  150E  3000               	movlw	0
 11530  150F  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11531  1510  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11532  1511  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11533  1512  0086               	movwf	6
 11534  1513  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11535  1514  0087               	movwf	7
 11536  1515  3010               	movlw	16
 11537  1516  0081               	movwf	1
 11538                           
 11539                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11540  1517  3050               	movlw	80
 11541  1518  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11542  1519  01F6               	clrf	??i1_USBCtrlEPServiceComplete+1
 11543  151A  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11544  151B  0086               	movwf	6
 11545  151C  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11546  151D  0087               	movwf	7
 11547  151E  3142               	addfsr 1,2
 11548  151F  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11549  1520  3FC0               	movwi [0]fsr1
 11550  1521  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11551  1522  3FC1               	movwi [1]fsr1
 11552                           
 11553                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11554  1523  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11555  1524  0086               	movwf	6
 11556  1525  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11557  1526  0087               	movwf	7
 11558  1527  3004               	movlw	4
 11559  1528  0081               	movwf	1
 11560                           
 11561                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11562  1529  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11563  152A  0086               	movwf	6
 11564  152B  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11565  152C  0087               	movwf	7
 11566  152D  1781               	bsf	1,7
 11567  152E  2CFE               	goto	i1l5443
 11568  152F                     __end_ofi1_USBCtrlEPServiceComplete:	
 11569                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 11570                           
 11571                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 11572                           
 11573                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 11574                           
 11575  152F                     __ptext48:	
 11576 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 11577 ;; Defined at:
 11578 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;		None
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;		None
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      void 
 11585 ;; Registers used:
 11586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11587 ;; Tracked objects:
 11588 ;;		On entry : 1F/5
 11589 ;;		On exit  : 19/1
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;Total ram usage:        2 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:    1
 11599 ;; This function calls:
 11600 ;;		i1_USBCtrlTrfTxService
 11601 ;; This function is called by:
 11602 ;;		i1_USBCtrlEPServiceComplete
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           
 11607                           ;psect for function i1_USBCtrlEPAllowDataStage
 11608  152F                     i1_USBCtrlEPAllowDataStage:	
 11609                           
 11610                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 11611                           
 11612                           ;incstack = 0
 11613                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11614  152F  01D3               	clrf	_USBDeferINDataStagePackets^(0+640)	;volatile
 11615                           
 11616                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 11617  1530  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+640)	;volatile
 11618                           
 11619                           ;usb_device.c: 1493: if(controlTransferState == 2)
 11620  1531  3002               	movlw	2
 11621  1532  0024               	movlb	4	; select bank4
 11622  1533  066C               	xorwf	_controlTransferState^(0+512),w	;volatile
 11623  1534  1D03               	btfss	3,2
 11624  1535  2D5B               	goto	i1l5065
 11625                           
 11626                           ;usb_device.c: 1494: {
 11627                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 16;
 11628  1536  0023               	movlb	3	; select bank3
 11629  1537  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11630  1538  3E01               	addlw	1
 11631  1539  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11632  153A  3000               	movlw	0
 11633  153B  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11634  153C  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11635  153D  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11636  153E  0086               	movwf	6
 11637  153F  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11638  1540  0087               	movwf	7
 11639  1541  3010               	movlw	16
 11640  1542  0081               	movwf	1
 11641                           
 11642                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11643  1543  3060               	movlw	96
 11644  1544  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11645  1545  01F4               	clrf	??i1_USBCtrlEPAllowDataStage+1
 11646  1546  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11647  1547  0086               	movwf	6
 11648  1548  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11649  1549  0087               	movwf	7
 11650  154A  3142               	addfsr 1,2
 11651  154B  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11652  154C  3FC0               	movwi [0]fsr1
 11653  154D  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11654  154E  3FC1               	movwi [1]fsr1
 11655                           
 11656                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 11657  154F  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11658  1550  0086               	movwf	6
 11659  1551  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11660  1552  0087               	movwf	7
 11661  1553  3048               	movlw	72
 11662  1554  0081               	movwf	1
 11663                           
 11664                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11665  1555  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 11666  1556  0086               	movwf	6
 11667  1557  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 11668  1558  0087               	movwf	7
 11669  1559  1781               	bsf	1,7
 11670                           
 11671                           ;usb_device.c: 1500: }
 11672  155A  0008               	return
 11673  155B                     i1l5065:	
 11674                           
 11675                           ;usb_device.c: 1501: else
 11676                           ;usb_device.c: 1502: {
 11677                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11678  155B  0021               	movlb	1	; select bank1
 11679  155C  0864               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 11680  155D  0020               	movlb	0	; select bank0
 11681  155E  0257               	subwf	87,w	;volatile
 11682  155F  1D03               	skipz
 11683  1560  2D65               	goto	u394_25
 11684  1561  0021               	movlb	1	; select bank1
 11685  1562  0863               	movf	(_inPipes^(0+128)+3),w	;volatile
 11686  1563  0020               	movlb	0	; select bank0
 11687  1564  0256               	subwf	86,w	;volatile
 11688  1565                     u394_25:	
 11689  1565  1803               	skipnc
 11690  1566  2D6E               	goto	i1l5069
 11691                           
 11692                           ;usb_device.c: 1506: {
 11693                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 11694  1567  0857               	movf	87,w	;volatile
 11695  1568  0021               	movlb	1	; select bank1
 11696  1569  00E4               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11697  156A  0020               	movlb	0	; select bank0
 11698  156B  0856               	movf	86,w	;volatile
 11699  156C  0021               	movlb	1	; select bank1
 11700  156D  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
 11701  156E                     i1l5069:	
 11702                           
 11703                           ;usb_device.c: 1508: }
 11704                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 11705  156E  25EC               	fcall	i1_USBCtrlTrfTxService
 11706                           
 11707                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11708  156F  3060               	movlw	96
 11709  1570  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11710  1571  01F4               	clrf	??i1_USBCtrlEPAllowDataStage+1
 11711  1572  0025               	movlb	5	; select bank5
 11712  1573  0827               	movf	_pBDTEntryIn^(0+640),w
 11713  1574  0086               	movwf	6
 11714  1575  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11715  1576  0087               	movwf	7
 11716  1577  3142               	addfsr 1,2
 11717  1578  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11718  1579  3FC0               	movwi [0]fsr1
 11719  157A  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11720  157B  3FC1               	movwi [1]fsr1
 11721                           
 11722                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11723  157C  0827               	movf	_pBDTEntryIn^(0+640),w
 11724  157D  0086               	movwf	6
 11725  157E  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11726  157F  0087               	movwf	7
 11727  1580  3048               	movlw	72
 11728  1581  0081               	movwf	1
 11729                           
 11730                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11731  1582  0827               	movf	_pBDTEntryIn^(0+640),w
 11732  1583  0086               	movwf	6
 11733  1584  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11734  1585  0087               	movwf	7
 11735  1586  1781               	bsf	1,7
 11736  1587  0008               	return
 11737  1588                     __end_ofi1_USBCtrlEPAllowDataStage:	
 11738  1588                     __ptext63:	
 11739 ;; *************** function i1_USBCtrlTrfInHandler *****************
 11740 ;; Defined at:
 11741 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;		None
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11750 ;; Tracked objects:
 11751 ;;		On entry : 1F/1
 11752 ;;		On exit  : 1E/4
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;Total ram usage:        3 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; Hardware stack levels required when called:    1
 11762 ;; This function calls:
 11763 ;;		i1_USBCtrlTrfTxService
 11764 ;; This function is called by:
 11765 ;;		i1_USBCtrlEPService
 11766 ;; This function uses a non-reentrant model
 11767 ;;
 11768                           
 11769                           
 11770                           ;psect for function i1_USBCtrlTrfInHandler
 11771  1588                     i1_USBCtrlTrfInHandler:	
 11772                           
 11773                           ;usb_device.c: 2594: uint8_t lastDTS;
 11774                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 11775                           
 11776                           ;incstack = 0
 11777                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11778  1588  0025               	movlb	5	; select bank5
 11779  1589  0827               	movf	_pBDTEntryIn^(0+640),w
 11780  158A  0086               	movwf	6
 11781  158B  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11782  158C  0087               	movwf	7
 11783  158D  3000               	movlw	0
 11784  158E  1B01               	btfsc	1,6
 11785  158F  3001               	movlw	1
 11786  1590  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 11787                           
 11788                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11789  1591  3004               	movlw	4
 11790  1592  0627               	xorwf	_pBDTEntryIn^(0+640),w
 11791  1593  00A7               	movwf	_pBDTEntryIn^(0+640)
 11792                           
 11793                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 11794  1594  3008               	movlw	8
 11795  1595  0024               	movlb	4	; select bank4
 11796  1596  066D               	xorwf	_USBDeviceState^(0+512),w	;volatile
 11797  1597  1D03               	btfss	3,2
 11798  1598  2DA6               	goto	i1l5689
 11799                           
 11800                           ;usb_device.c: 2605: {
 11801                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 11802  1599  0020               	movlb	0	; select bank0
 11803  159A  0852               	movf	82,w	;volatile
 11804  159B  397F               	andlw	127
 11805  159C  003D               	movlb	29	; select bank29
 11806  159D  0096               	movwf	22	;volatile
 11807                           
 11808                           ;usb_device.c: 2607: if(UADDR != 0u)
 11809  159E  0816               	movf	22,w
 11810  159F  1903               	btfsc	3,2
 11811  15A0  2DA3               	goto	i1l5687
 11812                           
 11813                           ;usb_device.c: 2608: {
 11814                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 11815  15A1  3010               	movlw	16
 11816  15A2  2DA4               	goto	L18
 11817  15A3                     i1l5687:	
 11818                           ;usb_device.c: 2610: }
 11819                           
 11820                           
 11821                           ;usb_device.c: 2611: else
 11822                           ;usb_device.c: 2612: {
 11823                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 11824  15A3  3004               	movlw	4
 11825  15A4                     L18:	
 11826  15A4  0024               	movlb	4	; select bank4
 11827  15A5  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
 11828  15A6                     i1l5689:	
 11829                           
 11830                           ;usb_device.c: 2614: }
 11831                           ;usb_device.c: 2615: }
 11832                           ;usb_device.c: 2618: if(controlTransferState == 1)
 11833  15A6  0B6C               	decfsz	_controlTransferState^(0+512),w	;volatile
 11834  15A7  2DE3               	goto	i1l520
 11835                           
 11836                           ;usb_device.c: 2619: {
 11837                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 11838  15A8  3060               	movlw	96
 11839  15A9  00F3               	movwf	??i1_USBCtrlTrfInHandler
 11840  15AA  01F4               	clrf	??i1_USBCtrlTrfInHandler+1
 11841  15AB  0025               	movlb	5	; select bank5
 11842  15AC  0827               	movf	_pBDTEntryIn^(0+640),w
 11843  15AD  0086               	movwf	6
 11844  15AE  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11845  15AF  0087               	movwf	7
 11846  15B0  3142               	addfsr 1,2
 11847  15B1  0873               	movf	??i1_USBCtrlTrfInHandler,w
 11848  15B2  3FC0               	movwi [0]fsr1
 11849  15B3  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 11850  15B4  3FC1               	movwi [1]fsr1
 11851                           
 11852                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 11853  15B5  25EC  3194         	fcall	i1_USBCtrlTrfTxService
 11854                           
 11855                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 11856  15B7  3002               	movlw	2
 11857  15B8  0025               	movlb	5	; select bank5
 11858  15B9  065D               	xorwf	_shortPacketStatus^(0+640),w	;volatile
 11859  15BA  1D03               	btfss	3,2
 11860  15BB  2DC8               	goto	i1l5699
 11861                           
 11862                           ;usb_device.c: 2628: {
 11863                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 11864  15BC  0827               	movf	_pBDTEntryIn^(0+640),w
 11865  15BD  0086               	movwf	6
 11866  15BE  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11867  15BF  0087               	movwf	7
 11868  15C0  3004               	movlw	4
 11869  15C1  0081               	movwf	1
 11870                           
 11871                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11872  15C2  0827               	movf	_pBDTEntryIn^(0+640),w
 11873  15C3  0086               	movwf	6
 11874  15C4  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11875  15C5  0087               	movwf	7
 11876  15C6  1781               	bsf	1,7
 11877                           
 11878                           ;usb_device.c: 2633: }
 11879  15C7  0008               	return
 11880  15C8                     i1l5699:	
 11881                           
 11882                           ;usb_device.c: 2634: else
 11883                           ;usb_device.c: 2635: {
 11884                           ;usb_device.c: 2636: if(lastDTS == 0)
 11885  15C8  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 11886  15C9  1D03               	btfss	3,2
 11887  15CA  2DD7               	goto	i1l5703
 11888                           
 11889                           ;usb_device.c: 2637: {
 11890                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11891  15CB  0827               	movf	_pBDTEntryIn^(0+640),w
 11892  15CC  0086               	movwf	6
 11893  15CD  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11894  15CE  0087               	movwf	7
 11895  15CF  3048               	movlw	72
 11896  15D0  0081               	movwf	1
 11897                           
 11898                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11899  15D1  0827               	movf	_pBDTEntryIn^(0+640),w
 11900  15D2  0086               	movwf	6
 11901  15D3  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11902  15D4  0087               	movwf	7
 11903  15D5  1781               	bsf	1,7
 11904                           
 11905                           ;usb_device.c: 2640: }
 11906  15D6  0008               	return
 11907  15D7                     i1l5703:	
 11908                           
 11909                           ;usb_device.c: 2641: else
 11910                           ;usb_device.c: 2642: {
 11911                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 11912  15D7  0827               	movf	_pBDTEntryIn^(0+640),w
 11913  15D8  0086               	movwf	6
 11914  15D9  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11915  15DA  0087               	movwf	7
 11916  15DB  3008               	movlw	8
 11917  15DC  0081               	movwf	1
 11918                           
 11919                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11920  15DD  0827               	movf	_pBDTEntryIn^(0+640),w
 11921  15DE  0086               	movwf	6
 11922  15DF  0828               	movf	(_pBDTEntryIn+1)^(0+640),w
 11923  15E0  0087               	movwf	7
 11924  15E1  1781               	bsf	1,7
 11925  15E2  0008               	return
 11926  15E3                     i1l520:	
 11927                           
 11928                           ;usb_device.c: 2648: else
 11929                           ;usb_device.c: 2649: {
 11930                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 11931  15E3  0025               	movlb	5	; select bank5
 11932  15E4  1FA2               	btfss	(_outPipes^(0+640)+2),7	;volatile
 11933  15E5  2DE9               	goto	i1l5707
 11934                           
 11935                           ;usb_device.c: 2656: {
 11936                           ;usb_device.c: 2657: outPipes[0].pFunc();
 11937  15E6  0825               	movf	(low ((_outPipes| (0+512)+5)))^(0+128),w	;volatile
 11938  15E7  0826               	movf	((low ((_outPipes| (0+512)+5))+1))^(0+128),w	;volatile
 11939                           
 11940                           ;usb_device.c: 2658: }
 11941                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 11942  15E8  13A2               	bcf	(_outPipes^(0+640)+2),7	;volatile
 11943  15E9                     i1l5707:	
 11944                           
 11945                           ;usb_device.c: 2660: }
 11946                           ;usb_device.c: 2662: controlTransferState = 0;
 11947  15E9  0024               	movlb	4	; select bank4
 11948  15EA  01EC               	clrf	_controlTransferState^(0+512)	;volatile
 11949  15EB  0008               	return
 11950  15EC                     __end_ofi1_USBCtrlTrfInHandler:	
 11951  15EC                     __ptext64:	
 11952 ;; *************** function i1_USBCtrlTrfTxService *****************
 11953 ;; Defined at:
 11954 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;		None
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11963 ;; Tracked objects:
 11964 ;;		On entry : 1A/0
 11965 ;;		On exit  : 1B/1
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;Total ram usage:        3 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		i1_USBCtrlEPAllowDataStage
 11978 ;;		i1_USBCtrlTrfInHandler
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           
 11983                           ;psect for function i1_USBCtrlTrfTxService
 11984  15EC                     i1_USBCtrlTrfTxService:	
 11985                           
 11986                           ;usb_device.c: 1773: uint8_t byteToSend;
 11987                           ;usb_device.c: 1777: byteToSend = 16;
 11988                           
 11989                           ;incstack = 0
 11990                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 11991  15EC  3010               	movlw	16
 11992  15ED  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 11993                           
 11994                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)16)
 11995  15EE  3000               	movlw	0
 11996  15EF  0021               	movlb	1	; select bank1
 11997  15F0  0264               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 11998  15F1  3010               	movlw	16
 11999  15F2  1903               	skipnz
 12000  15F3  0263               	subwf	(_inPipes^(0+128)+3),w	;volatile
 12001  15F4  1803               	skipnc
 12002  15F5  2E02               	goto	i1l420
 12003                           
 12004                           ;usb_device.c: 1779: {
 12005                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 12006  15F6  0863               	movf	(_inPipes^(0+128)+3),w	;volatile
 12007  15F7  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 12008                           
 12009                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 12010  15F8  0025               	movlb	5	; select bank5
 12011  15F9  085D               	movf	_shortPacketStatus^(0+640),w	;volatile
 12012  15FA  1D03               	btfss	3,2
 12013  15FB  2DFE               	goto	i1l4725
 12014                           
 12015                           ;usb_device.c: 1788: {
 12016                           ;usb_device.c: 1789: shortPacketStatus = 1;
 12017  15FC  3001               	movlw	1
 12018  15FD  2E01               	goto	L19
 12019  15FE                     i1l4725:	
 12020                           ;usb_device.c: 1790: }
 12021                           
 12022                           
 12023                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 12024  15FE  0B5D               	decfsz	_shortPacketStatus^(0+640),w	;volatile
 12025  15FF  2E02               	goto	i1l420
 12026                           
 12027                           ;usb_device.c: 1792: {
 12028                           ;usb_device.c: 1793: shortPacketStatus = 2;
 12029  1600  3002               	movlw	2
 12030  1601                     L19:	
 12031  1601  00DD               	movwf	_shortPacketStatus^(0+640)	;volatile
 12032  1602                     i1l420:	
 12033                           
 12034                           ;usb_device.c: 1794: }
 12035                           ;usb_device.c: 1795: }
 12036                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 12037  1602  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 12038  1603  0021               	movlb	1	; select bank1
 12039  1604  02E3               	subwf	(_inPipes^(0+128)+3),f	;volatile
 12040  1605  1C03               	skipc
 12041  1606  03E4               	decf	((_inPipes+1)^(0+128)+3),f	;volatile
 12042                           
 12043                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 12044  1607  0025               	movlb	5	; select bank5
 12045  1608  0827               	movf	_pBDTEntryIn^(0+640),w
 12046  1609  3E01               	addlw	1
 12047  160A  00F0               	movwf	??i1_USBCtrlTrfTxService
 12048  160B  3000               	movlw	0
 12049  160C  3D28               	addwfc	(_pBDTEntryIn+1)^(0+640),w
 12050  160D  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 12051  160E  0870               	movf	??i1_USBCtrlTrfTxService,w
 12052  160F  0086               	movwf	6
 12053  1610  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 12054  1611  0087               	movwf	7
 12055  1612  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 12056  1613  0081               	movwf	1
 12057                           
 12058                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 12059  1614  3060               	movlw	96
 12060  1615  00DC               	movwf	_pDst^(0+640)
 12061                           
 12062                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12063  1616  0021               	movlb	1	; select bank1
 12064  1617  1C62               	btfss	(_inPipes^(0+128)+2),0	;volatile
 12065  1618  2E2B               	goto	i1l4745
 12066  1619  2E40               	goto	i1l4755
 12067  161A                     i1l4737:	
 12068                           
 12069                           ;usb_device.c: 1812: {
 12070                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 12071  161A  0025               	movlb	5	; select bank5
 12072  161B  085C               	movf	_pDst^(0+640),w
 12073  161C  0086               	movwf	6
 12074  161D  0187               	clrf	7
 12075  161E  0021               	movlb	1	; select bank1
 12076  161F  0860               	movf	_inPipes^(0+128),w	;volatile
 12077  1620  0084               	movwf	4
 12078  1621  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
 12079  1622  0085               	movwf	5
 12080  1623  0800               	movf	0,w	;code access
 12081  1624  0081               	movwf	1
 12082  1625  0AE0               	incf	_inPipes^(0+128),f	;volatile
 12083  1626  1903               	skipnz
 12084  1627  0AE1               	incf	(_inPipes+1)^(0+128),f	;volatile
 12085  1628  0025               	movlb	5	; select bank5
 12086  1629  0ADC               	incf	_pDst^(0+640),f
 12087                           
 12088                           ;usb_device.c: 1814: byteToSend--;
 12089  162A  03F2               	decf	i1USBCtrlTrfTxService@byteToSend,f
 12090  162B                     i1l4745:	
 12091  162B  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 12092  162C  1903               	btfsc	3,2
 12093  162D  0008               	return
 12094  162E  2E1A               	goto	i1l4737
 12095  162F                     i1l4747:	
 12096                           
 12097                           ;usb_device.c: 1820: {
 12098                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 12099  162F  0025               	movlb	5	; select bank5
 12100  1630  085C               	movf	_pDst^(0+640),w
 12101  1631  0086               	movwf	6
 12102  1632  0187               	clrf	7
 12103  1633  0021               	movlb	1	; select bank1
 12104  1634  0860               	movf	_inPipes^(0+128),w	;volatile
 12105  1635  0084               	movwf	4
 12106  1636  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
 12107  1637  0085               	movwf	5
 12108  1638  0800               	movf	0,w	;code access
 12109  1639  0081               	movwf	1
 12110  163A  0AE0               	incf	_inPipes^(0+128),f	;volatile
 12111  163B  1903               	skipnz
 12112  163C  0AE1               	incf	(_inPipes+1)^(0+128),f	;volatile
 12113  163D  0025               	movlb	5	; select bank5
 12114  163E  0ADC               	incf	_pDst^(0+640),f
 12115                           
 12116                           ;usb_device.c: 1822: byteToSend--;
 12117  163F  03F2               	decf	i1USBCtrlTrfTxService@byteToSend,f
 12118  1640                     i1l4755:	
 12119  1640  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 12120  1641  1903               	btfsc	3,2
 12121  1642  0008               	return
 12122  1643  2E2F               	goto	i1l4747
 12123  1644                     __end_ofi1_USBCtrlTrfTxService:	
 12124  007E                     btemp	set	126	;btemp
 12125  007E                     int$flags	set	126
 12126  007E                     wtemp0	set	126
 12127                           
 12128                           	psect	swtext4
 12129  081A                     __pswtext4:	
 12130  081A                     i1S8547:	
 12131  081A  318C  2C6C         	ljmp	i1l5527
 12132  081C  318C  2C6F         	ljmp	i1l5529
 12133  081E  318C  2C9B         	ljmp	i1l532
 12134  0820  318C  2C6F         	ljmp	i1l5529
 12135  0822  318C  2C9B         	ljmp	i1l532
 12136  0824  318C  2C56         	ljmp	i1l534
 12137  0826  318C  2C5C         	ljmp	i1l5515
 12138  0828  318C  2C87         	ljmp	i1l5541
 12139  082A  318C  2C62         	ljmp	i1l5519
 12140  082C  318C  2C5F         	ljmp	i1l5517
 12141  082E  318C  2C71         	ljmp	i1l5531
 12142  0830  318C  2C7C         	ljmp	i1l543
 12143  0832  318C  2C9B         	ljmp	i1l532
 12144                           
 12145                           	psect	text50
 12146  1D62                     __ptext50:	
 12147 ;; *************** function i1_USBStdSetCfgHandler *****************
 12148 ;; Defined at:
 12149 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;		None
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;  USBStdSetCfg    2   10[COMMON] PTR unsigned char 
 12154 ;;		 -> UEP1(1), 
 12155 ;;  USBStdSetCfg    1   13[COMMON] unsigned char 
 12156 ;;  USBStdSetCfg    1   12[COMMON] unsigned char 
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  1    wreg      void 
 12159 ;; Registers used:
 12160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12161 ;; Tracked objects:
 12162 ;;		On entry : 1A/0
 12163 ;;		On exit  : 1F/4
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12167 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;Total ram usage:        4 bytes
 12171 ;; Hardware stack levels used:    1
 12172 ;; Hardware stack levels required when called:    4
 12173 ;; This function calls:
 12174 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12175 ;;		i1_memset
 12176 ;; This function is called by:
 12177 ;;		i1_USBCheckStdRequest
 12178 ;; This function uses a non-reentrant model
 12179 ;;
 12180                           
 12181                           
 12182                           ;psect for function i1_USBStdSetCfgHandler
 12183  1D62                     i1_USBStdSetCfgHandler:	
 12184                           
 12185                           ;usb_device.c: 1970: uint8_t i;
 12186                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 12187                           
 12188                           ;incstack = 0
 12189 ;; hardware stack exceeded
 12190                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12191  1D62  0021               	movlb	1	; select bank1
 12192  1D63  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12193                           
 12194                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 12195  1D64  300E               	movlw	14
 12196  1D65  00FB               	movwf	i1USBStdSetCfgHandler@p+1
 12197  1D66  3099               	movlw	153
 12198  1D67  00FA               	movwf	i1USBStdSetCfgHandler@p
 12199  1D68  01FC               	clrf	i1USBStdSetCfgHandler@i_2033
 12200  1D69                     i1l5085:	
 12201  1D69  087A               	movf	i1USBStdSetCfgHandler@p,w
 12202  1D6A  0086               	movwf	6
 12203  1D6B  087B               	movf	i1USBStdSetCfgHandler@p+1,w
 12204  1D6C  0087               	movwf	7
 12205  1D6D  0181               	clrf	1
 12206  1D6E  0AFA               	incf	i1USBStdSetCfgHandler@p,f
 12207  1D6F  1903               	skipnz
 12208  1D70  0AFB               	incf	i1USBStdSetCfgHandler@p+1,f
 12209  1D71  3002               	movlw	2
 12210  1D72  0AFC               	incf	i1USBStdSetCfgHandler@i_2033,f
 12211  1D73  027C               	subwf	i1USBStdSetCfgHandler@i_2033,w
 12212  1D74  1C03               	skipc
 12213  1D75  2D69               	goto	i1l5085
 12214                           
 12215                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 12216  1D76  3020               	movlw	32
 12217  1D77  00F0               	movwf	i1memset@p1
 12218  1D78  3030               	movlw	48
 12219  1D79  01F1               	clrf	i1memset@p1+1
 12220  1D7A  01F2               	clrf	i1memset@c
 12221  1D7B  01F3               	clrf	i1memset@c+1
 12222  1D7C  00F4               	movwf	i1memset@n
 12223  1D7D  01F5               	clrf	i1memset@n+1
 12224  1D7E  25C7  319D         	fcall	i1_memset
 12225                           
 12226                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 12227  1D80  003D               	movlb	29	; select bank29
 12228  1D81  170E               	bsf	14,6	;volatile
 12229                           
 12230                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 12231  1D82  01FD               	clrf	i1USBStdSetCfgHandler@i
 12232  1D83                     i1l5103:	
 12233                           
 12234                           ;usb_device.c: 1988: {
 12235                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 12236  1D83  087D               	movf	i1USBStdSetCfgHandler@i,w
 12237  1D84  3EB6               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 12238  1D85  0086               	movwf	6
 12239  1D86  3002               	movlw	2	; select bank5/6
 12240  1D87  0087               	movwf	7
 12241  1D88  0181               	clrf	1
 12242                           
 12243                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 12244  1D89  087D               	movf	i1USBStdSetCfgHandler@i,w
 12245  1D8A  3EB3               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 12246  1D8B  0086               	movwf	6
 12247  1D8C  3003               	movlw	3
 12248  1D8D  0181               	clrf	1
 12249  1D8E  0AFD               	incf	i1USBStdSetCfgHandler@i,f
 12250  1D8F  027D               	subwf	i1USBStdSetCfgHandler@i,w
 12251  1D90  1C03               	skipc
 12252  1D91  2D83               	goto	i1l5103
 12253                           
 12254                           ;usb_device.c: 1991: }
 12255                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 12256  1D92  30E6               	movlw	low _USBAlternateInterface
 12257  1D93  00F0               	movwf	i1memset@p1
 12258  1D94  3002               	movlw	high _USBAlternateInterface
 12259  1D95  00F1               	movwf	i1memset@p1+1
 12260  1D96  3002               	movlw	2
 12261  1D97  01F2               	clrf	i1memset@c
 12262  1D98  01F3               	clrf	i1memset@c+1
 12263  1D99  00F4               	movwf	i1memset@n
 12264  1D9A  01F5               	clrf	i1memset@n+1
 12265  1D9B  25C7  319D         	fcall	i1_memset
 12266                           
 12267                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 12268  1D9D  003D               	movlb	29	; select bank29
 12269  1D9E  130E               	bcf	14,6	;volatile
 12270                           
 12271                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12272  1D9F  3028               	movlw	40
 12273  1DA0  0025               	movlb	5	; select bank5
 12274  1DA1  00A7               	movwf	_pBDTEntryIn^(0+640)
 12275  1DA2  3020               	movlw	32
 12276  1DA3  01A8               	clrf	(_pBDTEntryIn+1)^(0+640)
 12277                           
 12278                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 12279  1DA4  0023               	movlb	3	; select bank3
 12280  1DA5  00EE               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 12281                           
 12282                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12283  1DA6  00EC               	movwf	_pBDTEntryEP0OutNext^(0+384)
 12284  1DA7  39FF               	andlw	255
 12285  1DA8  1D03               	skipz
 12286  1DA9  3000               	movlw	0
 12287  1DAA  00ED               	movwf	(_pBDTEntryEP0OutNext+1)^(0+384)
 12288                           
 12289                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 12290  1DAB  0020               	movlb	0	; select bank0
 12291  1DAC  0852               	movf	82,w	;volatile
 12292  1DAD  0025               	movlb	5	; select bank5
 12293  1DAE  00E8               	movwf	_USBActiveConfiguration^(0+640)	;volatile
 12294                           
 12295                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 12296  1DAF  0868               	movf	_USBActiveConfiguration^(0+640),w	;volatile
 12297  1DB0  1D03               	btfss	3,2
 12298  1DB1  2DB6               	goto	i1l5125
 12299                           
 12300                           ;usb_device.c: 2010: {
 12301                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 12302  1DB2  3010               	movlw	16
 12303  1DB3  0024               	movlb	4	; select bank4
 12304  1DB4  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
 12305                           
 12306                           ;usb_device.c: 2013: }
 12307  1DB5  0008               	return
 12308  1DB6                     i1l5125:	
 12309                           
 12310                           ;usb_device.c: 2014: else
 12311                           ;usb_device.c: 2015: {
 12312                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 12313  1DB6  0020               	movlb	0	; select bank0
 12314  1DB7  30E8               	movlw	low _USBActiveConfiguration
 12315  1DB8  01D8               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12316  1DB9  0AD8               	incf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,f
 12317  1DBA  01D9               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12318  1DBB  00DA               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12319  1DBC  3002               	movlw	high _USBActiveConfiguration
 12320  1DBD  00DB               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12321  1DBE  01DC               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12322  1DBF  0ADC               	incf	i1USER_USB_CALLBACK_EVENT_HANDLER@size,f
 12323  1DC0  01DD               	clrf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12324  1DC1  318E  2660         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12325                           
 12326                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 12327  1DC3  3020               	movlw	32
 12328  1DC4  0024               	movlb	4	; select bank4
 12329  1DC5  00ED               	movwf	_USBDeviceState^(0+512)	;volatile
 12330  1DC6  0008               	return
 12331  1DC7                     __end_ofi1_USBStdSetCfgHandler:	
 12332  1DC7                     __ptext51:	
 12333 ;; *************** function i1_memset *****************
 12334 ;; Defined at:
 12335 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 12336 ;; Parameters:    Size  Location     Type
 12337 ;;  p1              2    0[COMMON] PTR void 
 12338 ;;		 -> USBAlternateInterface(2), BDT(48), 
 12339 ;;  c               2    2[COMMON] int 
 12340 ;;  n               2    4[COMMON] unsigned int 
 12341 ;; Auto vars:     Size  Location     Type
 12342 ;;  memset          2    6[COMMON] PTR unsigned char 
 12343 ;;		 -> USBAlternateInterface(2), BDT(48), 
 12344 ;; Return value:  Size  Location     Type
 12345 ;;                  1    wreg      PTR void 
 12346 ;; Registers used:
 12347 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12348 ;; Tracked objects:
 12349 ;;		On entry : 2/1
 12350 ;;		On exit  : 2/0
 12351 ;;		Unchanged: 2/0
 12352 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12353 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12356 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12357 ;;Total ram usage:        8 bytes
 12358 ;; Hardware stack levels used:    1
 12359 ;; This function calls:
 12360 ;;		Nothing
 12361 ;; This function is called by:
 12362 ;;		i1_USBStdSetCfgHandler
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           
 12367                           ;psect for function i1_memset
 12368  1DC7                     i1_memset:	
 12369                           
 12370                           ;incstack = 0
 12371                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12372  1DC7  0871               	movf	i1memset@p1+1,w
 12373  1DC8  00F7               	movwf	i1memset@p+1
 12374  1DC9  0870               	movf	i1memset@p1,w
 12375  1DCA  00F6               	movwf	i1memset@p
 12376  1DCB                     i1l4763:	
 12377  1DCB  3001               	movlw	1
 12378  1DCC  02F4               	subwf	i1memset@n,f
 12379  1DCD  3000               	movlw	0
 12380  1DCE  3BF5               	subwfb	i1memset@n+1,f
 12381  1DCF  0F74               	incfsz	i1memset@n,w
 12382  1DD0  2DD4               	goto	i1l4759
 12383  1DD1  0A75               	incf	i1memset@n+1,w
 12384  1DD2  1903               	btfsc	3,2
 12385  1DD3  0008               	return
 12386  1DD4                     i1l4759:	
 12387  1DD4  0876               	movf	i1memset@p,w
 12388  1DD5  0086               	movwf	6
 12389  1DD6  0877               	movf	i1memset@p+1,w
 12390  1DD7  0087               	movwf	7
 12391  1DD8  0872               	movf	i1memset@c,w
 12392  1DD9  0081               	movwf	1
 12393  1DDA  0AF6               	incf	i1memset@p,f
 12394  1DDB  1903               	skipnz
 12395  1DDC  0AF7               	incf	i1memset@p+1,f
 12396  1DDD  2DCB               	goto	i1l4763
 12397  1DDE                     __end_ofi1_memset:	
 12398                           
 12399                           	psect	text52
 12400  1A9B                     __ptext52:	
 12401 ;; *************** function i1_USBStdGetStatusHandler *****************
 12402 ;; Defined at:
 12403 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;  USBStdGetSta    2    0[COMMON] PTR struct __BDT
 12408 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12409 ;; Return value:  Size  Location     Type
 12410 ;;                  1    wreg      void 
 12411 ;; Registers used:
 12412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12413 ;; Tracked objects:
 12414 ;;		On entry : 1A/0
 12415 ;;		On exit  : 1F/1
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;Total ram usage:        2 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		i1_USBCheckStdRequest
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           
 12432                           ;psect for function i1_USBStdGetStatusHandler
 12433  1A9B                     i1_USBStdGetStatusHandler:	
 12434                           
 12435                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 12436                           
 12437                           ;incstack = 0
 12438                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 12439  1A9B  0020               	movlb	0	; select bank0
 12440  1A9C  01E0               	clrf	96	;volatile
 12441                           
 12442                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 12443  1A9D  01E1               	clrf	97	;volatile
 12444                           
 12445                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 12446  1A9E  2AD4               	goto	i1l5179
 12447  1A9F                     i1l472:	
 12448                           ;usb_device.c: 2135: {
 12449                           ;usb_device.c: 2136: case (0x00):
 12450                           
 12451                           
 12452                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 12453  1A9F  0021               	movlb	1	; select bank1
 12454  1AA0  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12455                           
 12456                           ;usb_device.c: 2145: }
 12457                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 12458                           
 12459                           ;usb_device.c: 2142: if(0 == 1)
 12460  1AA1  0025               	movlb	5	; select bank5
 12461  1AA2  0B5B               	decfsz	_RemoteWakeup^(0+640),w	;volatile
 12462  1AA3  2ADF               	goto	i1l475
 12463                           
 12464                           ;usb_device.c: 2148: {
 12465                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 12466  1AA4  0020               	movlb	0	; select bank0
 12467  1AA5  14E0               	bsf	96,1	;volatile
 12468  1AA6  2ADF               	goto	i1l475
 12469  1AA7                     i1l476:	
 12470                           ;usb_device.c: 2152: case (0x01):
 12471                           
 12472                           
 12473                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 12474  1AA7  0021               	movlb	1	; select bank1
 12475  1AA8  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12476                           
 12477                           ;usb_device.c: 2154: break;
 12478  1AA9  2ADF               	goto	i1l475
 12479  1AAA                     i1l477:	
 12480                           ;usb_device.c: 2155: case (0x02):
 12481                           
 12482                           
 12483                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 12484  1AAA  0021               	movlb	1	; select bank1
 12485  1AAB  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12486                           
 12487                           ;usb_device.c: 2160: {
 12488                           ;usb_device.c: 2161: BDT_ENTRY *p;
 12489                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 12490  1AAC  0020               	movlb	0	; select bank0
 12491  1AAD  1BD4               	btfsc	84,7	;volatile
 12492  1AAE  2ABA               	goto	i1l5169
 12493                           
 12494                           ;usb_device.c: 2164: {
 12495                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12496  1AAF  0854               	movf	84,w	;volatile
 12497  1AB0  390F               	andlw	15
 12498  1AB1  0709               	addwf	9,w
 12499  1AB2  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 12500  1AB3  0086               	movwf	6
 12501  1AB4  3002               	movlw	2	; select bank5/6
 12502  1AB5  0087               	movwf	7
 12503  1AB6  3F40               	moviw [0]fsr1
 12504  1AB7  00F0               	movwf	i1USBStdGetStatusHandler@p
 12505  1AB8  3F41               	moviw [1]fsr1
 12506  1AB9  2AC4               	goto	L12
 12507  1ABA                     i1l5169:	
 12508                           ;usb_device.c: 2166: }
 12509                           
 12510                           
 12511                           ;usb_device.c: 2167: else
 12512                           ;usb_device.c: 2168: {
 12513                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12514  1ABA  0854               	movf	84,w	;volatile
 12515  1ABB  390F               	andlw	15
 12516  1ABC  0709               	addwf	9,w
 12517  1ABD  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
 12518  1ABE  0086               	movwf	6
 12519  1ABF  3002               	movlw	2	; select bank5/6
 12520  1AC0  0087               	movwf	7
 12521  1AC1  3F40               	moviw [0]fsr1
 12522  1AC2  00F0               	movwf	i1USBStdGetStatusHandler@p
 12523  1AC3  3F41               	moviw [1]fsr1
 12524  1AC4                     L12:	
 12525  1AC4  00F1               	movwf	i1USBStdGetStatusHandler@p+1
 12526                           
 12527                           ;usb_device.c: 2170: }
 12528                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 12529  1AC5  0870               	movf	i1USBStdGetStatusHandler@p,w
 12530  1AC6  0086               	movwf	6
 12531  1AC7  0871               	movf	i1USBStdGetStatusHandler@p+1,w
 12532  1AC8  0087               	movwf	7
 12533  1AC9  1F81               	btfss	1,7
 12534  1ACA  2ADF               	goto	i1l475
 12535  1ACB  0870               	movf	i1USBStdGetStatusHandler@p,w
 12536  1ACC  0086               	movwf	6
 12537  1ACD  0871               	movf	i1USBStdGetStatusHandler@p+1,w
 12538  1ACE  0087               	movwf	7
 12539  1ACF  1D01               	btfss	1,2
 12540  1AD0  2ADF               	goto	i1l475
 12541                           
 12542                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 12543  1AD1  3001               	movlw	1
 12544  1AD2  00E0               	movwf	96	;volatile
 12545  1AD3  2ADF               	goto	i1l475
 12546  1AD4                     i1l5179:	
 12547  1AD4  0850               	movf	80,w	;volatile
 12548  1AD5  391F               	andlw	31
 12549                           
 12550                           ; Switch size 1, requested type "speed"
 12551                           ; Number of cases is 3, Range of values is 0 to 2
 12552                           ; switch strategies available:
 12553                           ; Name         Instructions Cycles
 12554                           ; simple_byte           10     6 (average)
 12555                           ; direct_byte           12     6 (fixed)
 12556                           ; jumptable            260     6 (fixed)
 12557                           ;	Chosen strategy is simple_byte
 12558  1AD6  1903               	skipnz
 12559  1AD7  2A9F               	goto	i1l472
 12560  1AD8  3A01               	xorlw	1	; case 1
 12561  1AD9  1903               	skipnz
 12562  1ADA  2AA7               	goto	i1l476
 12563  1ADB  3A03               	xorlw	3	; case 2
 12564  1ADC  1903               	skipnz
 12565  1ADD  2AAA               	goto	i1l477
 12566  1ADE  2ADF               	goto	i1l475
 12567  1ADF                     i1l475:	
 12568                           
 12569                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 12570  1ADF  0021               	movlb	1	; select bank1
 12571  1AE0  1FE2               	btfss	(_inPipes^(0+128)+2),7	;volatile
 12572  1AE1  0008               	return
 12573                           
 12574                           ;usb_device.c: 2179: {
 12575                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 12576  1AE2  3060               	movlw	96
 12577  1AE3  00E0               	movwf	_inPipes^(0+128)	;volatile
 12578  1AE4  01E1               	clrf	(_inPipes+1)^(0+128)	;volatile
 12579                           
 12580                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12581  1AE5  1462               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12582                           
 12583                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 12584  1AE6  3002               	movlw	2
 12585  1AE7  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
 12586  1AE8  0008               	return
 12587  1AE9                     __end_ofi1_USBStdGetStatusHandler:	
 12588                           
 12589                           	psect	text53
 12590  1C01                     __ptext53:	
 12591 ;; *************** function i1_USBStdGetDscHandler *****************
 12592 ;; Defined at:
 12593 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;		None
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;		None
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  1    wreg      void 
 12600 ;; Registers used:
 12601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12602 ;; Tracked objects:
 12603 ;;		On entry : 1A/0
 12604 ;;		On exit  : 1E/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;Total ram usage:        3 bytes
 12612 ;; Hardware stack levels used:    1
 12613 ;; This function calls:
 12614 ;;		Nothing
 12615 ;; This function is called by:
 12616 ;;		i1_USBCheckStdRequest
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620                           
 12621                           ;psect for function i1_USBStdGetDscHandler
 12622  1C01                     i1_USBStdGetDscHandler:	
 12623                           
 12624                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 12625                           
 12626                           ;incstack = 0
 12627                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 12628  1C01  3080               	movlw	128
 12629  1C02  0020               	movlb	0	; select bank0
 12630  1C03  0650               	xorwf	80,w	;volatile
 12631  1C04  1D03               	btfss	3,2
 12632  1C05  0008               	return
 12633                           
 12634                           ;usb_device.c: 2046: {
 12635                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 12636  1C06  30C0               	movlw	192
 12637  1C07  0021               	movlb	1	; select bank1
 12638  1C08  00E2               	movwf	(_inPipes^(0+128)+2)	;volatile
 12639                           
 12640                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 12641  1C09  2C64               	goto	i1l5157
 12642  1C0A                     i1l5133:	
 12643                           
 12644                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 12645  1C0A  30F7               	movlw	low (_device_dsc| (0+32768))
 12646  1C0B  0021               	movlb	1	; select bank1
 12647  1C0C  00E0               	movwf	_inPipes^(0+128)	;volatile
 12648  1C0D  3098               	movlw	high (_device_dsc| (0+32768))
 12649  1C0E  00E1               	movwf	(_inPipes^(0+128)+1)	;volatile
 12650                           
 12651                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 12652  1C0F  3012               	movlw	18
 12653  1C10  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
 12654  1C11  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 12655                           
 12656                           ;usb_device.c: 2058: break;
 12657  1C12  0008               	return
 12658  1C13                     i1l5135:	
 12659                           
 12660                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 12661  1C13  0852               	movf	82,w	;volatile
 12662  1C14  1D03               	btfss	3,2
 12663  1C15  2C3F               	goto	i1l5143
 12664                           
 12665                           ;usb_device.c: 2064: {
 12666                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 12667  1C16  0852               	movf	82,w	;volatile
 12668  1C17  00F0               	movwf	??i1_USBStdGetDscHandler
 12669  1C18  3013               	movlw	low (_USB_CD_Ptr| (0+32768))
 12670  1C19  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12671  1C1A  35F0               	lslf	??i1_USBStdGetDscHandler,f
 12672  1C1B  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 12673  1C1C  0770               	addwf	??i1_USBStdGetDscHandler,w
 12674  1C1D  0084               	movwf	4
 12675  1C1E  3099               	movlw	high (_USB_CD_Ptr| (0+32768))
 12676  1C1F  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 12677  1C20  0085               	movwf	5
 12678  1C21  3F00               	moviw [0]fsr0
 12679  1C22  0021               	movlb	1	; select bank1
 12680  1C23  00E0               	movwf	_inPipes^(0+128)	;volatile
 12681  1C24  3F01               	moviw [1]fsr0
 12682  1C25  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
 12683                           
 12684                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 12685  1C26  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
 12686  1C27  00F1               	movwf	??i1_USBStdGetDscHandler+1
 12687  1C28  0860               	movf	_inPipes^(0+128),w	;volatile
 12688  1C29  00F0               	movwf	??i1_USBStdGetDscHandler
 12689  1C2A  3E02               	addlw	2
 12690  1C2B  0084               	movwf	4
 12691  1C2C  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12692  1C2D  1803               	skipnc
 12693  1C2E  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 12694  1C2F  0085               	movwf	5
 12695  1C30  0800               	movf	0,w	;code access
 12696  1C31  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
 12697                           
 12698                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 12699  1C32  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
 12700  1C33  00F1               	movwf	??i1_USBStdGetDscHandler+1
 12701  1C34  0860               	movf	_inPipes^(0+128),w	;volatile
 12702  1C35  00F0               	movwf	??i1_USBStdGetDscHandler
 12703  1C36  3E03               	addlw	3
 12704  1C37  0084               	movwf	4
 12705  1C38  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12706  1C39  1803               	skipnc
 12707  1C3A  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 12708  1C3B  0085               	movwf	5
 12709  1C3C  0800               	movf	0,w	;code access
 12710  1C3D  00E4               	movwf	(_inPipes^(0+128)+4)	;volatile
 12711                           
 12712                           ;usb_device.c: 2076: }
 12713  1C3E  0008               	return
 12714  1C3F                     i1l5143:	
 12715                           
 12716                           ;usb_device.c: 2077: else
 12717                           ;usb_device.c: 2078: {
 12718                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 12719  1C3F  0021               	movlb	1	; select bank1
 12720  1C40  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
 12721  1C41  0008               	return
 12722  1C42                     i1l5145:	
 12723                           
 12724                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 12725  1C42  3003               	movlw	3
 12726  1C43  0252               	subwf	82,w	;volatile
 12727  1C44  1803               	skipnc
 12728  1C45  2C5E               	goto	i1l5151
 12729                           
 12730                           ;usb_device.c: 2087: {
 12731                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 12732  1C46  0852               	movf	82,w	;volatile
 12733  1C47  00F0               	movwf	??i1_USBStdGetDscHandler
 12734  1C48  3009               	movlw	low (_USB_SD_Ptr| (0+32768))
 12735  1C49  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12736  1C4A  35F0               	lslf	??i1_USBStdGetDscHandler,f
 12737  1C4B  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 12738  1C4C  0770               	addwf	??i1_USBStdGetDscHandler,w
 12739  1C4D  0084               	movwf	4
 12740  1C4E  3099               	movlw	high (_USB_SD_Ptr| (0+32768))
 12741  1C4F  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 12742  1C50  0085               	movwf	5
 12743  1C51  3F00               	moviw [0]fsr0
 12744  1C52  0021               	movlb	1	; select bank1
 12745  1C53  00E0               	movwf	_inPipes^(0+128)	;volatile
 12746  1C54  3F01               	moviw [1]fsr0
 12747  1C55  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
 12748                           
 12749                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 12750  1C56  0860               	movf	_inPipes^(0+128),w	;volatile
 12751  1C57  0084               	movwf	4
 12752  1C58  0861               	movf	(_inPipes+1)^(0+128),w	;volatile
 12753  1C59  0085               	movwf	5
 12754  1C5A  0800               	movf	0,w	;code access
 12755  1C5B  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
 12756  1C5C  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 12757                           
 12758                           ;usb_device.c: 2092: }
 12759  1C5D  0008               	return
 12760  1C5E                     i1l5151:	
 12761                           
 12762                           ;usb_device.c: 2102: else
 12763                           ;usb_device.c: 2103: {
 12764                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 12765  1C5E  0021               	movlb	1	; select bank1
 12766  1C5F  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
 12767  1C60  0008               	return
 12768  1C61                     i1l5153:	
 12769                           
 12770                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 12771  1C61  0021               	movlb	1	; select bank1
 12772  1C62  01E2               	clrf	(_inPipes^(0+128)+2)	;volatile
 12773                           
 12774                           ;usb_device.c: 2109: break;
 12775  1C63  0008               	return
 12776  1C64                     i1l5157:	
 12777  1C64  0020               	movlb	0	; select bank0
 12778  1C65  0853               	movf	83,w	;volatile
 12779                           
 12780                           ; Switch size 1, requested type "speed"
 12781                           ; Number of cases is 3, Range of values is 1 to 3
 12782                           ; switch strategies available:
 12783                           ; Name         Instructions Cycles
 12784                           ; simple_byte           10     6 (average)
 12785                           ; direct_byte           15     9 (fixed)
 12786                           ; jumptable            263     9 (fixed)
 12787                           ;	Chosen strategy is simple_byte
 12788  1C66  3A01               	xorlw	1	; case 1
 12789  1C67  1903               	skipnz
 12790  1C68  2C0A               	goto	i1l5133
 12791  1C69  3A03               	xorlw	3	; case 2
 12792  1C6A  1903               	skipnz
 12793  1C6B  2C13               	goto	i1l5135
 12794  1C6C  3A01               	xorlw	1	; case 3
 12795  1C6D  1903               	skipnz
 12796  1C6E  2C42               	goto	i1l5145
 12797  1C6F  2C61               	goto	i1l5153
 12798  1C70  0008               	return
 12799  1C71                     __end_ofi1_USBStdGetDscHandler:	
 12800                           
 12801                           	psect	swtext5
 12802  1000                     __pswtext5:	
 12803  1000                     i1S8553:	
 12804  1000  318E  2E61         	ljmp	i1l4691
 12805  1002  318E  2E81         	ljmp	i1l184
 12806  1004  318E  2E64         	ljmp	i1l4693
 12807  1006  318E  2E81         	ljmp	i1l184
 12808  1008  318E  2E81         	ljmp	i1l184
 12809  100A  318E  2E81         	ljmp	i1l184
 12810  100C  318E  2E81         	ljmp	i1l184
 12811  100E  318E  2E81         	ljmp	i1l184
 12812  1010  318E  2E81         	ljmp	i1l184
 12813  1012  318E  2E81         	ljmp	i1l184
 12814  1014  318E  2E81         	ljmp	i1l184
 12815  1016  318E  2E81         	ljmp	i1l184
 12816  1018  318E  2E81         	ljmp	i1l184
 12817  101A  318E  2E81         	ljmp	i1l184
 12818  101C  318E  2E81         	ljmp	i1l184
 12819  101E  318E  2E81         	ljmp	i1l184
 12820  1020  318E  2E81         	ljmp	i1l184
 12821  1022  318E  2E81         	ljmp	i1l184
 12822  1024  318E  2E81         	ljmp	i1l184
 12823  1026  318E  2E81         	ljmp	i1l184
 12824  1028  318E  2E81         	ljmp	i1l184
 12825  102A  318E  2E81         	ljmp	i1l184
 12826  102C  318E  2E81         	ljmp	i1l184
 12827  102E  318E  2E81         	ljmp	i1l184
 12828  1030  318E  2E81         	ljmp	i1l184
 12829  1032  318E  2E81         	ljmp	i1l184
 12830  1034  318E  2E81         	ljmp	i1l184
 12831  1036  318E  2E81         	ljmp	i1l184
 12832  1038  318E  2E81         	ljmp	i1l184
 12833  103A  318E  2E81         	ljmp	i1l184
 12834  103C  318E  2E81         	ljmp	i1l184
 12835  103E  318E  2E81         	ljmp	i1l184
 12836  1040  318E  2E81         	ljmp	i1l184
 12837  1042  318E  2E81         	ljmp	i1l184
 12838  1044  318E  2E81         	ljmp	i1l184
 12839  1046  318E  2E81         	ljmp	i1l184
 12840  1048  318E  2E81         	ljmp	i1l184
 12841  104A  318E  2E81         	ljmp	i1l184
 12842  104C  318E  2E81         	ljmp	i1l184
 12843  104E  318E  2E81         	ljmp	i1l184
 12844  1050  318E  2E81         	ljmp	i1l184
 12845  1052  318E  2E81         	ljmp	i1l184
 12846  1054  318E  2E81         	ljmp	i1l184
 12847  1056  318E  2E81         	ljmp	i1l184
 12848  1058  318E  2E81         	ljmp	i1l184
 12849  105A  318E  2E81         	ljmp	i1l184
 12850  105C  318E  2E81         	ljmp	i1l184
 12851  105E  318E  2E81         	ljmp	i1l184
 12852  1060  318E  2E81         	ljmp	i1l184
 12853  1062  318E  2E81         	ljmp	i1l184
 12854  1064  318E  2E81         	ljmp	i1l184
 12855  1066  318E  2E81         	ljmp	i1l184
 12856  1068  318E  2E81         	ljmp	i1l184
 12857  106A  318E  2E81         	ljmp	i1l184
 12858  106C  318E  2E81         	ljmp	i1l184
 12859  106E  318E  2E81         	ljmp	i1l184
 12860  1070  318E  2E81         	ljmp	i1l184
 12861  1072  318E  2E81         	ljmp	i1l184
 12862  1074  318E  2E81         	ljmp	i1l184
 12863  1076  318E  2E81         	ljmp	i1l184
 12864  1078  318E  2E81         	ljmp	i1l184
 12865  107A  318E  2E81         	ljmp	i1l184
 12866  107C  318E  2E81         	ljmp	i1l184
 12867  107E  318E  2E81         	ljmp	i1l184
 12868  1080  318E  2E81         	ljmp	i1l184
 12869  1082  318E  2E81         	ljmp	i1l184
 12870  1084  318E  2E81         	ljmp	i1l184
 12871  1086  318E  2E81         	ljmp	i1l184
 12872  1088  318E  2E81         	ljmp	i1l184
 12873  108A  318E  2E81         	ljmp	i1l184
 12874  108C  318E  2E81         	ljmp	i1l184
 12875  108E  318E  2E81         	ljmp	i1l184
 12876  1090  318E  2E81         	ljmp	i1l184
 12877  1092  318E  2E81         	ljmp	i1l184
 12878  1094  318E  2E81         	ljmp	i1l184
 12879  1096  318E  2E81         	ljmp	i1l184
 12880  1098  318E  2E81         	ljmp	i1l184
 12881  109A  318E  2E81         	ljmp	i1l184
 12882  109C  318E  2E81         	ljmp	i1l184
 12883  109E  318E  2E81         	ljmp	i1l184
 12884  10A0  318E  2E81         	ljmp	i1l184
 12885  10A2  318E  2E81         	ljmp	i1l184
 12886  10A4  318E  2E81         	ljmp	i1l184
 12887  10A6  318E  2E81         	ljmp	i1l184
 12888  10A8  318E  2E81         	ljmp	i1l184
 12889  10AA  318E  2E81         	ljmp	i1l184
 12890  10AC  318E  2E81         	ljmp	i1l184
 12891  10AE  318E  2E81         	ljmp	i1l184
 12892  10B0  318E  2E81         	ljmp	i1l184
 12893  10B2  318E  2E81         	ljmp	i1l184
 12894  10B4  318E  2E81         	ljmp	i1l184
 12895  10B6  318E  2E81         	ljmp	i1l184
 12896  10B8  318E  2E81         	ljmp	i1l184
 12897  10BA  318E  2E81         	ljmp	i1l184
 12898  10BC  318E  2E81         	ljmp	i1l184
 12899  10BE  318E  2E81         	ljmp	i1l184
 12900  10C0  318E  2E81         	ljmp	i1l184
 12901  10C2  318E  2E81         	ljmp	i1l184
 12902  10C4  318E  2E81         	ljmp	i1l184
 12903  10C6  318E  2E81         	ljmp	i1l184
 12904  10C8  318E  2E81         	ljmp	i1l184
 12905  10CA  318E  2E81         	ljmp	i1l184
 12906  10CC  318E  2E81         	ljmp	i1l184
 12907  10CE  318E  2E81         	ljmp	i1l184
 12908  10D0  318E  2E81         	ljmp	i1l184
 12909  10D2  318E  2E81         	ljmp	i1l184
 12910  10D4  318E  2E81         	ljmp	i1l184
 12911  10D6  318E  2E81         	ljmp	i1l184
 12912  10D8  318E  2E81         	ljmp	i1l184
 12913  10DA  318E  2E81         	ljmp	i1l184
 12914  10DC  318E  2E81         	ljmp	i1l184
 12915  10DE  318E  2E81         	ljmp	i1l184
 12916  10E0  318E  2E81         	ljmp	i1l184
 12917  10E2  318E  2E81         	ljmp	i1l184
 12918  10E4  318E  2E81         	ljmp	i1l184
 12919  10E6  318E  2E81         	ljmp	i1l184
 12920  10E8  318E  2E81         	ljmp	i1l184
 12921                           
 12922                           	psect	text56
 12923  1A04                     __ptext56:	
 12924 ;; *************** function i1_USBCheckCDCRequest *****************
 12925 ;; Defined at:
 12926 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12935 ;; Tracked objects:
 12936 ;;		On entry : 1F/0
 12937 ;;		On exit  : 1A/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;Total ram usage:        0 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; This function calls:
 12947 ;;		Nothing
 12948 ;; This function is called by:
 12949 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           
 12954                           ;psect for function i1_USBCheckCDCRequest
 12955  1A04                     i1_USBCheckCDCRequest:	
 12956                           
 12957                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 12958                           
 12959                           ;incstack = 0
 12960                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 12961  1A04  0850               	movf	80,w	;volatile
 12962  1A05  391F               	andlw	31
 12963  1A06  3A01               	xorlw	1
 12964  1A07  1D03               	btfss	3,2
 12965  1A08  0008               	return
 12966                           
 12967                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 12968  1A09  0E50               	swapf	80,w	;volatile
 12969  1A0A  0C89               	rrf	9,f
 12970  1A0B  3903               	andlw	3
 12971  1A0C  3A01               	xorlw	1
 12972  1A0D  1D03               	btfss	3,2
 12973  1A0E  0008               	return
 12974                           
 12975                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 12976                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 12977  1A0F  0854               	movf	84,w	;volatile
 12978  1A10  1903               	btfsc	3,2
 12979  1A11  2A44               	goto	i1l4595
 12980  1A12  0354               	decf	84,w	;volatile
 12981  1A13  1D03               	btfss	3,2
 12982  1A14  0008               	return
 12983  1A15  2A44               	goto	i1l4595
 12984  1A16                     i1l4565:	
 12985                           
 12986                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12987  1A16  3024               	movlw	low _dummy_encapsulated_cmd_response
 12988  1A17  0021               	movlb	1	; select bank1
 12989  1A18  00E0               	movwf	_inPipes^(0+128)	;volatile
 12990  1A19  3003               	movlw	high _dummy_encapsulated_cmd_response
 12991  1A1A  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
 12992                           
 12993                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 12994  1A1B  3008               	movlw	8
 12995  1A1C  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
 12996  1A1D  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 12997                           
 12998                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12999  1A1E  1462               	bsf	(_inPipes^(0+128)+2),0	;volatile
 13000                           
 13001                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 13002  1A1F  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13003                           
 13004                           ;usb_device_cdc.c: 174: break;
 13005  1A20  0008               	return
 13006  1A21                     i1l4573:	
 13007                           
 13008                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13009  1A21  3024               	movlw	low _dummy_encapsulated_cmd_response
 13010  1A22  0021               	movlb	1	; select bank1
 13011  1A23  00E0               	movwf	_inPipes^(0+128)	;volatile
 13012  1A24  3003               	movlw	high _dummy_encapsulated_cmd_response
 13013  1A25  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
 13014                           
 13015                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 13016  1A26  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13017                           
 13018                           ;usb_device_cdc.c: 179: break;
 13019  1A27  0008               	return
 13020  1A28                     i1l4577:	
 13021                           
 13022                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 13023  1A28  0857               	movf	87,w	;volatile
 13024  1A29  0025               	movlb	5	; select bank5
 13025  1A2A  00A4               	movwf	((_outPipes+1)^(0+640)+3)	;volatile
 13026  1A2B  0020               	movlb	0	; select bank0
 13027  1A2C  0856               	movf	86,w	;volatile
 13028  1A2D  0025               	movlb	5	; select bank5
 13029  1A2E  00A3               	movwf	(_outPipes^(0+640)+3)	;volatile
 13030                           
 13031                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 13032  1A2F  30DF               	movlw	(low (_line_coding| (0+512)))& (0+255)
 13033  1A30  00A0               	movwf	_outPipes^(0+640)	;volatile
 13034                           
 13035                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 13036  1A31  01A5               	clrf	(low ((_outPipes| (0+512)+5)))^(0+128)	;volatile
 13037  1A32  01A6               	clrf	((low ((_outPipes| (0+512)+5))+1))^(0+128)	;volatile
 13038                           
 13039                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 13040  1A33  17A2               	bsf	(_outPipes^(0+640)+2),7	;volatile
 13041                           
 13042                           ;usb_device_cdc.c: 188: break;
 13043  1A34  0008               	return
 13044  1A35                     i1l4583:	
 13045                           
 13046                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 13047  1A35  30DF               	movlw	low _line_coding
 13048  1A36  0021               	movlb	1	; select bank1
 13049  1A37  00E0               	movwf	_inPipes^(0+128)	;volatile
 13050  1A38  3002               	movlw	high _line_coding
 13051  1A39  00E1               	movwf	(_inPipes+1)^(0+128)	;volatile
 13052  1A3A  3007               	movlw	7
 13053  1A3B  00E3               	movwf	(_inPipes^(0+128)+3)	;volatile
 13054  1A3C  01E4               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 13055  1A3D  30C1               	movlw	193
 13056  1A3E  00E2               	movwf	(_inPipes^(0+128)+2)	;volatile
 13057                           
 13058                           ;usb_device_cdc.c: 195: break;
 13059  1A3F  0008               	return
 13060  1A40                     i1l4589:	
 13061                           
 13062                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 13063  1A40  0852               	movf	82,w	;volatile
 13064                           
 13065                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 13066  1A41  0021               	movlb	1	; select bank1
 13067  1A42  17E2               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13068                           
 13069                           ;usb_device_cdc.c: 231: break;
 13070  1A43  0008               	return
 13071  1A44                     i1l4595:	
 13072  1A44  0851               	movf	81,w	;volatile
 13073                           
 13074                           ; Switch size 1, requested type "speed"
 13075                           ; Number of cases is 5, Range of values is 0 to 34
 13076                           ; switch strategies available:
 13077                           ; Name         Instructions Cycles
 13078                           ; direct_byte           76     6 (fixed)
 13079                           ; simple_byte           16     9 (average)
 13080                           ; jumptable            260     6 (fixed)
 13081                           ;	Chosen strategy is direct_byte
 13082  1A45  0084               	movwf	4
 13083  1A46  3023               	movlw	35
 13084  1A47  0204               	subwf	4,w
 13085  1A48  1803               	skipnc
 13086  1A49  0008               	return
 13087  1A4A  3198               	movlp	high i1S8555
 13088  1A4B  3504               	lslf	4,w
 13089  1A4C  3E46               	addlw	low i1S8555
 13090  1A4D  0082               	movwf	2
 13091  1A4E                     i1l40:	
 13092  1A4E  0008               	return
 13093  1A4F                     __end_ofi1_USBCheckCDCRequest:	
 13094                           
 13095                           	psect	swtext6
 13096  1846                     __pswtext6:	
 13097  1846                     i1S8555:	
 13098  1846  319A  2A16         	ljmp	i1l4565
 13099  1848  319A  2A21         	ljmp	i1l4573
 13100  184A  319A  2A4E         	ljmp	i1l40
 13101  184C  319A  2A4E         	ljmp	i1l40
 13102  184E  319A  2A4E         	ljmp	i1l40
 13103  1850  319A  2A4E         	ljmp	i1l40
 13104  1852  319A  2A4E         	ljmp	i1l40
 13105  1854  319A  2A4E         	ljmp	i1l40
 13106  1856  319A  2A4E         	ljmp	i1l40
 13107  1858  319A  2A4E         	ljmp	i1l40
 13108  185A  319A  2A4E         	ljmp	i1l40
 13109  185C  319A  2A4E         	ljmp	i1l40
 13110  185E  319A  2A4E         	ljmp	i1l40
 13111  1860  319A  2A4E         	ljmp	i1l40
 13112  1862  319A  2A4E         	ljmp	i1l40
 13113  1864  319A  2A4E         	ljmp	i1l40
 13114  1866  319A  2A4E         	ljmp	i1l40
 13115  1868  319A  2A4E         	ljmp	i1l40
 13116  186A  319A  2A4E         	ljmp	i1l40
 13117  186C  319A  2A4E         	ljmp	i1l40
 13118  186E  319A  2A4E         	ljmp	i1l40
 13119  1870  319A  2A4E         	ljmp	i1l40
 13120  1872  319A  2A4E         	ljmp	i1l40
 13121  1874  319A  2A4E         	ljmp	i1l40
 13122  1876  319A  2A4E         	ljmp	i1l40
 13123  1878  319A  2A4E         	ljmp	i1l40
 13124  187A  319A  2A4E         	ljmp	i1l40
 13125  187C  319A  2A4E         	ljmp	i1l40
 13126  187E  319A  2A4E         	ljmp	i1l40
 13127  1880  319A  2A4E         	ljmp	i1l40
 13128  1882  319A  2A4E         	ljmp	i1l40
 13129  1884  319A  2A4E         	ljmp	i1l40
 13130  1886  319A  2A28         	ljmp	i1l4577
 13131  1888  319A  2A35         	ljmp	i1l4583
 13132  188A  319A  2A40         	ljmp	i1l4589
 13133                           
 13134                           	psect	text57
 13135  1B3A                     __ptext57:	
 13136 ;; *************** function i1_CDCInitEP *****************
 13137 ;; Defined at:
 13138 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 13139 ;; Parameters:    Size  Location     Type
 13140 ;;		None
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;		None
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  1    wreg      void 
 13145 ;; Registers used:
 13146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13147 ;; Tracked objects:
 13148 ;;		On entry : 1F/0
 13149 ;;		On exit  : 1F/5
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13156 ;;Total ram usage:        0 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; Hardware stack levels required when called:    2
 13159 ;; This function calls:
 13160 ;;		i1_USBEnableEndpoint
 13161 ;; This function is called by:
 13162 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           
 13167                           ;psect for function i1_CDCInitEP
 13168  1B3A                     i1_CDCInitEP:	
 13169                           
 13170                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 13171                           
 13172                           ;incstack = 0
 13173                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13174  1B3A  0025               	movlb	5	; select bank5
 13175  1B3B  304B               	movlw	75
 13176  1B3C  01E2               	clrf	(_line_coding+3)^(0+640)
 13177  1B3D  01E1               	clrf	(_line_coding+2)^(0+640)
 13178  1B3E  00E0               	movwf	(_line_coding+1)^(0+640)
 13179  1B3F  3008               	movlw	8
 13180  1B40  01DF               	clrf	_line_coding^(0+640)
 13181                           
 13182                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 13183  1B41  01E3               	clrf	(_line_coding^(0+640)+4)
 13184  1B42  01E4               	clrf	(_line_coding^(0+640)+5)
 13185                           
 13186                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 13187  1B43  00E5               	movwf	(_line_coding^(0+640)+6)
 13188                           
 13189                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 13190  1B44  301A               	movlw	26
 13191  1B45  00F4               	movwf	i1USBEnableEndpoint@options
 13192  1B46  3001               	movlw	1
 13193  1B47  2350  319B         	fcall	i1_USBEnableEndpoint
 13194                           
 13195                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 13196  1B49  301E               	movlw	30
 13197  1B4A  00F4               	movwf	i1USBEnableEndpoint@options
 13198  1B4B  3002               	movlw	2
 13199  1B4C  2350               	fcall	i1_USBEnableEndpoint
 13200                           
 13201                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 13202  1B4D  0025               	movlb	5	; select bank5
 13203  1B4E  01DE               	clrf	_cdc_trf_state^(0+640)
 13204  1B4F  0008               	return
 13205  1B50                     __end_ofi1_CDCInitEP:	
 13206  1B50                     __ptext58:	
 13207 ;; *************** function i1_USBEnableEndpoint *****************
 13208 ;; Defined at:
 13209 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 13210 ;; Parameters:    Size  Location     Type
 13211 ;;  ep              1    wreg     unsigned char 
 13212 ;;  options         1    4[COMMON] unsigned char 
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;  ep              1    9[COMMON] unsigned char 
 13215 ;;  USBEnableEnd    2    7[COMMON] PTR unsigned char 
 13216 ;;		 -> UEP0(1), 
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  1    wreg      void 
 13219 ;; Registers used:
 13220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/5
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13226 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13227 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13230 ;;Total ram usage:        6 bytes
 13231 ;; Hardware stack levels used:    1
 13232 ;; Hardware stack levels required when called:    1
 13233 ;; This function calls:
 13234 ;;		i1_USBConfigureEndpoint
 13235 ;; This function is called by:
 13236 ;;		i1_CDCInitEP
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           
 13241                           ;psect for function i1_USBEnableEndpoint
 13242  1B50                     i1_USBEnableEndpoint:	
 13243                           
 13244                           ;incstack = 0
 13245                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13246                           ;i1USBEnableEndpoint@ep stored from wreg
 13247  1B50  00F9               	movwf	i1USBEnableEndpoint@ep
 13248                           
 13249                           ;usb_device.c: 880: unsigned char* p;
 13250                           ;usb_device.c: 884: if(options & 0x04)
 13251  1B51  1D74               	btfss	i1USBEnableEndpoint@options,2
 13252  1B52  2B56               	goto	i1l4481
 13253                           
 13254                           ;usb_device.c: 885: {
 13255                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 13256  1B53  01F0               	clrf	i1USBConfigureEndpoint@direction
 13257  1B54  236D  319B         	fcall	i1_USBConfigureEndpoint
 13258  1B56                     i1l4481:	
 13259                           
 13260                           ;usb_device.c: 887: }
 13261                           ;usb_device.c: 888: if(options & 0x02)
 13262  1B56  1CF4               	btfss	i1USBEnableEndpoint@options,1
 13263  1B57  2B5C               	goto	i1l4485
 13264                           
 13265                           ;usb_device.c: 889: {
 13266                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 13267  1B58  01F0               	clrf	i1USBConfigureEndpoint@direction
 13268  1B59  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 13269  1B5A  0879               	movf	i1USBEnableEndpoint@ep,w
 13270  1B5B  236D               	fcall	i1_USBConfigureEndpoint
 13271  1B5C                     i1l4485:	
 13272                           
 13273                           ;usb_device.c: 891: }
 13274                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 13275  1B5C  0879               	movf	i1USBEnableEndpoint@ep,w
 13276  1B5D  3E98               	addlw	152
 13277  1B5E  00F5               	movwf	??i1_USBEnableEndpoint
 13278  1B5F  300E               	movlw	14
 13279  1B60  01F6               	clrf	??i1_USBEnableEndpoint+1
 13280  1B61  3DF6               	addwfc	??i1_USBEnableEndpoint+1,f
 13281  1B62  0875               	movf	??i1_USBEnableEndpoint,w
 13282  1B63  00F7               	movwf	i1USBEnableEndpoint@p
 13283  1B64  0876               	movf	??i1_USBEnableEndpoint+1,w
 13284  1B65  00F8               	movwf	i1USBEnableEndpoint@p+1
 13285                           
 13286                           ;usb_device.c: 901: *p = options;
 13287  1B66  0877               	movf	i1USBEnableEndpoint@p,w
 13288  1B67  0086               	movwf	6
 13289  1B68  0878               	movf	i1USBEnableEndpoint@p+1,w
 13290  1B69  0087               	movwf	7
 13291  1B6A  0874               	movf	i1USBEnableEndpoint@options,w
 13292  1B6B  0081               	movwf	1
 13293  1B6C  0008               	return
 13294  1B6D                     __end_ofi1_USBEnableEndpoint:	
 13295  1B6D                     __ptext59:	
 13296 ;; *************** function i1_USBConfigureEndpoint *****************
 13297 ;; Defined at:
 13298 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;  EPNum           1    wreg     unsigned char 
 13301 ;;  direction       1    0[COMMON] unsigned char 
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;  EPNum           1    2[COMMON] unsigned char 
 13304 ;;  USBConfigure    1    3[COMMON] PTR volatile struct __BD
 13305 ;;		 -> BDT(48), 
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  1    wreg      void 
 13308 ;; Registers used:
 13309 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/5
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13315 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;Total ram usage:        4 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; This function calls:
 13322 ;;		Nothing
 13323 ;; This function is called by:
 13324 ;;		i1_USBEnableEndpoint
 13325 ;; This function uses a non-reentrant model
 13326 ;;
 13327                           
 13328                           
 13329                           ;psect for function i1_USBConfigureEndpoint
 13330  1B6D                     i1_USBConfigureEndpoint:	
 13331                           
 13332                           ;incstack = 0
 13333                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13334                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 13335  1B6D  00F2               	movwf	i1USBConfigureEndpoint@EPNum
 13336                           
 13337                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 13338                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 13339  1B6E  3020               	movlw	32
 13340  1B6F  00F3               	movwf	i1USBConfigureEndpoint@handle
 13341                           
 13342                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 13343  1B70  0870               	movf	i1USBConfigureEndpoint@direction,w
 13344  1B71  00F1               	movwf	??i1_USBConfigureEndpoint
 13345  1B72  35F1               	lslf	??i1_USBConfigureEndpoint,f
 13346  1B73  0872               	movf	i1USBConfigureEndpoint@EPNum,w
 13347  1B74  0709               	addwf	9,w
 13348  1B75  0709               	addwf	9,w
 13349  1B76  0771               	addwf	??i1_USBConfigureEndpoint,w
 13350  1B77  0709               	addwf	9,w
 13351  1B78  0709               	addwf	9,w
 13352  1B79  07F3               	addwf	i1USBConfigureEndpoint@handle,f
 13353                           
 13354                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 13355  1B7A  0873               	movf	i1USBConfigureEndpoint@handle,w
 13356  1B7B  0086               	movwf	6
 13357  1B7C  0187               	clrf	7
 13358  1B7D  1381               	bcf	1,7
 13359                           
 13360                           ;usb_device.c: 1557: if(direction == 0)
 13361  1B7E  0870               	movf	i1USBConfigureEndpoint@direction,w
 13362  1B7F  1D03               	btfss	3,2
 13363  1B80  2B8B               	goto	i1l4459
 13364                           
 13365                           ;usb_device.c: 1558: {
 13366                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 13367  1B81  3572               	lslf	i1USBConfigureEndpoint@EPNum,w
 13368  1B82  3EAD               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 13369  1B83  0086               	movwf	6
 13370  1B84  3002               	movlw	2	; select bank5/6
 13371  1B85  0087               	movwf	7
 13372  1B86  0873               	movf	i1USBConfigureEndpoint@handle,w
 13373  1B87  3FC0               	movwi [0]fsr1
 13374  1B88  3000               	movlw	0
 13375  1B89  3FC1               	movwi [1]fsr1
 13376                           
 13377                           ;usb_device.c: 1560: }
 13378  1B8A  2B94               	goto	i1l4461
 13379  1B8B                     i1l4459:	
 13380                           
 13381                           ;usb_device.c: 1561: else
 13382                           ;usb_device.c: 1562: {
 13383                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 13384  1B8B  3572               	lslf	i1USBConfigureEndpoint@EPNum,w
 13385  1B8C  3EA7               	addlw	(low (_pBDTEntryIn| (0+512)))& (0+255)
 13386  1B8D  0086               	movwf	6
 13387  1B8E  3002               	movlw	2	; select bank5/6
 13388  1B8F  0087               	movwf	7
 13389  1B90  0873               	movf	i1USBConfigureEndpoint@handle,w
 13390  1B91  3FC0               	movwi [0]fsr1
 13391  1B92  3000               	movlw	0
 13392  1B93  3FC1               	movwi [1]fsr1
 13393  1B94                     i1l4461:	
 13394                           
 13395                           ;usb_device.c: 1564: }
 13396                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 13397  1B94  0873               	movf	i1USBConfigureEndpoint@handle,w
 13398  1B95  0086               	movwf	6
 13399  1B96  0187               	clrf	7
 13400  1B97  1301               	bcf	1,6
 13401                           
 13402                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 13403  1B98  0873               	movf	i1USBConfigureEndpoint@handle,w
 13404  1B99  3E04               	addlw	4
 13405  1B9A  0086               	movwf	6
 13406  1B9B  1701               	bsf	1,6
 13407  1B9C  0008               	return
 13408  1B9D                     __end_ofi1_USBConfigureEndpoint:	
 13409                           
 13410                           	psect	text60
 13411  1E5E                     __ptext60:	
 13412 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 13413 ;; Defined at:
 13414 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;		None
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  1    wreg      void 
 13421 ;; Registers used:
 13422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13423 ;; Tracked objects:
 13424 ;;		On entry : 1F/3
 13425 ;;		On exit  : 18/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;Total ram usage:        2 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; Hardware stack levels required when called:    2
 13435 ;; This function calls:
 13436 ;;		i1_USBCtrlTrfRxService
 13437 ;; This function is called by:
 13438 ;;		i1_USBCtrlEPService
 13439 ;; This function uses a non-reentrant model
 13440 ;;
 13441                           
 13442                           
 13443                           ;psect for function i1_USBCtrlTrfOutHandler
 13444  1E5E                     i1_USBCtrlTrfOutHandler:	
 13445                           
 13446                           ;usb_device.c: 2540: if(controlTransferState == 2)
 13447                           
 13448                           ;incstack = 0
 13449                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13450  1E5E  3002               	movlw	2
 13451  1E5F  0024               	movlb	4	; select bank4
 13452  1E60  066C               	xorwf	_controlTransferState^(0+512),w	;volatile
 13453  1E61  1D03               	btfss	3,2
 13454  1E62  2E65               	goto	i1l5661
 13455                           
 13456                           ;usb_device.c: 2541: {
 13457                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 13458  1E63  2691               	fcall	i1_USBCtrlTrfRxService
 13459                           
 13460                           ;usb_device.c: 2543: }
 13461  1E64  0008               	return
 13462  1E65                     i1l5661:	
 13463                           
 13464                           ;usb_device.c: 2544: else
 13465                           ;usb_device.c: 2545: {
 13466                           ;usb_device.c: 2548: controlTransferState = 0;
 13467  1E65  01EC               	clrf	_controlTransferState^(0+512)	;volatile
 13468                           
 13469                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 13470  1E66  0025               	movlb	5	; select bank5
 13471  1E67  0858               	movf	_BothEP0OutUOWNsSet^(0+640),w	;volatile
 13472  1E68  1D03               	btfss	3,2
 13473  1E69  2E8F               	goto	i1l5673
 13474                           
 13475                           ;usb_device.c: 2556: {
 13476                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 16;
 13477  1E6A  0023               	movlb	3	; select bank3
 13478  1E6B  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13479  1E6C  3E01               	addlw	1
 13480  1E6D  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13481  1E6E  3000               	movlw	0
 13482  1E6F  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13483  1E70  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13484  1E71  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13485  1E72  0086               	movwf	6
 13486  1E73  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13487  1E74  0087               	movwf	7
 13488  1E75  3010               	movlw	16
 13489  1E76  0081               	movwf	1
 13490                           
 13491                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13492  1E77  3050               	movlw	80
 13493  1E78  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13494  1E79  01F7               	clrf	??i1_USBCtrlTrfOutHandler+1
 13495  1E7A  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13496  1E7B  0086               	movwf	6
 13497  1E7C  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13498  1E7D  0087               	movwf	7
 13499  1E7E  3142               	addfsr 1,2
 13500  1E7F  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13501  1E80  3FC0               	movwi [0]fsr1
 13502  1E81  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13503  1E82  3FC1               	movwi [1]fsr1
 13504                           
 13505                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13506  1E83  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13507  1E84  0086               	movwf	6
 13508  1E85  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13509  1E86  0087               	movwf	7
 13510  1E87  300C               	movlw	12
 13511  1E88  0081               	movwf	1
 13512                           
 13513                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13514  1E89  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13515  1E8A  0086               	movwf	6
 13516  1E8B  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13517  1E8C  0087               	movwf	7
 13518  1E8D  1781               	bsf	1,7
 13519                           
 13520                           ;usb_device.c: 2561: }
 13521  1E8E  0008               	return
 13522  1E8F                     i1l5673:	
 13523                           
 13524                           ;usb_device.c: 2562: else
 13525                           ;usb_device.c: 2563: {
 13526                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 13527  1E8F  01D8               	clrf	_BothEP0OutUOWNsSet^(0+640)	;volatile
 13528  1E90  0008               	return
 13529  1E91                     __end_ofi1_USBCtrlTrfOutHandler:	
 13530  1E91                     __ptext61:	
 13531 ;; *************** function i1_USBCtrlTrfRxService *****************
 13532 ;; Defined at:
 13533 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 13534 ;; Parameters:    Size  Location     Type
 13535 ;;		None
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 13538 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13543 ;; Tracked objects:
 13544 ;;		On entry : 1F/4
 13545 ;;		On exit  : 18/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;Total ram usage:        4 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; Hardware stack levels required when called:    1
 13555 ;; This function calls:
 13556 ;;		i1_USBCtrlEPAllowStatusStage
 13557 ;; This function is called by:
 13558 ;;		i1_USBCtrlTrfOutHandler
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562                           
 13563                           ;psect for function i1_USBCtrlTrfRxService
 13564  1E91                     i1_USBCtrlTrfRxService:	
 13565                           
 13566                           ;usb_device.c: 1854: uint8_t byteToRead;
 13567                           ;usb_device.c: 1855: uint8_t i;
 13568                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 13569                           
 13570                           ;incstack = 0
 13571                           ; Regs used in i1_USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13572  1E91  0023               	movlb	3	; select bank3
 13573  1E92  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 13574  1E93  0086               	movwf	6
 13575  1E94  0187               	clrf	7
 13576  1E95  3F41               	moviw [1]fsr1
 13577  1E96  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13578                           
 13579                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 13580  1E97  00F2               	movwf	??i1_USBCtrlTrfRxService
 13581  1E98  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13582  1E99  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13583  1E9A  0025               	movlb	5	; select bank5
 13584  1E9B  0224               	subwf	((_outPipes+1)^(0+640)+3),w	;volatile
 13585  1E9C  1D03               	skipz
 13586  1E9D  2EA0               	goto	u444_25
 13587  1E9E  0872               	movf	??i1_USBCtrlTrfRxService,w
 13588  1E9F  0223               	subwf	(_outPipes^(0+640)+3),w	;volatile
 13589  1EA0                     u444_25:	
 13590  1EA0  1803               	skipnc
 13591  1EA1  2EA4               	goto	i1l435
 13592                           
 13593                           ;usb_device.c: 1866: {
 13594                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 13595  1EA2  0823               	movf	(_outPipes^(0+640)+3),w	;volatile
 13596  1EA3  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13597  1EA4                     i1l435:	
 13598                           
 13599                           ;usb_device.c: 1868: }
 13600                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 13601  1EA4  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13602  1EA5  02A3               	subwf	(_outPipes^(0+640)+3),f	;volatile
 13603  1EA6  1C03               	skipc
 13604  1EA7  03A4               	decf	((_outPipes+1)^(0+640)+3),f	;volatile
 13605                           
 13606                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 13607  1EA8  01F4               	clrf	i1USBCtrlTrfRxService@i
 13608  1EA9                     i1l5481:	
 13609  1EA9  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13610  1EAA  0274               	subwf	i1USBCtrlTrfRxService@i,w
 13611  1EAB  1803               	btfsc	3,0
 13612  1EAC  2EBA               	goto	i1l5483
 13613                           
 13614                           ;usb_device.c: 1875: {
 13615                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 13616  1EAD  0820               	movf	_outPipes^(0+640),w	;volatile
 13617  1EAE  0086               	movwf	6
 13618  1EAF  3002               	movlw	2	; select bank4/5
 13619  1EB0  0087               	movwf	7
 13620  1EB1  0874               	movf	i1USBCtrlTrfRxService@i,w
 13621  1EB2  3E60               	addlw	96
 13622  1EB3  0084               	movwf	4
 13623  1EB4  0185               	clrf	5
 13624  1EB5  0800               	movf	0,w
 13625  1EB6  0081               	movwf	1
 13626  1EB7  0AA0               	incf	_outPipes^(0+640),f	;volatile
 13627  1EB8  0AF4               	incf	i1USBCtrlTrfRxService@i,f
 13628  1EB9  2EA9               	goto	i1l5481
 13629  1EBA                     i1l5483:	
 13630                           
 13631                           ;usb_device.c: 1877: }
 13632                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 13633  1EBA  0823               	movf	(_outPipes^(0+640)+3),w	;volatile
 13634  1EBB  0424               	iorwf	((_outPipes+1)^(0+640)+3),w	;volatile
 13635  1EBC  1903               	btfsc	3,2
 13636  1EBD  2EF3               	goto	i1l5495
 13637                           
 13638                           ;usb_device.c: 1882: {
 13639                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 16;
 13640  1EBE  0023               	movlb	3	; select bank3
 13641  1EBF  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13642  1EC0  3E01               	addlw	1
 13643  1EC1  00F2               	movwf	??i1_USBCtrlTrfRxService
 13644  1EC2  3000               	movlw	0
 13645  1EC3  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13646  1EC4  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13647  1EC5  0872               	movf	??i1_USBCtrlTrfRxService,w
 13648  1EC6  0086               	movwf	6
 13649  1EC7  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13650  1EC8  0087               	movwf	7
 13651  1EC9  3010               	movlw	16
 13652  1ECA  0081               	movwf	1
 13653                           
 13654                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 13655  1ECB  3060               	movlw	96
 13656  1ECC  00F2               	movwf	??i1_USBCtrlTrfRxService
 13657  1ECD  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13658  1ECE  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13659  1ECF  0086               	movwf	6
 13660  1ED0  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13661  1ED1  0087               	movwf	7
 13662  1ED2  3142               	addfsr 1,2
 13663  1ED3  0872               	movf	??i1_USBCtrlTrfRxService,w
 13664  1ED4  3FC0               	movwi [0]fsr1
 13665  1ED5  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13666  1ED6  3FC1               	movwi [1]fsr1
 13667                           
 13668                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 13669  1ED7  086E               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 13670  1ED8  0086               	movwf	6
 13671  1ED9  0187               	clrf	7
 13672                           
 13673                           ;usb_device.c: 1886: {
 13674                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13675  1EDA  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13676  1EDB  1B01               	btfsc	1,6
 13677  1EDC  2EE8               	goto	L17
 13678  1EDD  0086               	movwf	6
 13679  1EDE  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13680  1EDF  0087               	movwf	7
 13681  1EE0  3048               	movlw	72
 13682  1EE1  0081               	movwf	1
 13683                           
 13684                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13685  1EE2  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13686  1EE3  0086               	movwf	6
 13687  1EE4  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13688  1EE5  0087               	movwf	7
 13689  1EE6  1781               	bsf	1,7
 13690                           
 13691                           ;usb_device.c: 1889: }
 13692  1EE7  0008               	return
 13693  1EE8                     L17:	
 13694                           ;usb_device.c: 1890: else
 13695                           ;usb_device.c: 1891: {
 13696                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 13697                           
 13698  1EE8  0086               	movwf	6
 13699  1EE9  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13700  1EEA  0087               	movwf	7
 13701  1EEB  3008               	movlw	8
 13702  1EEC  0081               	movwf	1
 13703                           
 13704                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13705  1EED  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13706  1EEE  0086               	movwf	6
 13707  1EEF  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13708  1EF0  0087               	movwf	7
 13709  1EF1  1781               	bsf	1,7
 13710  1EF2  0008               	return
 13711  1EF3                     i1l5495:	
 13712                           
 13713                           ;usb_device.c: 1896: else
 13714                           ;usb_device.c: 1897: {
 13715                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 16;
 13716  1EF3  0023               	movlb	3	; select bank3
 13717  1EF4  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13718  1EF5  3E01               	addlw	1
 13719  1EF6  00F2               	movwf	??i1_USBCtrlTrfRxService
 13720  1EF7  3000               	movlw	0
 13721  1EF8  3D6D               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13722  1EF9  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13723  1EFA  0872               	movf	??i1_USBCtrlTrfRxService,w
 13724  1EFB  0086               	movwf	6
 13725  1EFC  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13726  1EFD  0087               	movwf	7
 13727  1EFE  3010               	movlw	16
 13728  1EFF  0081               	movwf	1
 13729                           
 13730                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13731  1F00  3050               	movlw	80
 13732  1F01  00F2               	movwf	??i1_USBCtrlTrfRxService
 13733  1F02  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13734  1F03  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13735  1F04  0086               	movwf	6
 13736  1F05  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13737  1F06  0087               	movwf	7
 13738  1F07  3142               	addfsr 1,2
 13739  1F08  0872               	movf	??i1_USBCtrlTrfRxService,w
 13740  1F09  3FC0               	movwi [0]fsr1
 13741  1F0A  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13742  1F0B  3FC1               	movwi [1]fsr1
 13743                           
 13744                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13745  1F0C  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13746  1F0D  0086               	movwf	6
 13747  1F0E  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13748  1F0F  0087               	movwf	7
 13749  1F10  3004               	movlw	4
 13750  1F11  0081               	movwf	1
 13751                           
 13752                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13753  1F12  086C               	movf	_pBDTEntryEP0OutNext^(0+384),w
 13754  1F13  0086               	movwf	6
 13755  1F14  086D               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 13756  1F15  0087               	movwf	7
 13757  1F16  1781               	bsf	1,7
 13758                           
 13759                           ;usb_device.c: 1915: {
 13760                           ;usb_device.c: 1921: outPipes[0].pFunc();
 13761  1F17  0025               	movlb	5	; select bank5
 13762  1F18  0825               	movf	(low ((_outPipes| (0+512)+5)))^(0+128),w	;volatile
 13763  1F19  0826               	movf	((low ((_outPipes| (0+512)+5))+1))^(0+128),w	;volatile
 13764                           
 13765                           ;usb_device.c: 1926: }
 13766                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 13767  1F1A  13A2               	bcf	(_outPipes^(0+640)+2),7	;volatile
 13768                           
 13769                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 13770  1F1B  0856               	movf	_USBDeferStatusStagePacket^(0+640),w	;volatile
 13771  1F1C  1D03               	btfss	3,2
 13772  1F1D  0008               	return
 13773                           
 13774                           ;usb_device.c: 1942: {
 13775                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 13776  1F1E  318E  2682         	fcall	i1_USBCtrlEPAllowStatusStage
 13777  1F20  0008               	return
 13778  1F21                     __end_ofi1_USBCtrlTrfRxService:	
 13779                           
 13780                           	psect	maintext_split_1
 13781  10F2                     i4Ll965:	
 13782  10F2                     i4Ll6929:	
 13783                           
 13784                           ;main.c: 620: if (usb_tx_ptr > 0) {
 13785  10F2  0024               	movlb	4	; select bank4
 13786  10F3  086A               	movf	_usb_tx_ptr^(0+512),w
 13787  10F4  1903               	btfsc	3,2
 13788  10F5  2926               	ljmp	i4Ll6945
 13789  10F6  28F8               	ljmp	i4Ll6931
 13790  10F7                     i4Lu6201:	
 13791  10F7  2926               	ljmp	i4Ll6945
 13792  10F8                     i4Lu6200:	
 13793  10F8                     i4Ll6931:	
 13794                           
 13795                           ;main.c: 621: {PIE2bits.USBIE = 0;};
 13796  10F8  0021               	movlb	1	; select bank1
 13797  10F9  1112               	bcf	18,2	;volatile
 13798  10FA                     i4Ll6933:	
 13799                           
 13800                           ;main.c: 622: usb_tx_handle = USBTransferOnePacket(2, 1, usb_tx_buf, usb_tx_ptr);
 13801  10FA  0022               	movlb	2	; select bank2
 13802  10FB  30A0               	movlw	160
 13803  10FC  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
 13804  10FD  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
 13805  10FE  00E1               	movwf	USBTransferOnePacket@data^(0+256)
 13806  10FF  0024               	movlb	4	; select bank4
 13807  1100  086A               	movf	_usb_tx_ptr^(0+512),w
 13808  1101  0022               	movlb	2	; select bank2
 13809  1102  00E2               	movwf	USBTransferOnePacket@len^(0+256)
 13810  1103  3002               	movlw	2
 13811  1104  319C  2471  3190   	fcall	_USBTransferOnePacket
 13812  1107  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
 13813  1108  0025               	movlb	5	; select bank5
 13814  1109  00BA               	movwf	(cmd_tx_buffer_task@usb_tx_handle+1)^(0+640)
 13815  110A  0022               	movlb	2	; select bank2
 13816  110B  0860               	movf	?_USBTransferOnePacket^(0+256),w
 13817  110C  0025               	movlb	5	; select bank5
 13818  110D  00B9               	movwf	cmd_tx_buffer_task@usb_tx_handle^(0+640)
 13819  110E                     i4Ll6935:	
 13820                           
 13821                           ;main.c: 623: {PIE2bits.USBIE = 1;};
 13822  110E  0021               	movlb	1	; select bank1
 13823  110F  1512               	bsf	18,2	;volatile
 13824  1110                     i4Ll6937:	
 13825  1110  0022               	movlb	2	; select bank2
 13826  1111  086D               	movf	cmd_tx_buffer_task@pt^(0+256),w
 13827  1112  0086               	movwf	6
 13828  1113  3002               	movlw	2	; select bank4/5
 13829  1114  0087               	movwf	7
 13830  1115  3072               	movlw	114
 13831  1116  3FC0               	movwi [0]fsr1
 13832  1117  3002               	movlw	2
 13833  1118  3FC1               	movwi [1]fsr1
 13834  1119                     i4Ll6939:	
 13835  1119  0025               	movlb	5	; select bank5
 13836  111A  0839               	movf	cmd_tx_buffer_task@usb_tx_handle^(0+640),w
 13837  111B  0086               	movwf	6
 13838  111C  083A               	movf	(cmd_tx_buffer_task@usb_tx_handle+1)^(0+640),w
 13839  111D  0087               	movwf	7
 13840  111E  1F81               	btfss	1,7
 13841  111F  2923               	ljmp	i4Ll6943
 13842  1120  2959               	ljmp	iL70
 13843  1121                     i4Lu6211:	
 13844  1121  2923               	ljmp	i4Ll6943
 13845  1122                     i4Lu6210:	
 13846  1122  2959               	ljmp	iL70
 13847  1123                     i4Ll6943:	
 13848                           
 13849                           ;main.c: 627: usb_tx_ptr = 0;
 13850  1123  0024               	movlb	4	; select bank4
 13851  1124  01EA               	clrf	_usb_tx_ptr^(0+512)
 13852  1125  28F2               	ljmp	i4Ll6929
 13853  1126                     i4Ll6945:	
 13854  1126  0022               	movlb	2	; select bank2
 13855  1127  01EC               	clrf	cmd_tx_buffer_task@PT_YIELD_FLAG^(0+256)
 13856  1128                     i4Ll6947:	
 13857  1128  086D               	movf	cmd_tx_buffer_task@pt^(0+256),w
 13858  1129  0086               	movwf	6
 13859  112A  3002               	movlw	2	; select bank4/5
 13860  112B  0087               	movwf	7
 13861  112C  3076               	movlw	118
 13862  112D  3FC0               	movwi [0]fsr1
 13863  112E  3002               	movlw	2
 13864  112F  3FC1               	movwi [1]fsr1
 13865  1130                     i4Ll6949:	
 13866  1130  086C               	movf	cmd_tx_buffer_task@PT_YIELD_FLAG^(0+256),w
 13867  1131  1D03               	btfss	3,2
 13868  1132  28F2               	ljmp	i4Ll6929
 13869  1133  2959               	ljmp	iL70
 13870  1134                     i4Lu6221:	
 13871  1134  28F2               	ljmp	i4Ll6929
 13872  1135                     i4Lu6220:	
 13873  1135  2959               	ljmp	iL70
 13874  1136                     i4Ll6953:	
 13875  1136  086D               	movf	cmd_tx_buffer_task@pt^(0+256),w
 13876  1137  0086               	movwf	6
 13877  1138  3002               	movlw	2	; select bank4/5
 13878  1139  0087               	movwf	7
 13879  113A  3F40               	moviw [0]fsr1
 13880  113B  00EA               	movwf	??_cmd_tx_buffer_task^(0+256)
 13881  113C  3F41               	moviw [1]fsr1
 13882  113D  00EB               	movwf	(??_cmd_tx_buffer_task^(0+256)+1)
 13883                           
 13884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13885                           ; Switch size 1, requested type "speed"
 13886                           ; Number of cases is 2, Range of values is 0 to 2
 13887                           ; switch strategies available:
 13888                           ; Name         Instructions Cycles
 13889                           ; simple_byte            7     4 (average)
 13890                           ; direct_byte           12     6 (fixed)
 13891                           ; jumptable            260     6 (fixed)
 13892                           ;	Chosen strategy is simple_byte
 13893  113E  086B               	movf	(??_cmd_tx_buffer_task+1)^(0+256),w
 13894  113F  3A00               	xorlw	0	; case 0
 13895  1140  1903               	btfsc	3,2
 13896  1141  2946               	ljmp	i4Ll8521
 13897  1142  3A02               	xorlw	2	; case 2
 13898  1143  1903               	btfsc	3,2
 13899  1144  294B               	ljmp	i4Ll8523
 13900  1145  2952               	ljmp	i4Ll6957
 13901  1146                     i4Ll8521:	
 13902                           
 13903                           ; Switch size 1, requested type "speed"
 13904                           ; Number of cases is 1, Range of values is 0 to 0
 13905                           ; switch strategies available:
 13906                           ; Name         Instructions Cycles
 13907                           ; simple_byte            4     3 (average)
 13908                           ; direct_byte            8     6 (fixed)
 13909                           ; jumptable            260     6 (fixed)
 13910                           ;	Chosen strategy is simple_byte
 13911  1146  086A               	movf	??_cmd_tx_buffer_task^(0+256),w
 13912  1147  3A00               	xorlw	0	; case 0
 13913  1148  1903               	btfsc	3,2
 13914  1149  28F2               	ljmp	i4Ll6929
 13915  114A  2952               	ljmp	i4Ll6957
 13916  114B                     i4Ll8523:	
 13917                           
 13918                           ; Switch size 1, requested type "speed"
 13919                           ; Number of cases is 2, Range of values is 114 to 118
 13920                           ; switch strategies available:
 13921                           ; Name         Instructions Cycles
 13922                           ; simple_byte            7     4 (average)
 13923                           ; direct_byte           19     9 (fixed)
 13924                           ; jumptable            263     9 (fixed)
 13925                           ;	Chosen strategy is simple_byte
 13926  114B  086A               	movf	??_cmd_tx_buffer_task^(0+256),w
 13927  114C  3A72               	xorlw	114	; case 114
 13928  114D  1903               	btfsc	3,2
 13929  114E  2919               	ljmp	i4Ll6939
 13930  114F  3A04               	xorlw	4	; case 118
 13931  1150  1903               	btfsc	3,2
 13932  1151  2930               	ljmp	i4Ll6949
 13933  1152                     i4Ll6957:	
 13934  1152  086D               	movf	cmd_tx_buffer_task@pt^(0+256),w
 13935  1153  0086               	movwf	6
 13936  1154  3002               	movlw	2	; select bank4/5
 13937  1155  0087               	movwf	7
 13938  1156  3000               	movlw	0
 13939  1157  3FC0               	movwi [0]fsr1
 13940  1158  3FC1               	movwi [1]fsr1
 13941  1159                     i4Ll971:	
 13942  1159                     iL70:	
 13943                           
 13944                           ;main.c: 674: cmd_task(&cmd_pt);
 13945  1159  3066               	movlw	(low (main@cmd_pt| (0+512)))& (0+255)
 13946  115A                     i5L__ptext4:	
 13947                           
 13948                           ;psect for function _cmd_task
 13949  115A                     i5L_cmd_task:	
 13950                           
 13951                           ;incstack = 0
 13952                           ; Regs used in _cmd_task: [wreg-fsr1h+status,2+status,0]
 13953                           ;cmd_task@pt stored from wreg
 13954  115A  0022               	movlb	2	; select bank2
 13955  115B  00ED               	movwf	cmd_task@pt^(0+256)
 13956  115C                     i5Ll6171:	
 13957                           
 13958                           ;main.c: 101: static uint8_t gpio_dir = 0b111111;
 13959                           ;main.c: 103: static uint8_t cmd;
 13960                           ;main.c: 104: static uint8_t op0;
 13961                           ;main.c: 105: static uint8_t sie;
 13962                           ;main.c: 106: static uint8_t num_bits;
 13963                           ;main.c: 107: static uint8_t num_bytes;
 13964                           ;main.c: 108: static uint8_t input_mask;
 13965                           ;main.c: 109: static uint8_t do0p0;
 13966                           ;main.c: 110: static uint8_t do0p1;
 13967                           ;main.c: 111: static uint8_t do1p0;
 13968                           ;main.c: 112: static uint8_t do1p1;
 13969                           ;main.c: 113: static uint8_t inout_cfg;
 13970                           ;main.c: 114: static uint8_t i;
 13971                           ;main.c: 116: static uint8_t loop_start = 3;
 13972  115C  01E3               	clrf	cmd_task@PT_YIELD_FLAG^(0+256)
 13973  115D  0AE3               	incf	cmd_task@PT_YIELD_FLAG^(0+256),f
 13974  115E  3186  2E97         	ljmp	i5Ll6801
 13975  1160                     i5Ll687:	
 13976  1160                     i5Ll6173:	
 13977  1160  0022               	movlb	2	; select bank2
 13978  1161  01E3               	clrf	cmd_task@PT_YIELD_FLAG^(0+256)
 13979  1162                     i5Ll6175:	
 13980  1162  086D               	movf	cmd_task@pt^(0+256),w
 13981  1163  0086               	movwf	6
 13982  1164  3002               	movlw	2	; select bank4/5
 13983  1165  0087               	movwf	7
 13984  1166  308B               	movlw	139
 13985  1167  3FC0               	movwi [0]fsr1
 13986  1168  3000               	movlw	0
 13987  1169  3FC1               	movwi [1]fsr1
 13988  116A                     i5Ll6177:	
 13989  116A  0863               	movf	cmd_task@PT_YIELD_FLAG^(0+256),w
 13990  116B  1D03               	btfss	3,2
 13991  116C  2971               	ljmp	i5Ll6181
 13992  116D  296F               	ljmp	i5Lu5230
 13993  116E                     i5Lu5231:	
 13994  116E  2971               	ljmp	i5Ll6181
 13995  116F                     i5Lu5230:	
 13996  116F  3187  2F06         	ljmp	iL98
 13997  1171                     i5Ll6181:	
 13998  1171  086D               	movf	cmd_task@pt^(0+256),w
 13999  1172  0086               	movwf	6
 14000  1173  3002               	movlw	2	; select bank4/5
 14001  1174  0087               	movwf	7
 14002  1175  308C               	movlw	140
 14003  1176  3FC0               	movwi [0]fsr1
 14004  1177  3000               	movlw	0
 14005  1178  3FC1               	movwi [1]fsr1
 14006  1179                     i5Ll6183:	
 14007  1179  0024               	movlb	4	; select bank4
 14008  117A  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 14009  117B  0021               	movlb	1	; select bank1
 14010  117C  0267               	subwf	_usb_rx_ptr^(0+128),w
 14011  117D  1C03               	btfss	3,0
 14012  117E  2982               	ljmp	i5Ll6187
 14013  117F  296F               	ljmp	i5Lu5230
 14014  1180                     i5Lu5241:	
 14015  1180  2982               	ljmp	i5Ll6187
 14016  1181                     i5Lu5240:	
 14017  1181  296F               	ljmp	i5Lu5230
 14018  1182                     i5Ll6187:	
 14019  1182  0867               	movf	_usb_rx_ptr^(0+128),w
 14020  1183  0022               	movlb	2	; select bank2
 14021  1184  00E0               	movwf	??_cmd_task^(0+256)
 14022  1185  01E1               	clrf	(??_cmd_task^(0+256)+1)
 14023  1186  0024               	movlb	4	; select bank4
 14024  1187  076E               	addwf	_usb_rx_buf^(0+512),w
 14025  1188  0086               	movwf	6
 14026  1189  0022               	movlb	2	; select bank2
 14027  118A  0861               	movf	(??_cmd_task+1)^(0+256),w
 14028  118B  0024               	movlb	4	; select bank4
 14029  118C  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 14030  118D  0087               	movwf	7
 14031  118E  0801               	movf	1,w
 14032  118F  0025               	movlb	5	; select bank5
 14033  1190  00D0               	movwf	cmd_task@cmd^(0+640)
 14034  1191                     i5Ll6189:	
 14035  1191  0021               	movlb	1	; select bank1
 14036  1192  0AE7               	incf	_usb_rx_ptr^(0+128),f
 14037  1193                     i5Ll6191:	
 14038                           
 14039                           ;main.c: 146: op0 = cmd & 0xc0;
 14040  1193  0025               	movlb	5	; select bank5
 14041  1194  0850               	movf	cmd_task@cmd^(0+640),w
 14042  1195  00CF               	movwf	cmd_task@op0^(0+640)
 14043  1196                     i5Ll6193:	
 14044  1196  30C0               	movlw	192
 14045  1197  05CF               	andwf	cmd_task@op0^(0+640),f
 14046  1198                     i5Ll6195:	
 14047                           
 14048                           ;main.c: 148: if (op0 == 0x40) {
 14049  1198  3040               	movlw	64
 14050  1199  064F               	xorwf	cmd_task@op0^(0+640),w
 14051  119A  1D03               	btfss	3,2
 14052  119B  29A3               	ljmp	i5Ll6199
 14053  119C  299E               	ljmp	i5Ll6197
 14054  119D                     i5Lu5251:	
 14055  119D  29A3               	ljmp	i5Ll6199
 14056  119E                     i5Lu5250:	
 14057  119E                     i5Ll6197:	
 14058                           
 14059                           ;main.c: 150: LATC = cmd & ~gpio_dir;
 14060  119E  096C               	comf	cmd_task@gpio_dir^(0+640),w
 14061  119F  0550               	andwf	cmd_task@cmd^(0+640),w
 14062  11A0  0022               	movlb	2	; select bank2
 14063  11A1  008E               	movwf	14	;volatile
 14064  11A2  2960               	ljmp	i5Ll6173
 14065  11A3                     i5Ll6199:	
 14066  11A3  3080               	movlw	128
 14067  11A4  064F               	xorwf	cmd_task@op0^(0+640),w
 14068  11A5  1D03               	btfss	3,2
 14069  11A6  29D3               	ljmp	i5Ll6217
 14070  11A7  29A9               	ljmp	i5Ll6201
 14071  11A8                     i5Lu5261:	
 14072  11A8  29D3               	ljmp	i5Ll6217
 14073  11A9                     i5Lu5260:	
 14074  11A9                     i5Ll6201:	
 14075                           
 14076                           ;main.c: 154: byte_to_send = PORTC & gpio_dir;
 14077  11A9  0020               	movlb	0	; select bank0
 14078  11AA  080E               	movf	14,w	;volatile
 14079  11AB  0025               	movlb	5	; select bank5
 14080  11AC  00C4               	movwf	cmd_task@byte_to_send^(0+640)
 14081  11AD                     i5Ll6203:	
 14082  11AD  086C               	movf	cmd_task@gpio_dir^(0+640),w
 14083  11AE  05C4               	andwf	cmd_task@byte_to_send^(0+640),f
 14084  11AF                     i5Ll6205:	
 14085                           
 14086                           ;main.c: 155: LATC = cmd & ~gpio_dir;
 14087  11AF  096C               	comf	cmd_task@gpio_dir^(0+640),w
 14088  11B0  0550               	andwf	cmd_task@cmd^(0+640),w
 14089  11B1  0022               	movlb	2	; select bank2
 14090  11B2  008E               	movwf	14	;volatile
 14091  11B3                     i5Ll6207:	
 14092  11B3  086D               	movf	cmd_task@pt^(0+256),w
 14093  11B4  0086               	movwf	6
 14094  11B5  3002               	movlw	2	; select bank4/5
 14095  11B6  0087               	movwf	7
 14096  11B7  309C               	movlw	156
 14097  11B8  3FC0               	movwi [0]fsr1
 14098  11B9  3000               	movlw	0
 14099  11BA  3FC1               	movwi [1]fsr1
 14100  11BB                     i5Ll6209:	
 14101  11BB  0025               	movlb	5	; select bank5
 14102  11BC  085E               	movf	_cdc_trf_state^(0+640),w
 14103  11BD  1D03               	btfss	3,2
 14104  11BE  296F               	ljmp	i5Lu5230
 14105  11BF  29C1               	ljmp	i5Ll6211
 14106  11C0                     i5Lu5271:	
 14107  11C0  296F               	ljmp	i5Lu5230
 14108  11C1                     i5Lu5270:	
 14109  11C1                     i5Ll6211:	
 14110  11C1  3040               	movlw	64
 14111  11C2  0024               	movlb	4	; select bank4
 14112  11C3  026A               	subwf	_usb_tx_ptr^(0+512),w
 14113  11C4  1C03               	btfss	3,0
 14114  11C5  29C9               	ljmp	i5Ll6213
 14115  11C6  296F               	ljmp	i5Lu5230
 14116  11C7                     i5Lu5281:	
 14117  11C7  29C9               	ljmp	i5Ll6213
 14118  11C8                     i5Lu5280:	
 14119  11C8  296F               	ljmp	i5Lu5230
 14120  11C9                     i5Ll6213:	
 14121  11C9  086A               	movf	_usb_tx_ptr^(0+512),w
 14122  11CA  3EA0               	addlw	160
 14123  11CB  0086               	movwf	6
 14124  11CC  0187               	clrf	7
 14125  11CD  0025               	movlb	5	; select bank5
 14126  11CE  0844               	movf	cmd_task@byte_to_send^(0+640),w
 14127  11CF  0081               	movwf	1
 14128  11D0                     i5Ll6215:	
 14129  11D0  0024               	movlb	4	; select bank4
 14130  11D1  0AEA               	incf	_usb_tx_ptr^(0+512),f
 14131  11D2  2960               	ljmp	i5Ll6173
 14132  11D3                     i5Ll6217:	
 14133                           
 14134                           ;main.c: 159: uint8_t op1 = cmd & 0xF8;
 14135  11D3  0850               	movf	cmd_task@cmd^(0+640),w
 14136  11D4  0022               	movlb	2	; select bank2
 14137  11D5  00E6               	movwf	cmd_task@op1^(0+256)
 14138  11D6                     i5Ll6219:	
 14139  11D6  30F8               	movlw	248
 14140  11D7  05E6               	andwf	cmd_task@op1^(0+256),f
 14141  11D8                     i5Ll6221:	
 14142                           
 14143                           ;main.c: 161: if (op1 == 0x18) {
 14144  11D8  3018               	movlw	24
 14145  11D9  0666               	xorwf	cmd_task@op1^(0+256),w
 14146  11DA  1D03               	btfss	3,2
 14147  11DB  29DD               	ljmp	i5Lu5291
 14148  11DC  29DF               	ljmp	i5Ll6223
 14149  11DD                     i5Lu5291:	
 14150  11DD  3184  2C57         	ljmp	i5Ll6637
 14151  11DF                     i5Lu5290:	
 14152  11DF                     i5Ll6223:	
 14153                           
 14154                           ;main.c: 163: sie = cmd & 0x7;
 14155  11DF  0025               	movlb	5	; select bank5
 14156  11E0  0850               	movf	cmd_task@cmd^(0+640),w
 14157  11E1  0024               	movlb	4	; select bank4
 14158  11E2  00E9               	movwf	cmd_task@sie^(0+512)
 14159  11E3                     i5Ll6225:	
 14160  11E3  3007               	movlw	7
 14161  11E4  05E9               	andwf	cmd_task@sie^(0+512),f
 14162  11E5                     i5Ll6227:	
 14163  11E5  0022               	movlb	2	; select bank2
 14164  11E6  086D               	movf	cmd_task@pt^(0+256),w
 14165  11E7  0086               	movwf	6
 14166  11E8  3002               	movlw	2	; select bank4/5
 14167  11E9  0087               	movwf	7
 14168  11EA  30A5               	movlw	165
 14169  11EB  3FC0               	movwi [0]fsr1
 14170  11EC  3000               	movlw	0
 14171  11ED  3FC1               	movwi [1]fsr1
 14172  11EE                     i5Ll6229:	
 14173  11EE  0024               	movlb	4	; select bank4
 14174  11EF  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 14175  11F0  0021               	movlb	1	; select bank1
 14176  11F1  0267               	subwf	_usb_rx_ptr^(0+128),w
 14177  11F2  1C03               	btfss	3,0
 14178  11F3  29F5               	ljmp	i5Lu5301
 14179  11F4  296F               	ljmp	i5Lu5230
 14180  11F5                     i5Lu5301:	
 14181  11F5  3193  2B44         	ljmp	i5Ll6233
 14182                           
 14183                           	psect	maintext_split_2
 14184  1342                     i5Lu5300:	
 14185  1342  3187  2F06         	ljmp	iL98
 14186  1344                     i5Ll6233:	
 14187  1344  0867               	movf	_usb_rx_ptr^(0+128),w
 14188  1345  0022               	movlb	2	; select bank2
 14189  1346  00E0               	movwf	??_cmd_task^(0+256)
 14190  1347  01E1               	clrf	(??_cmd_task^(0+256)+1)
 14191  1348  0024               	movlb	4	; select bank4
 14192  1349  076E               	addwf	_usb_rx_buf^(0+512),w
 14193  134A  0086               	movwf	6
 14194  134B  0022               	movlb	2	; select bank2
 14195  134C  0861               	movf	(??_cmd_task+1)^(0+256),w
 14196  134D  0024               	movlb	4	; select bank4
 14197  134E  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 14198  134F  0087               	movwf	7
 14199  1350  0801               	movf	1,w
 14200  1351  0025               	movlb	5	; select bank5
 14201  1352  00CE               	movwf	cmd_task@num_bits^(0+640)
 14202  1353                     i5Ll6235:	
 14203  1353  0021               	movlb	1	; select bank1
 14204  1354  0AE7               	incf	_usb_rx_ptr^(0+128),f
 14205  1355                     i5Ll6237:	
 14206  1355  0022               	movlb	2	; select bank2
 14207  1356  086D               	movf	cmd_task@pt^(0+256),w
 14208  1357  0086               	movwf	6
 14209  1358  3002               	movlw	2	; select bank4/5
 14210  1359  0087               	movwf	7
 14211  135A  30A6               	movlw	166
 14212  135B  3FC0               	movwi [0]fsr1
 14213  135C  3000               	movlw	0
 14214  135D  3FC1               	movwi [1]fsr1
 14215  135E                     i5Ll6239:	
 14216  135E  0024               	movlb	4	; select bank4
 14217  135F  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 14218  1360  0021               	movlb	1	; select bank1
 14219  1361  0267               	subwf	_usb_rx_ptr^(0+128),w
 14220  1362  1C03               	btfss	3,0
 14221  1363  2B67               	ljmp	i5Ll6243
 14222  1364  2B42               	ljmp	i5Lu5300
 14223  1365                     i5Lu5311:	
 14224  1365  2B67               	ljmp	i5Ll6243
 14225  1366                     i5Lu5310:	
 14226  1366  2B42               	ljmp	i5Lu5300
 14227  1367                     i5Ll6243:	
 14228  1367  0867               	movf	_usb_rx_ptr^(0+128),w
 14229  1368  0022               	movlb	2	; select bank2
 14230  1369  00E0               	movwf	??_cmd_task^(0+256)
 14231  136A  01E1               	clrf	(??_cmd_task^(0+256)+1)
 14232  136B  0024               	movlb	4	; select bank4
 14233  136C  076E               	addwf	_usb_rx_buf^(0+512),w
 14234  136D  0086               	movwf	6
 14235  136E  0022               	movlb	2	; select bank2
 14236  136F  0861               	movf	(??_cmd_task+1)^(0+256),w
 14237  1370  0024               	movlb	4	; select bank4
 14238  1371  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 14239  1372  0087               	movwf	7
 14240  1373  0801               	movf	1,w
 14241  1374  0025               	movlb	5	; select bank5
 14242  1375  00CD               	movwf	cmd_task@num_bytes^(0+640)
 14243  1376                     i5Ll6245:	
 14244  1376  0021               	movlb	1	; select bank1
 14245  1377  0AE7               	incf	_usb_rx_ptr^(0+128),f
 14246  1378                     i5Ll6247:	
 14247                           
 14248                           ;main.c: 168: do0p0 = sie_configs[sie].do0p0;
 14249  1378  0024               	movlb	4	; select bank4
 14250  1379  0869               	movf	cmd_task@sie^(0+512),w
 14251  137A  0709               	addwf	9,w
 14252  137B  0709               	addwf	9,w
 14253  137C  0709               	addwf	9,w
 14254  137D  3EA2               	addlw	(low ((_sie_configs| (0+768)+2)))& (0+255)
 14255  137E  0086               	movwf	6
 14256  137F  3003               	movlw	3	; select bank7/8
 14257  1380  0087               	movwf	7
 14258  1381  0801               	movf	1,w
 14259  1382  0021               	movlb	1	; select bank1
 14260  1383  00E6               	movwf	cmd_task@do0p0^(0+128)
 14261  1384                     i5Ll6249:	
 14262                           
 14263                           ;main.c: 169: do0p1 = sie_configs[sie].do0p1;
 14264  1384  0024               	movlb	4	; select bank4
 14265  1385  0869               	movf	cmd_task@sie^(0+512),w
 14266  1386  0709               	addwf	9,w
 14267  1387  0709               	addwf	9,w
 14268  1388  0709               	addwf	9,w
 14269  1389  3EA3               	addlw	(low ((_sie_configs| (0+768)+3)))& (0+255)
 14270  138A  0086               	movwf	6
 14271  138B  3003               	movlw	3	; select bank7/8
 14272  138C  0087               	movwf	7
 14273  138D  0801               	movf	1,w
 14274  138E  0021               	movlb	1	; select bank1
 14275  138F  00E5               	movwf	cmd_task@do0p1^(0+128)
 14276  1390                     i5Ll6251:	
 14277                           
 14278                           ;main.c: 170: inout_cfg = sie_configs[sie].config_byte & 0xf;
 14279  1390  0024               	movlb	4	; select bank4
 14280  1391  0869               	movf	cmd_task@sie^(0+512),w
 14281  1392  0709               	addwf	9,w
 14282  1393  0709               	addwf	9,w
 14283  1394  0709               	addwf	9,w
 14284  1395  3EA0               	addlw	(low (_sie_configs| (0+768)))& (0+255)
 14285  1396  0086               	movwf	6
 14286  1397  3003               	movlw	3	; select bank7/8
 14287  1398  0087               	movwf	7
 14288  1399  0801               	movf	1,w
 14289  139A  0025               	movlb	5	; select bank5
 14290  139B  00CA               	movwf	cmd_task@inout_cfg^(0+640)
 14291  139C                     i5Ll6253:	
 14292  139C  300F               	movlw	15
 14293  139D  05CA               	andwf	cmd_task@inout_cfg^(0+640),f
 14294  139E                     i5Ll6255:	
 14295                           
 14296                           ;main.c: 173: if (inout_cfg == 0x0C) {
 14297  139E  300C               	movlw	12
 14298  139F  064A               	xorwf	cmd_task@inout_cfg^(0+640),w
 14299  13A0  1D03               	btfss	3,2
 14300  13A1  2BA3               	ljmp	i5Lu5321
 14301  13A2  2BA5               	ljmp	i5Ll6257
 14302  13A3                     i5Lu5321:	
 14303  13A3  3181  294A         	ljmp	i5Ll6415
 14304  13A5                     i5Lu5320:	
 14305  13A5                     i5Ll6257:	
 14306                           
 14307                           ;main.c: 174: compare_data_matches = 1;
 14308  13A5  01EB               	clrf	cmd_task@compare_data_matches^(0+640)
 14309  13A6  0AEB               	incf	cmd_task@compare_data_matches^(0+640),f
 14310  13A7                     i5Ll6259:	
 14311                           
 14312                           ;main.c: 176: input_mask = sie_configs[sie].input_mask;
 14313  13A7  0024               	movlb	4	; select bank4
 14314  13A8  0869               	movf	cmd_task@sie^(0+512),w
 14315  13A9  0709               	addwf	9,w
 14316  13AA  0709               	addwf	9,w
 14317  13AB  0709               	addwf	9,w
 14318  13AC  3EA1               	addlw	(low ((_sie_configs| (0+768)+1)))& (0+255)
 14319  13AD  0086               	movwf	6
 14320  13AE  3003               	movlw	3	; select bank7/8
 14321  13AF  0087               	movwf	7
 14322  13B0  0801               	movf	1,w
 14323  13B1  00E8               	movwf	cmd_task@input_mask^(0+512)
 14324  13B2                     i5Ll6261:	
 14325                           
 14326                           ;main.c: 178: for (i = 0; i < num_bytes; i += 1) {
 14327  13B2  0025               	movlb	5	; select bank5
 14328  13B3  01C9               	clrf	cmd_task@i^(0+640)
 14329  13B4  2C9F               	ljmp	i5Ll6341
 14330  13B5                     i5Ll6263:	
 14331                           
 14332                           ;main.c: 179: actual_data = 0;
 14333  13B5  01C7               	clrf	cmd_task@actual_data^(0+640)
 14334  13B6                     i5Ll6265:	
 14335                           
 14336                           ;main.c: 181: LATC = do0p0;
 14337  13B6  0021               	movlb	1	; select bank1
 14338  13B7  0866               	movf	cmd_task@do0p0^(0+128),w
 14339  13B8  0022               	movlb	2	; select bank2
 14340  13B9  008E               	movwf	14	;volatile
 14341  13BA                     i5Ll6267:	
 14342                           
 14343                           ;main.c: 182: LATC = do0p1;
 14344  13BA  0021               	movlb	1	; select bank1
 14345  13BB  0865               	movf	cmd_task@do0p1^(0+128),w
 14346  13BC  0022               	movlb	2	; select bank2
 14347  13BD  008E               	movwf	14	;volatile
 14348  13BE                     i5Ll6269:	
 14349                           
 14350                           ;main.c: 183: if (PORTC & input_mask) actual_data = actual_data | 0x01;
 14351  13BE  0020               	movlb	0	; select bank0
 14352  13BF  080E               	movf	14,w	;volatile
 14353  13C0  0024               	movlb	4	; select bank4
 14354  13C1  0568               	andwf	cmd_task@input_mask^(0+512),w
 14355  13C2  1903               	btfsc	3,2
 14356  13C3  2BC8               	ljmp	i5Ll6273
 14357  13C4  2BC6               	ljmp	i5Ll6271
 14358  13C5                     i5Lu5331:	
 14359  13C5  2BC8               	ljmp	i5Ll6273
 14360  13C6                     i5Lu5330:	
 14361  13C6                     i5Ll6271:	
 14362  13C6  0025               	movlb	5	; select bank5
 14363  13C7  1447               	bsf	cmd_task@actual_data^(0+640),0
 14364  13C8                     i5Ll6273:	
 14365                           
 14366                           ;main.c: 185: LATC = do0p0;
 14367  13C8  0021               	movlb	1	; select bank1
 14368  13C9  0866               	movf	cmd_task@do0p0^(0+128),w
 14369  13CA  0022               	movlb	2	; select bank2
 14370  13CB  008E               	movwf	14	;volatile
 14371                           
 14372                           ;main.c: 186: LATC = do0p1;
 14373  13CC  0021               	movlb	1	; select bank1
 14374  13CD  0865               	movf	cmd_task@do0p1^(0+128),w
 14375  13CE  0022               	movlb	2	; select bank2
 14376  13CF  008E               	movwf	14	;volatile
 14377  13D0                     i5Ll6275:	
 14378                           
 14379                           ;main.c: 187: if (PORTC & input_mask) actual_data = actual_data | 0x02;
 14380  13D0  0020               	movlb	0	; select bank0
 14381  13D1  080E               	movf	14,w	;volatile
 14382  13D2  0024               	movlb	4	; select bank4
 14383  13D3  0568               	andwf	cmd_task@input_mask^(0+512),w
 14384  13D4  1903               	btfsc	3,2
 14385  13D5  2BDA               	ljmp	i5Ll6279
 14386  13D6  2BD8               	ljmp	i5Ll6277
 14387  13D7                     i5Lu5341:	
 14388  13D7  2BDA               	ljmp	i5Ll6279
 14389  13D8                     i5Lu5340:	
 14390  13D8                     i5Ll6277:	
 14391  13D8  0025               	movlb	5	; select bank5
 14392  13D9  14C7               	bsf	cmd_task@actual_data^(0+640),1
 14393  13DA                     i5Ll6279:	
 14394                           
 14395                           ;main.c: 189: LATC = do0p0;
 14396  13DA  0021               	movlb	1	; select bank1
 14397  13DB  0866               	movf	cmd_task@do0p0^(0+128),w
 14398  13DC  0022               	movlb	2	; select bank2
 14399  13DD  008E               	movwf	14	;volatile
 14400                           
 14401                           ;main.c: 190: LATC = do0p1;
 14402  13DE  0021               	movlb	1	; select bank1
 14403  13DF  0865               	movf	cmd_task@do0p1^(0+128),w
 14404  13E0  0022               	movlb	2	; select bank2
 14405  13E1  008E               	movwf	14	;volatile
 14406  13E2                     i5Ll6281:	
 14407                           
 14408                           ;main.c: 191: if (PORTC & input_mask) actual_data = actual_data | 0x04;
 14409  13E2  0020               	movlb	0	; select bank0
 14410  13E3  080E               	movf	14,w	;volatile
 14411  13E4  0024               	movlb	4	; select bank4
 14412  13E5  0568               	andwf	cmd_task@input_mask^(0+512),w
 14413  13E6  1903               	btfsc	3,2
 14414  13E7  2BEC               	ljmp	i5Ll6285
 14415  13E8  2BEA               	ljmp	i5Ll6283
 14416  13E9                     i5Lu5351:	
 14417  13E9  2BEC               	ljmp	i5Ll6285
 14418  13EA                     i5Lu5350:	
 14419  13EA                     i5Ll6283:	
 14420  13EA  0025               	movlb	5	; select bank5
 14421  13EB  1547               	bsf	cmd_task@actual_data^(0+640),2
 14422  13EC                     i5Ll6285:	
 14423                           
 14424                           ;main.c: 193: LATC = do0p0;
 14425  13EC  0021               	movlb	1	; select bank1
 14426  13ED  0866               	movf	cmd_task@do0p0^(0+128),w
 14427  13EE  0022               	movlb	2	; select bank2
 14428  13EF  008E               	movwf	14	;volatile
 14429                           
 14430                           ;main.c: 194: LATC = do0p1;
 14431  13F0  0021               	movlb	1	; select bank1
 14432  13F1  0865               	movf	cmd_task@do0p1^(0+128),w
 14433  13F2  0022               	movlb	2	; select bank2
 14434  13F3  008E               	movwf	14	;volatile
 14435  13F4                     i5Ll6287:	
 14436                           
 14437                           ;main.c: 195: if (PORTC & input_mask) actual_data = actual_data | 0x08;
 14438  13F4  0020               	movlb	0	; select bank0
 14439  13F5  080E               	movf	14,w	;volatile
 14440  13F6  0024               	movlb	4	; select bank4
 14441  13F7  0568               	andwf	cmd_task@input_mask^(0+512),w
 14442  13F8  1903               	btfsc	3,2
 14443  13F9  2BFE               	ljmp	i5Ll6291
 14444  13FA  2BFC               	ljmp	i5Ll6289
 14445  13FB                     i5Lu5361:	
 14446  13FB  2BFE               	ljmp	i5Ll6291
 14447  13FC                     i5Lu5360:	
 14448  13FC                     i5Ll6289:	
 14449  13FC  0025               	movlb	5	; select bank5
 14450  13FD  15C7               	bsf	cmd_task@actual_data^(0+640),3
 14451  13FE                     i5Ll6291:	
 14452                           
 14453                           ;main.c: 197: LATC = do0p0;
 14454  13FE  0021               	movlb	1	; select bank1
 14455  13FF  0866               	movf	cmd_task@do0p0^(0+128),w
 14456  1400  0022               	movlb	2	; select bank2
 14457  1401  008E               	movwf	14	;volatile
 14458                           
 14459                           ;main.c: 198: LATC = do0p1;
 14460  1402  0021               	movlb	1	; select bank1
 14461  1403  0865               	movf	cmd_task@do0p1^(0+128),w
 14462  1404  0022               	movlb	2	; select bank2
 14463  1405  008E               	movwf	14	;volatile
 14464  1406                     i5Ll6293:	
 14465                           
 14466                           ;main.c: 199: if (PORTC & input_mask) actual_data = actual_data | 0x10;
 14467  1406  0020               	movlb	0	; select bank0
 14468  1407  080E               	movf	14,w	;volatile
 14469  1408  0024               	movlb	4	; select bank4
 14470  1409  0568               	andwf	cmd_task@input_mask^(0+512),w
 14471  140A  1903               	btfsc	3,2
 14472  140B  2C10               	ljmp	i5Ll6297
 14473  140C  2C0E               	ljmp	i5Ll6295
 14474  140D                     i5Lu5371:	
 14475  140D  2C10               	ljmp	i5Ll6297
 14476  140E                     i5Lu5370:	
 14477  140E                     i5Ll6295:	
 14478  140E  0025               	movlb	5	; select bank5
 14479  140F  1647               	bsf	cmd_task@actual_data^(0+640),4
 14480  1410                     i5Ll6297:	
 14481                           
 14482                           ;main.c: 201: LATC = do0p0;
 14483  1410  0021               	movlb	1	; select bank1
 14484  1411  0866               	movf	cmd_task@do0p0^(0+128),w
 14485  1412  0022               	movlb	2	; select bank2
 14486  1413  008E               	movwf	14	;volatile
 14487                           
 14488                           ;main.c: 202: LATC = do0p1;
 14489  1414  0021               	movlb	1	; select bank1
 14490  1415  0865               	movf	cmd_task@do0p1^(0+128),w
 14491  1416  0022               	movlb	2	; select bank2
 14492  1417  008E               	movwf	14	;volatile
 14493  1418                     i5Ll6299:	
 14494                           
 14495                           ;main.c: 203: if (PORTC & input_mask) actual_data = actual_data | 0x20;
 14496  1418  0020               	movlb	0	; select bank0
 14497  1419  080E               	movf	14,w	;volatile
 14498  141A  0024               	movlb	4	; select bank4
 14499  141B  0568               	andwf	cmd_task@input_mask^(0+512),w
 14500  141C  1903               	btfsc	3,2
 14501  141D  2C22               	ljmp	i5Ll6303
 14502  141E  2C20               	ljmp	i5Ll6301
 14503  141F                     i5Lu5381:	
 14504  141F  2C22               	ljmp	i5Ll6303
 14505  1420                     i5Lu5380:	
 14506  1420                     i5Ll6301:	
 14507  1420  0025               	movlb	5	; select bank5
 14508  1421  16C7               	bsf	cmd_task@actual_data^(0+640),5
 14509  1422                     i5Ll6303:	
 14510                           
 14511                           ;main.c: 205: LATC = do0p0;
 14512  1422  0021               	movlb	1	; select bank1
 14513  1423  0866               	movf	cmd_task@do0p0^(0+128),w
 14514  1424  0022               	movlb	2	; select bank2
 14515  1425  008E               	movwf	14	;volatile
 14516                           
 14517                           ;main.c: 206: LATC = do0p1;
 14518  1426  0021               	movlb	1	; select bank1
 14519  1427  0865               	movf	cmd_task@do0p1^(0+128),w
 14520  1428  0022               	movlb	2	; select bank2
 14521  1429  008E               	movwf	14	;volatile
 14522  142A                     i5Ll6305:	
 14523                           
 14524                           ;main.c: 207: if (PORTC & input_mask) actual_data = actual_data | 0x40;
 14525  142A  0020               	movlb	0	; select bank0
 14526  142B  080E               	movf	14,w	;volatile
 14527  142C  0024               	movlb	4	; select bank4
 14528  142D  0568               	andwf	cmd_task@input_mask^(0+512),w
 14529  142E  1903               	btfsc	3,2
 14530  142F  2C34               	ljmp	i5Ll6309
 14531  1430  2C32               	ljmp	i5Ll6307
 14532  1431                     i5Lu5391:	
 14533  1431  2C34               	ljmp	i5Ll6309
 14534  1432                     i5Lu5390:	
 14535  1432                     i5Ll6307:	
 14536  1432  0025               	movlb	5	; select bank5
 14537  1433  1747               	bsf	cmd_task@actual_data^(0+640),6
 14538  1434                     i5Ll6309:	
 14539                           
 14540                           ;main.c: 209: LATC = do0p0;
 14541  1434  0021               	movlb	1	; select bank1
 14542  1435  0866               	movf	cmd_task@do0p0^(0+128),w
 14543  1436  0022               	movlb	2	; select bank2
 14544  1437  008E               	movwf	14	;volatile
 14545                           
 14546                           ;main.c: 210: LATC = do0p1;
 14547  1438  0021               	movlb	1	; select bank1
 14548  1439  0865               	movf	cmd_task@do0p1^(0+128),w
 14549  143A  0022               	movlb	2	; select bank2
 14550  143B  008E               	movwf	14	;volatile
 14551  143C                     i5Ll6311:	
 14552                           
 14553                           ;main.c: 211: if (PORTC & input_mask) actual_data = actual_data | 0x80;
 14554  143C  0020               	movlb	0	; select bank0
 14555  143D  080E               	movf	14,w	;volatile
 14556  143E  0024               	movlb	4	; select bank4
 14557  143F  0568               	andwf	cmd_task@input_mask^(0+512),w
 14558  1440  1903               	btfsc	3,2
 14559  1441  2C46               	ljmp	i5Ll6315
 14560  1442  2C44               	ljmp	i5Ll6313
 14561  1443                     i5Lu5401:	
 14562  1443  2C46               	ljmp	i5Ll6315
 14563  1444                     i5Lu5400:	
 14564  1444                     i5Ll6313:	
 14565  1444  0025               	movlb	5	; select bank5
 14566  1445  17C7               	bsf	cmd_task@actual_data^(0+640),7
 14567  1446                     i5Ll6315:	
 14568  1446  0022               	movlb	2	; select bank2
 14569  1447  086D               	movf	cmd_task@pt^(0+256),w
 14570  1448  0086               	movwf	6
 14571  1449  3002               	movlw	2	; select bank4/5
 14572  144A  0087               	movwf	7
 14573  144B  30D6               	movlw	214
 14574  144C  3FC0               	movwi [0]fsr1
 14575  144D  3000               	movlw	0
 14576  144E  3FC1               	movwi [1]fsr1
 14577  144F                     i5Ll6317:	
 14578  144F  0024               	movlb	4	; select bank4
 14579  1450  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 14580  1451  0021               	movlb	1	; select bank1
 14581  1452  0267               	subwf	_usb_rx_ptr^(0+128),w
 14582  1453  1C03               	btfss	3,0
 14583  1454  2C58               	ljmp	i5Ll6321
 14584  1455  2B42               	ljmp	i5Lu5300
 14585  1456                     i5Lu5411:	
 14586  1456  2C58               	ljmp	i5Ll6321
 14587  1457                     i5Lu5410:	
 14588  1457  2B42               	ljmp	i5Lu5300
 14589  1458                     i5Ll6321:	
 14590  1458  0867               	movf	_usb_rx_ptr^(0+128),w
 14591  1459  0022               	movlb	2	; select bank2
 14592  145A  00E0               	movwf	??_cmd_task^(0+256)
 14593  145B  01E1               	clrf	(??_cmd_task^(0+256)+1)
 14594  145C  0024               	movlb	4	; select bank4
 14595  145D  076E               	addwf	_usb_rx_buf^(0+512),w
 14596  145E  0086               	movwf	6
 14597  145F  0022               	movlb	2	; select bank2
 14598  1460  0861               	movf	(??_cmd_task+1)^(0+256),w
 14599  1461  0024               	movlb	4	; select bank4
 14600  1462  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 14601  1463  0087               	movwf	7
 14602  1464  0801               	movf	1,w
 14603  1465  0025               	movlb	5	; select bank5
 14604  1466  00C6               	movwf	cmd_task@expected_data^(0+640)
 14605  1467                     i5Ll6323:	
 14606  1467  0021               	movlb	1	; select bank1
 14607  1468  0AE7               	incf	_usb_rx_ptr^(0+128),f
 14608  1469                     i5Ll6325:	
 14609  1469  0022               	movlb	2	; select bank2
 14610  146A  086D               	movf	cmd_task@pt^(0+256),w
 14611  146B  0086               	movwf	6
 14612  146C  3002               	movlw	2	; select bank4/5
 14613  146D  0087               	movwf	7
 14614  146E  30D7               	movlw	215
 14615  146F  3FC0               	movwi [0]fsr1
 14616  1470  3000               	movlw	0
 14617  1471  3FC1               	movwi [1]fsr1
 14618  1472                     i5Ll6327:	
 14619  1472  0024               	movlb	4	; select bank4
 14620  1473  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 14621  1474  0021               	movlb	1	; select bank1
 14622  1475  0267               	subwf	_usb_rx_ptr^(0+128),w
 14623  1476  1C03               	btfss	3,0
 14624  1477  2C7B               	ljmp	i5Ll6331
 14625  1478  2B42               	ljmp	i5Lu5300
 14626  1479                     i5Lu5421:	
 14627  1479  2C7B               	ljmp	i5Ll6331
 14628  147A                     i5Lu5420:	
 14629  147A  2B42               	ljmp	i5Lu5300
 14630  147B                     i5Ll6331:	
 14631  147B  0867               	movf	_usb_rx_ptr^(0+128),w
 14632  147C  0022               	movlb	2	; select bank2
 14633  147D  00E0               	movwf	??_cmd_task^(0+256)
 14634  147E  01E1               	clrf	(??_cmd_task^(0+256)+1)
 14635  147F  0024               	movlb	4	; select bank4
 14636  1480  076E               	addwf	_usb_rx_buf^(0+512),w
 14637  1481  0086               	movwf	6
 14638  1482  0022               	movlb	2	; select bank2
 14639  1483  0861               	movf	(??_cmd_task+1)^(0+256),w
 14640  1484  0024               	movlb	4	; select bank4
 14641  1485  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 14642  1486  0087               	movwf	7
 14643  1487  0801               	movf	1,w
 14644  1488  0025               	movlb	5	; select bank5
 14645  1489  00C5               	movwf	cmd_task@mask^(0+640)
 14646  148A                     i5Ll6333:	
 14647  148A  0021               	movlb	1	; select bank1
 14648  148B  0AE7               	incf	_usb_rx_ptr^(0+128),f
 14649  148C                     i5Ll6335:	
 14650                           
 14651                           ;main.c: 217: if ((expected_data & mask) != (actual_data & mask)) {
 14652  148C  0025               	movlb	5	; select bank5
 14653  148D  0845               	movf	cmd_task@mask^(0+640),w
 14654  148E  0547               	andwf	cmd_task@actual_data^(0+640),w
 14655  148F  0022               	movlb	2	; select bank2
 14656  1490  00E0               	movwf	??_cmd_task^(0+256)
 14657  1491  0025               	movlb	5	; select bank5
 14658  1492  0845               	movf	cmd_task@mask^(0+640),w
 14659  1493  0546               	andwf	cmd_task@expected_data^(0+640),w
 14660  1494  0022               	movlb	2	; select bank2
 14661  1495  00E1               	movwf	(??_cmd_task+1)^(0+256)
 14662  1496  0660               	xorwf	??_cmd_task^(0+256),w
 14663  1497  1903               	btfsc	3,2
 14664  1498  2C9D               	ljmp	i5Ll6339
 14665  1499  2C9B               	ljmp	i5Ll6337
 14666  149A                     i5Lu5431:	
 14667  149A  2C9D               	ljmp	i5Ll6339
 14668  149B                     i5Lu5430:	
 14669  149B                     i5Ll6337:	
 14670                           
 14671                           ;main.c: 218: compare_data_matches = 0;
 14672  149B  0025               	movlb	5	; select bank5
 14673  149C  01EB               	clrf	cmd_task@compare_data_matches^(0+640)
 14674  149D                     i5Ll6339:	
 14675  149D  0025               	movlb	5	; select bank5
 14676  149E  0AC9               	incf	cmd_task@i^(0+640),f
 14677  149F                     i5Ll6341:	
 14678  149F  084D               	movf	cmd_task@num_bytes^(0+640),w
 14679  14A0  0249               	subwf	cmd_task@i^(0+640),w
 14680  14A1  1C03               	btfss	3,0
 14681  14A2  2BB5               	ljmp	i5Ll6263
 14682  14A3  2CA5               	ljmp	i5Ll6343
 14683  14A4                     i5Lu5441:	
 14684  14A4  2BB5               	ljmp	i5Ll6263
 14685  14A5                     i5Lu5440:	
 14686  14A5                     i5Ll6343:	
 14687                           
 14688                           ;main.c: 219: }
 14689                           ;main.c: 220: }
 14690                           ;main.c: 222: actual_data = 0;
 14691  14A5  01C7               	clrf	cmd_task@actual_data^(0+640)
 14692  14A6                     i5Ll6345:	
 14693                           
 14694                           ;main.c: 223: uint8_t bit_to_set = 1;
 14695  14A6  0022               	movlb	2	; select bank2
 14696  14A7  01E7               	clrf	cmd_task@bit_to_set^(0+256)
 14697  14A8  0AE7               	incf	cmd_task@bit_to_set^(0+256),f
 14698                           
 14699                           ;main.c: 225: for (i = 0; i < num_bits - 1; i += 1) {
 14700  14A9  0025               	movlb	5	; select bank5
 14701  14AA  01C9               	clrf	cmd_task@i^(0+640)
 14702  14AB  3180  287F         	ljmp	i5Ll738
 14703                           
 14704                           	psect	maintext_split_3
 14705  0067                     i5Ll6347:	
 14706                           
 14707                           ;main.c: 226: LATC = do0p0;
 14708  0067  0021               	movlb	1	; select bank1
 14709  0068  0866               	movf	cmd_task@do0p0^(0+128),w
 14710  0069  0022               	movlb	2	; select bank2
 14711  006A  008E               	movwf	14	;volatile
 14712                           
 14713                           ;main.c: 227: LATC = do0p1;
 14714  006B  0021               	movlb	1	; select bank1
 14715  006C  0865               	movf	cmd_task@do0p1^(0+128),w
 14716  006D  0022               	movlb	2	; select bank2
 14717  006E  008E               	movwf	14	;volatile
 14718  006F                     i5Ll6349:	
 14719                           
 14720                           ;main.c: 228: if (PORTC & input_mask) actual_data = actual_data | bit_to_set;
 14721  006F  0020               	movlb	0	; select bank0
 14722  0070  080E               	movf	14,w	;volatile
 14723  0071  0024               	movlb	4	; select bank4
 14724  0072  0568               	andwf	cmd_task@input_mask^(0+512),w
 14725  0073  1903               	btfsc	3,2
 14726  0074  287B               	ljmp	i5Ll6353
 14727  0075  2877               	ljmp	i5Ll6351
 14728  0076                     i5Lu5451:	
 14729  0076  287B               	ljmp	i5Ll6353
 14730  0077                     i5Lu5450:	
 14731  0077                     i5Ll6351:	
 14732  0077  0022               	movlb	2	; select bank2
 14733  0078  0867               	movf	cmd_task@bit_to_set^(0+256),w
 14734  0079  0025               	movlb	5	; select bank5
 14735  007A  04C7               	iorwf	cmd_task@actual_data^(0+640),f
 14736  007B                     i5Ll6353:	
 14737                           
 14738                           ;main.c: 230: bit_to_set = bit_to_set << 1;
 14739  007B  0022               	movlb	2	; select bank2
 14740  007C  35E7               	lslf	cmd_task@bit_to_set^(0+256),f
 14741  007D                     i5Ll6355:	
 14742  007D  0025               	movlb	5	; select bank5
 14743  007E  0AC9               	incf	cmd_task@i^(0+640),f
 14744  007F                     i5Ll738:	
 14745  007F  084E               	movf	cmd_task@num_bits^(0+640),w
 14746  0080  3EFF               	addlw	255
 14747  0081  0022               	movlb	2	; select bank2
 14748  0082  00E0               	movwf	??_cmd_task^(0+256)
 14749  0083  30FF               	movlw	255
 14750  0084  1803               	btfsc	3,0
 14751  0085  3000               	movlw	0
 14752  0086  00E1               	movwf	(??_cmd_task^(0+256)+1)
 14753  0087  0861               	movf	(??_cmd_task+1)^(0+256),w
 14754  0088  3A80               	xorlw	128
 14755  0089  3C80               	sublw	128
 14756  008A  1D03               	btfss	3,2
 14757  008B  288F               	ljmp	i5Lu5465
 14758  008C  0860               	movf	??_cmd_task^(0+256),w
 14759  008D  0025               	movlb	5	; select bank5
 14760  008E  0249               	subwf	cmd_task@i^(0+640),w
 14761  008F                     i5Lu5465:	
 14762  008F  1C03               	btfss	3,0
 14763  0090  2867               	ljmp	i5Ll6347
 14764  0091  2893               	ljmp	i5Ll6357
 14765  0092                     i5Lu5461:	
 14766  0092  2867               	ljmp	i5Ll6347
 14767  0093                     i5Lu5460:	
 14768  0093                     i5Ll6357:	
 14769                           
 14770                           ;main.c: 231: }
 14771                           ;main.c: 233: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
 14772  0093  0024               	movlb	4	; select bank4
 14773  0094  0869               	movf	cmd_task@sie^(0+512),w
 14774  0095  0709               	addwf	9,w
 14775  0096  0709               	addwf	9,w
 14776  0097  0709               	addwf	9,w
 14777  0098  3EA6               	addlw	(low ((_sie_configs| (0+768)+6)))& (0+255)
 14778  0099  0086               	movwf	6
 14779  009A  3003               	movlw	3	; select bank7/8
 14780  009B  0087               	movwf	7
 14781  009C  0801               	movf	1,w
 14782  009D  0022               	movlb	2	; select bank2
 14783  009E  00E4               	movwf	cmd_task@last_phase_overlay^(0+256)
 14784  009F                     i5Ll6359:	
 14785                           
 14786                           ;main.c: 235: LATC = do0p0 | last_phase_overlay;
 14787  009F  0021               	movlb	1	; select bank1
 14788  00A0  0866               	movf	cmd_task@do0p0^(0+128),w
 14789  00A1  0022               	movlb	2	; select bank2
 14790  00A2  0464               	iorwf	cmd_task@last_phase_overlay^(0+256),w
 14791  00A3  008E               	movwf	14	;volatile
 14792  00A4                     i5Ll6361:	
 14793                           
 14794                           ;main.c: 236: LATC = do0p1 | last_phase_overlay;
 14795  00A4  0021               	movlb	1	; select bank1
 14796  00A5  0865               	movf	cmd_task@do0p1^(0+128),w
 14797  00A6  0022               	movlb	2	; select bank2
 14798  00A7  0464               	iorwf	cmd_task@last_phase_overlay^(0+256),w
 14799  00A8  008E               	movwf	14	;volatile
 14800  00A9                     i5Ll6363:	
 14801                           
 14802                           ;main.c: 237: if (PORTC & input_mask) actual_data = actual_data | bit_to_set;
 14803  00A9  0020               	movlb	0	; select bank0
 14804  00AA  080E               	movf	14,w	;volatile
 14805  00AB  0024               	movlb	4	; select bank4
 14806  00AC  0568               	andwf	cmd_task@input_mask^(0+512),w
 14807  00AD  1903               	btfsc	3,2
 14808  00AE  28B5               	ljmp	i5Ll6367
 14809  00AF  28B1               	ljmp	i5Ll6365
 14810  00B0                     i5Lu5471:	
 14811  00B0  28B5               	ljmp	i5Ll6367
 14812  00B1                     i5Lu5470:	
 14813  00B1                     i5Ll6365:	
 14814  00B1  0022               	movlb	2	; select bank2
 14815  00B2  0867               	movf	cmd_task@bit_to_set^(0+256),w
 14816  00B3  0025               	movlb	5	; select bank5
 14817  00B4  04C7               	iorwf	cmd_task@actual_data^(0+640),f
 14818  00B5                     i5Ll6367:	
 14819  00B5  0022               	movlb	2	; select bank2
 14820  00B6  086D               	movf	cmd_task@pt^(0+256),w
 14821  00B7  0086               	movwf	6
 14822  00B8  3002               	movlw	2	; select bank4/5
 14823  00B9  0087               	movwf	7
 14824  00BA  30F0               	movlw	240
 14825  00BB  3FC0               	movwi [0]fsr1
 14826  00BC  3000               	movlw	0
 14827  00BD  3FC1               	movwi [1]fsr1
 14828  00BE                     i5Ll6369:	
 14829  00BE  0024               	movlb	4	; select bank4
 14830  00BF  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 14831  00C0  0021               	movlb	1	; select bank1
 14832  00C1  0267               	subwf	_usb_rx_ptr^(0+128),w
 14833  00C2  1C03               	btfss	3,0
 14834  00C3  28C7               	ljmp	i5Ll6373
 14835  00C4  2F06               	ljmp	iL98
 14836  00C5                     i5Lu5481:	
 14837  00C5  28C7               	ljmp	i5Ll6373
 14838  00C6                     i5Lu5480:	
 14839  00C6  2F06               	ljmp	iL98
 14840  00C7                     i5Ll6373:	
 14841  00C7  0867               	movf	_usb_rx_ptr^(0+128),w
 14842  00C8  0022               	movlb	2	; select bank2
 14843  00C9  00E0               	movwf	??_cmd_task^(0+256)
 14844  00CA  01E1               	clrf	(??_cmd_task^(0+256)+1)
 14845  00CB  0024               	movlb	4	; select bank4
 14846  00CC  076E               	addwf	_usb_rx_buf^(0+512),w
 14847  00CD  0086               	movwf	6
 14848  00CE  0022               	movlb	2	; select bank2
 14849  00CF  0861               	movf	(??_cmd_task+1)^(0+256),w
 14850  00D0  0024               	movlb	4	; select bank4
 14851  00D1  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 14852  00D2  0087               	movwf	7
 14853  00D3  0801               	movf	1,w
 14854  00D4  0025               	movlb	5	; select bank5
 14855  00D5  00C6               	movwf	cmd_task@expected_data^(0+640)
 14856  00D6                     i5Ll6375:	
 14857  00D6  0021               	movlb	1	; select bank1
 14858  00D7  0AE7               	incf	_usb_rx_ptr^(0+128),f
 14859  00D8                     i5Ll6377:	
 14860  00D8  0022               	movlb	2	; select bank2
 14861  00D9  086D               	movf	cmd_task@pt^(0+256),w
 14862  00DA  0086               	movwf	6
 14863  00DB  3002               	movlw	2	; select bank4/5
 14864  00DC  0087               	movwf	7
 14865  00DD  30F1               	movlw	241
 14866  00DE  3FC0               	movwi [0]fsr1
 14867  00DF  3000               	movlw	0
 14868  00E0  3FC1               	movwi [1]fsr1
 14869  00E1                     i5Ll6379:	
 14870  00E1  0024               	movlb	4	; select bank4
 14871  00E2  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 14872  00E3  0021               	movlb	1	; select bank1
 14873  00E4  0267               	subwf	_usb_rx_ptr^(0+128),w
 14874  00E5  1C03               	btfss	3,0
 14875  00E6  28EA               	ljmp	i5Ll6383
 14876  00E7  2F06               	ljmp	iL98
 14877  00E8                     i5Lu5491:	
 14878  00E8  28EA               	ljmp	i5Ll6383
 14879  00E9                     i5Lu5490:	
 14880  00E9  2F06               	ljmp	iL98
 14881  00EA                     i5Ll6383:	
 14882  00EA  0867               	movf	_usb_rx_ptr^(0+128),w
 14883  00EB  0022               	movlb	2	; select bank2
 14884  00EC  00E0               	movwf	??_cmd_task^(0+256)
 14885  00ED  01E1               	clrf	(??_cmd_task^(0+256)+1)
 14886  00EE  0024               	movlb	4	; select bank4
 14887  00EF  076E               	addwf	_usb_rx_buf^(0+512),w
 14888  00F0  0086               	movwf	6
 14889  00F1  0022               	movlb	2	; select bank2
 14890  00F2  0861               	movf	(??_cmd_task+1)^(0+256),w
 14891  00F3  0024               	movlb	4	; select bank4
 14892  00F4  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 14893  00F5  0087               	movwf	7
 14894  00F6  0801               	movf	1,w
 14895  00F7  0025               	movlb	5	; select bank5
 14896  00F8  00C5               	movwf	cmd_task@mask^(0+640)
 14897  00F9                     i5Ll6385:	
 14898  00F9  0021               	movlb	1	; select bank1
 14899  00FA  0AE7               	incf	_usb_rx_ptr^(0+128),f
 14900  00FB                     i5Ll6387:	
 14901                           
 14902                           ;main.c: 243: if ((expected_data & mask) != (actual_data & mask)) {
 14903  00FB  0025               	movlb	5	; select bank5
 14904  00FC  0845               	movf	cmd_task@mask^(0+640),w
 14905  00FD  0547               	andwf	cmd_task@actual_data^(0+640),w
 14906  00FE  0022               	movlb	2	; select bank2
 14907  00FF  00E0               	movwf	??_cmd_task^(0+256)
 14908  0100  0025               	movlb	5	; select bank5
 14909  0101  0845               	movf	cmd_task@mask^(0+640),w
 14910  0102  0546               	andwf	cmd_task@expected_data^(0+640),w
 14911  0103  0022               	movlb	2	; select bank2
 14912  0104  00E1               	movwf	(??_cmd_task+1)^(0+256)
 14913  0105  0660               	xorwf	??_cmd_task^(0+256),w
 14914  0106  1903               	btfsc	3,2
 14915  0107  290C               	ljmp	i5Ll6391
 14916  0108  290A               	ljmp	i5Ll6389
 14917  0109                     i5Lu5501:	
 14918  0109  290C               	ljmp	i5Ll6391
 14919  010A                     i5Lu5500:	
 14920  010A                     i5Ll6389:	
 14921                           
 14922                           ;main.c: 244: compare_data_matches = 0;
 14923  010A  0025               	movlb	5	; select bank5
 14924  010B  01EB               	clrf	cmd_task@compare_data_matches^(0+640)
 14925  010C                     i5Ll6391:	
 14926                           
 14927                           ;main.c: 245: }
 14928                           ;main.c: 247: if (loop_is_active) {
 14929  010C  0025               	movlb	5	; select bank5
 14930  010D  0848               	movf	cmd_task@loop_is_active^(0+640),w
 14931  010E  1903               	btfsc	3,2
 14932  010F  291B               	ljmp	i5Ll6397
 14933  0110  2912               	ljmp	i5Ll6393
 14934  0111                     i5Lu5511:	
 14935  0111  291B               	ljmp	i5Ll6397
 14936  0112                     i5Lu5510:	
 14937  0112                     i5Ll6393:	
 14938                           
 14939                           ;main.c: 248: if (compare_data_matches) {
 14940  0112  086B               	movf	cmd_task@compare_data_matches^(0+640),w
 14941  0113  1903               	btfsc	3,2
 14942  0114  2916               	ljmp	i5Lu5521
 14943  0115  2918               	ljmp	i5Ll6395
 14944  0116                     i5Lu5521:	
 14945  0116  3191  2960         	ljmp	i5Ll6173
 14946  0118                     i5Lu5520:	
 14947  0118                     i5Ll6395:	
 14948                           
 14949                           ;main.c: 249: loop_is_active = 0;
 14950  0118  0025               	movlb	5	; select bank5
 14951  0119  01C8               	clrf	cmd_task@loop_is_active^(0+640)
 14952  011A  2916               	ljmp	i5Lu5521
 14953  011B                     i5Ll6397:	
 14954                           
 14955                           ;main.c: 252: if (!compare_data_matches) {
 14956  011B  086B               	movf	cmd_task@compare_data_matches^(0+640),w
 14957  011C  1D03               	btfss	3,2
 14958  011D  2916               	ljmp	i5Lu5521
 14959  011E  2920               	ljmp	i5Ll6399
 14960  011F                     i5Lu5531:	
 14961  011F  2916               	ljmp	i5Lu5521
 14962  0120                     i5Lu5530:	
 14963  0120                     i5Ll6399:	
 14964                           
 14965                           ;main.c: 253: status = STATUS_FAIL;
 14966  0120  01C2               	clrf	cmd_task@status^(0+640)
 14967  0121  0AC2               	incf	cmd_task@status^(0+640),f
 14968  0122                     i5Ll6401:	
 14969                           
 14970                           ;main.c: 255: if (!status_sent) {
 14971  0122  0841               	movf	cmd_task@status_sent^(0+640),w
 14972  0123  1D03               	btfss	3,2
 14973  0124  2916               	ljmp	i5Lu5521
 14974  0125  2927               	ljmp	i5Ll6403
 14975  0126                     i5Lu5541:	
 14976  0126  2916               	ljmp	i5Lu5521
 14977  0127                     i5Lu5540:	
 14978  0127                     i5Ll6403:	
 14979  0127  0022               	movlb	2	; select bank2
 14980  0128  086D               	movf	cmd_task@pt^(0+256),w
 14981  0129  0086               	movwf	6
 14982  012A  3002               	movlw	2	; select bank4/5
 14983  012B  0087               	movwf	7
 14984  012C  3000               	movlw	0
 14985  012D  3FC0               	movwi [0]fsr1
 14986  012E  3001               	movlw	1
 14987  012F  3FC1               	movwi [1]fsr1
 14988  0130                     i5Ll6405:	
 14989  0130  0025               	movlb	5	; select bank5
 14990  0131  085E               	movf	_cdc_trf_state^(0+640),w
 14991  0132  1D03               	btfss	3,2
 14992  0133  2F06               	ljmp	iL98
 14993  0134  2936               	ljmp	i5Ll6407
 14994  0135                     i5Lu5551:	
 14995  0135  2F06               	ljmp	iL98
 14996  0136                     i5Lu5550:	
 14997  0136                     i5Ll6407:	
 14998  0136  3040               	movlw	64
 14999  0137  0024               	movlb	4	; select bank4
 15000  0138  026A               	subwf	_usb_tx_ptr^(0+512),w
 15001  0139  1C03               	btfss	3,0
 15002  013A  293E               	ljmp	i5Ll6409
 15003  013B  2F06               	ljmp	iL98
 15004  013C                     i5Lu5561:	
 15005  013C  293E               	ljmp	i5Ll6409
 15006  013D                     i5Lu5560:	
 15007  013D  2F06               	ljmp	iL98
 15008  013E                     i5Ll6409:	
 15009  013E  086A               	movf	_usb_tx_ptr^(0+512),w
 15010  013F  3EA0               	addlw	160
 15011  0140  0086               	movwf	6
 15012  0141  0187               	clrf	7
 15013  0142  0181               	clrf	1
 15014  0143  0A81               	incf	1,f
 15015  0144                     i5Ll6411:	
 15016  0144  0024               	movlb	4	; select bank4
 15017  0145  0AEA               	incf	_usb_tx_ptr^(0+512),f
 15018  0146                     i5Ll6413:	
 15019                           
 15020                           ;main.c: 257: status_sent = 1;
 15021  0146  0025               	movlb	5	; select bank5
 15022  0147  01C1               	clrf	cmd_task@status_sent^(0+640)
 15023  0148  0AC1               	incf	cmd_task@status_sent^(0+640),f
 15024  0149  2916               	ljmp	i5Lu5521
 15025  014A                     i5Ll6415:	
 15026  014A  3004               	movlw	4
 15027  014B  064A               	xorwf	cmd_task@inout_cfg^(0+640),w
 15028  014C  1D03               	btfss	3,2
 15029  014D  2A8C               	ljmp	i5Ll6521
 15030  014E  2950               	ljmp	i5Ll6417
 15031  014F                     i5Lu5571:	
 15032  014F  2A8C               	ljmp	i5Ll6521
 15033  0150                     i5Lu5570:	
 15034  0150                     i5Ll6417:	
 15035                           
 15036                           ;main.c: 265: input_mask = sie_configs[sie].input_mask;
 15037  0150  0024               	movlb	4	; select bank4
 15038  0151  0869               	movf	cmd_task@sie^(0+512),w
 15039  0152  0709               	addwf	9,w
 15040  0153  0709               	addwf	9,w
 15041  0154  0709               	addwf	9,w
 15042  0155  3EA1               	addlw	(low ((_sie_configs| (0+768)+1)))& (0+255)
 15043  0156  0086               	movwf	6
 15044  0157  3003               	movlw	3	; select bank7/8
 15045  0158  0087               	movwf	7
 15046  0159  0801               	movf	1,w
 15047  015A  00E8               	movwf	cmd_task@input_mask^(0+512)
 15048  015B                     i5Ll6419:	
 15049                           
 15050                           ;main.c: 267: for (i = 0; i < num_bytes; i += 1) {
 15051  015B  0025               	movlb	5	; select bank5
 15052  015C  01C9               	clrf	cmd_task@i^(0+640)
 15053  015D  2A11               	ljmp	i5Ll6485
 15054  015E                     i5Ll6421:	
 15055                           
 15056                           ;main.c: 268: data = 0;
 15057  015E  01C3               	clrf	cmd_task@data^(0+640)
 15058  015F                     i5Ll6423:	
 15059                           
 15060                           ;main.c: 270: LATC = do0p0;
 15061  015F  0021               	movlb	1	; select bank1
 15062  0160  0866               	movf	cmd_task@do0p0^(0+128),w
 15063  0161  0022               	movlb	2	; select bank2
 15064  0162  008E               	movwf	14	;volatile
 15065  0163                     i5Ll6425:	
 15066                           
 15067                           ;main.c: 271: LATC = do0p1;
 15068  0163  0021               	movlb	1	; select bank1
 15069  0164  0865               	movf	cmd_task@do0p1^(0+128),w
 15070  0165  0022               	movlb	2	; select bank2
 15071  0166  008E               	movwf	14	;volatile
 15072  0167                     i5Ll6427:	
 15073                           
 15074                           ;main.c: 272: if (PORTC & input_mask) data = data | 0x01;
 15075  0167  0020               	movlb	0	; select bank0
 15076  0168  080E               	movf	14,w	;volatile
 15077  0169  0024               	movlb	4	; select bank4
 15078  016A  0568               	andwf	cmd_task@input_mask^(0+512),w
 15079  016B  1903               	btfsc	3,2
 15080  016C  2971               	ljmp	i5Ll6431
 15081  016D  296F               	ljmp	i5Ll6429
 15082  016E                     i5Lu5581:	
 15083  016E  2971               	ljmp	i5Ll6431
 15084  016F                     i5Lu5580:	
 15085  016F                     i5Ll6429:	
 15086  016F  0025               	movlb	5	; select bank5
 15087  0170  1443               	bsf	cmd_task@data^(0+640),0
 15088  0171                     i5Ll6431:	
 15089                           
 15090                           ;main.c: 274: LATC = do0p0;
 15091  0171  0021               	movlb	1	; select bank1
 15092  0172  0866               	movf	cmd_task@do0p0^(0+128),w
 15093  0173  0022               	movlb	2	; select bank2
 15094  0174  008E               	movwf	14	;volatile
 15095                           
 15096                           ;main.c: 275: LATC = do0p1;
 15097  0175  0021               	movlb	1	; select bank1
 15098  0176  0865               	movf	cmd_task@do0p1^(0+128),w
 15099  0177  0022               	movlb	2	; select bank2
 15100  0178  008E               	movwf	14	;volatile
 15101  0179                     i5Ll6433:	
 15102                           
 15103                           ;main.c: 276: if (PORTC & input_mask) data = data | 0x02;
 15104  0179  0020               	movlb	0	; select bank0
 15105  017A  080E               	movf	14,w	;volatile
 15106  017B  0024               	movlb	4	; select bank4
 15107  017C  0568               	andwf	cmd_task@input_mask^(0+512),w
 15108  017D  1903               	btfsc	3,2
 15109  017E  2983               	ljmp	i5Ll6437
 15110  017F  2981               	ljmp	i5Ll6435
 15111  0180                     i5Lu5591:	
 15112  0180  2983               	ljmp	i5Ll6437
 15113  0181                     i5Lu5590:	
 15114  0181                     i5Ll6435:	
 15115  0181  0025               	movlb	5	; select bank5
 15116  0182  14C3               	bsf	cmd_task@data^(0+640),1
 15117  0183                     i5Ll6437:	
 15118                           
 15119                           ;main.c: 278: LATC = do0p0;
 15120  0183  0021               	movlb	1	; select bank1
 15121  0184  0866               	movf	cmd_task@do0p0^(0+128),w
 15122  0185  0022               	movlb	2	; select bank2
 15123  0186  008E               	movwf	14	;volatile
 15124                           
 15125                           ;main.c: 279: LATC = do0p1;
 15126  0187  0021               	movlb	1	; select bank1
 15127  0188  0865               	movf	cmd_task@do0p1^(0+128),w
 15128  0189  0022               	movlb	2	; select bank2
 15129  018A  008E               	movwf	14	;volatile
 15130  018B                     i5Ll6439:	
 15131                           
 15132                           ;main.c: 280: if (PORTC & input_mask) data = data | 0x04;
 15133  018B  0020               	movlb	0	; select bank0
 15134  018C  080E               	movf	14,w	;volatile
 15135  018D  0024               	movlb	4	; select bank4
 15136  018E  0568               	andwf	cmd_task@input_mask^(0+512),w
 15137  018F  1903               	btfsc	3,2
 15138  0190  2995               	ljmp	i5Ll6443
 15139  0191  2993               	ljmp	i5Ll6441
 15140  0192                     i5Lu5601:	
 15141  0192  2995               	ljmp	i5Ll6443
 15142  0193                     i5Lu5600:	
 15143  0193                     i5Ll6441:	
 15144  0193  0025               	movlb	5	; select bank5
 15145  0194  1543               	bsf	cmd_task@data^(0+640),2
 15146  0195                     i5Ll6443:	
 15147                           
 15148                           ;main.c: 282: LATC = do0p0;
 15149  0195  0021               	movlb	1	; select bank1
 15150  0196  0866               	movf	cmd_task@do0p0^(0+128),w
 15151  0197  0022               	movlb	2	; select bank2
 15152  0198  008E               	movwf	14	;volatile
 15153                           
 15154                           ;main.c: 283: LATC = do0p1;
 15155  0199  0021               	movlb	1	; select bank1
 15156  019A  0865               	movf	cmd_task@do0p1^(0+128),w
 15157  019B  0022               	movlb	2	; select bank2
 15158  019C  008E               	movwf	14	;volatile
 15159  019D                     i5Ll6445:	
 15160                           
 15161                           ;main.c: 284: if (PORTC & input_mask) data = data | 0x08;
 15162  019D  0020               	movlb	0	; select bank0
 15163  019E  080E               	movf	14,w	;volatile
 15164  019F  0024               	movlb	4	; select bank4
 15165  01A0  0568               	andwf	cmd_task@input_mask^(0+512),w
 15166  01A1  1903               	btfsc	3,2
 15167  01A2  29A7               	ljmp	i5Ll6449
 15168  01A3  29A5               	ljmp	i5Ll6447
 15169  01A4                     i5Lu5611:	
 15170  01A4  29A7               	ljmp	i5Ll6449
 15171  01A5                     i5Lu5610:	
 15172  01A5                     i5Ll6447:	
 15173  01A5  0025               	movlb	5	; select bank5
 15174  01A6  15C3               	bsf	cmd_task@data^(0+640),3
 15175  01A7                     i5Ll6449:	
 15176                           
 15177                           ;main.c: 286: LATC = do0p0;
 15178  01A7  0021               	movlb	1	; select bank1
 15179  01A8  0866               	movf	cmd_task@do0p0^(0+128),w
 15180  01A9  0022               	movlb	2	; select bank2
 15181  01AA  008E               	movwf	14	;volatile
 15182                           
 15183                           ;main.c: 287: LATC = do0p1;
 15184  01AB  0021               	movlb	1	; select bank1
 15185  01AC  0865               	movf	cmd_task@do0p1^(0+128),w
 15186  01AD  0022               	movlb	2	; select bank2
 15187  01AE  008E               	movwf	14	;volatile
 15188  01AF                     i5Ll6451:	
 15189                           
 15190                           ;main.c: 288: if (PORTC & input_mask) data = data | 0x10;
 15191  01AF  0020               	movlb	0	; select bank0
 15192  01B0  080E               	movf	14,w	;volatile
 15193  01B1  0024               	movlb	4	; select bank4
 15194  01B2  0568               	andwf	cmd_task@input_mask^(0+512),w
 15195  01B3  1903               	btfsc	3,2
 15196  01B4  29B9               	ljmp	i5Ll6455
 15197  01B5  29B7               	ljmp	i5Ll6453
 15198  01B6                     i5Lu5621:	
 15199  01B6  29B9               	ljmp	i5Ll6455
 15200  01B7                     i5Lu5620:	
 15201  01B7                     i5Ll6453:	
 15202  01B7  0025               	movlb	5	; select bank5
 15203  01B8  1643               	bsf	cmd_task@data^(0+640),4
 15204  01B9                     i5Ll6455:	
 15205                           
 15206                           ;main.c: 290: LATC = do0p0;
 15207  01B9  0021               	movlb	1	; select bank1
 15208  01BA  0866               	movf	cmd_task@do0p0^(0+128),w
 15209  01BB  0022               	movlb	2	; select bank2
 15210  01BC  008E               	movwf	14	;volatile
 15211                           
 15212                           ;main.c: 291: LATC = do0p1;
 15213  01BD  0021               	movlb	1	; select bank1
 15214  01BE  0865               	movf	cmd_task@do0p1^(0+128),w
 15215  01BF  0022               	movlb	2	; select bank2
 15216  01C0  008E               	movwf	14	;volatile
 15217  01C1                     i5Ll6457:	
 15218                           
 15219                           ;main.c: 292: if (PORTC & input_mask) data = data | 0x20;
 15220  01C1  0020               	movlb	0	; select bank0
 15221  01C2  080E               	movf	14,w	;volatile
 15222  01C3  0024               	movlb	4	; select bank4
 15223  01C4  0568               	andwf	cmd_task@input_mask^(0+512),w
 15224  01C5  1903               	btfsc	3,2
 15225  01C6  29CB               	ljmp	i5Ll6461
 15226  01C7  29C9               	ljmp	i5Ll6459
 15227  01C8                     i5Lu5631:	
 15228  01C8  29CB               	ljmp	i5Ll6461
 15229  01C9                     i5Lu5630:	
 15230  01C9                     i5Ll6459:	
 15231  01C9  0025               	movlb	5	; select bank5
 15232  01CA  16C3               	bsf	cmd_task@data^(0+640),5
 15233  01CB                     i5Ll6461:	
 15234                           
 15235                           ;main.c: 294: LATC = do0p0;
 15236  01CB  0021               	movlb	1	; select bank1
 15237  01CC  0866               	movf	cmd_task@do0p0^(0+128),w
 15238  01CD  0022               	movlb	2	; select bank2
 15239  01CE  008E               	movwf	14	;volatile
 15240                           
 15241                           ;main.c: 295: LATC = do0p1;
 15242  01CF  0021               	movlb	1	; select bank1
 15243  01D0  0865               	movf	cmd_task@do0p1^(0+128),w
 15244  01D1  0022               	movlb	2	; select bank2
 15245  01D2  008E               	movwf	14	;volatile
 15246  01D3                     i5Ll6463:	
 15247                           
 15248                           ;main.c: 296: if (PORTC & input_mask) data = data | 0x40;
 15249  01D3  0020               	movlb	0	; select bank0
 15250  01D4  080E               	movf	14,w	;volatile
 15251  01D5  0024               	movlb	4	; select bank4
 15252  01D6  0568               	andwf	cmd_task@input_mask^(0+512),w
 15253  01D7  1903               	btfsc	3,2
 15254  01D8  29DD               	ljmp	i5Ll6467
 15255  01D9  29DB               	ljmp	i5Ll6465
 15256  01DA                     i5Lu5641:	
 15257  01DA  29DD               	ljmp	i5Ll6467
 15258  01DB                     i5Lu5640:	
 15259  01DB                     i5Ll6465:	
 15260  01DB  0025               	movlb	5	; select bank5
 15261  01DC  1743               	bsf	cmd_task@data^(0+640),6
 15262  01DD                     i5Ll6467:	
 15263                           
 15264                           ;main.c: 298: LATC = do0p0;
 15265  01DD  0021               	movlb	1	; select bank1
 15266  01DE  0866               	movf	cmd_task@do0p0^(0+128),w
 15267  01DF  0022               	movlb	2	; select bank2
 15268  01E0  008E               	movwf	14	;volatile
 15269                           
 15270                           ;main.c: 299: LATC = do0p1;
 15271  01E1  0021               	movlb	1	; select bank1
 15272  01E2  0865               	movf	cmd_task@do0p1^(0+128),w
 15273  01E3  0022               	movlb	2	; select bank2
 15274  01E4  008E               	movwf	14	;volatile
 15275  01E5                     i5Ll6469:	
 15276                           
 15277                           ;main.c: 300: if (PORTC & input_mask) data = data | 0x80;
 15278  01E5  0020               	movlb	0	; select bank0
 15279  01E6  080E               	movf	14,w	;volatile
 15280  01E7  0024               	movlb	4	; select bank4
 15281  01E8  0568               	andwf	cmd_task@input_mask^(0+512),w
 15282  01E9  1903               	btfsc	3,2
 15283  01EA  29EF               	ljmp	i5Ll6473
 15284  01EB  29ED               	ljmp	i5Ll6471
 15285  01EC                     i5Lu5651:	
 15286  01EC  29EF               	ljmp	i5Ll6473
 15287  01ED                     i5Lu5650:	
 15288  01ED                     i5Ll6471:	
 15289  01ED  0025               	movlb	5	; select bank5
 15290  01EE  17C3               	bsf	cmd_task@data^(0+640),7
 15291  01EF                     i5Ll6473:	
 15292  01EF  0022               	movlb	2	; select bank2
 15293  01F0  086D               	movf	cmd_task@pt^(0+256),w
 15294  01F1  0086               	movwf	6
 15295  01F2  3002               	movlw	2	; select bank4/5
 15296  01F3  0087               	movwf	7
 15297  01F4  302E               	movlw	46
 15298  01F5  3FC0               	movwi [0]fsr1
 15299  01F6  3001               	movlw	1
 15300  01F7  3FC1               	movwi [1]fsr1
 15301  01F8                     i5Ll6475:	
 15302  01F8  0025               	movlb	5	; select bank5
 15303  01F9  085E               	movf	_cdc_trf_state^(0+640),w
 15304  01FA  1D03               	btfss	3,2
 15305  01FB  2F06               	ljmp	iL98
 15306  01FC  29FE               	ljmp	i5Ll6477
 15307  01FD                     i5Lu5661:	
 15308  01FD  2F06               	ljmp	iL98
 15309  01FE                     i5Lu5660:	
 15310  01FE                     i5Ll6477:	
 15311  01FE  3040               	movlw	64
 15312  01FF  0024               	movlb	4	; select bank4
 15313  0200  026A               	subwf	_usb_tx_ptr^(0+512),w
 15314  0201  1C03               	btfss	3,0
 15315  0202  2A06               	ljmp	i5Ll6479
 15316  0203  2F06               	ljmp	iL98
 15317  0204                     i5Lu5671:	
 15318  0204  2A06               	ljmp	i5Ll6479
 15319  0205                     i5Lu5670:	
 15320  0205  2F06               	ljmp	iL98
 15321  0206                     i5Ll6479:	
 15322  0206  086A               	movf	_usb_tx_ptr^(0+512),w
 15323  0207  3EA0               	addlw	160
 15324  0208  0086               	movwf	6
 15325  0209  0187               	clrf	7
 15326  020A  0025               	movlb	5	; select bank5
 15327  020B  0843               	movf	cmd_task@data^(0+640),w
 15328  020C  0081               	movwf	1
 15329  020D                     i5Ll6481:	
 15330  020D  0024               	movlb	4	; select bank4
 15331  020E  0AEA               	incf	_usb_tx_ptr^(0+512),f
 15332  020F                     i5Ll6483:	
 15333  020F  0025               	movlb	5	; select bank5
 15334  0210  0AC9               	incf	cmd_task@i^(0+640),f
 15335  0211                     i5Ll6485:	
 15336  0211  084D               	movf	cmd_task@num_bytes^(0+640),w
 15337  0212  0249               	subwf	cmd_task@i^(0+640),w
 15338  0213  1C03               	btfss	3,0
 15339  0214  295E               	ljmp	i5Ll6421
 15340  0215  2A17               	ljmp	i5Ll6487
 15341  0216                     i5Lu5681:	
 15342  0216  295E               	ljmp	i5Ll6421
 15343  0217                     i5Lu5680:	
 15344  0217                     i5Ll6487:	
 15345                           
 15346                           ;main.c: 303: }
 15347                           ;main.c: 305: data = 0;
 15348  0217  01C3               	clrf	cmd_task@data^(0+640)
 15349  0218                     i5Ll6489:	
 15350                           
 15351                           ;main.c: 306: uint8_t bit_to_set = 1;
 15352  0218  0022               	movlb	2	; select bank2
 15353  0219  01E8               	clrf	cmd_task@bit_to_set_2364^(0+256)
 15354  021A  0AE8               	incf	cmd_task@bit_to_set_2364^(0+256),f
 15355                           
 15356                           ;main.c: 308: for (i = 0; i < num_bits - 1; i += 1) {
 15357  021B  0025               	movlb	5	; select bank5
 15358  021C  01C9               	clrf	cmd_task@i^(0+640)
 15359  021D  2A36               	ljmp	i5Ll782
 15360  021E                     i5Ll6491:	
 15361                           
 15362                           ;main.c: 309: LATC = do0p0;
 15363  021E  0021               	movlb	1	; select bank1
 15364  021F  0866               	movf	cmd_task@do0p0^(0+128),w
 15365  0220  0022               	movlb	2	; select bank2
 15366  0221  008E               	movwf	14	;volatile
 15367                           
 15368                           ;main.c: 310: LATC = do0p1;
 15369  0222  0021               	movlb	1	; select bank1
 15370  0223  0865               	movf	cmd_task@do0p1^(0+128),w
 15371  0224  0022               	movlb	2	; select bank2
 15372  0225  008E               	movwf	14	;volatile
 15373  0226                     i5Ll6493:	
 15374                           
 15375                           ;main.c: 311: if (PORTC & input_mask) data = data | bit_to_set;
 15376  0226  0020               	movlb	0	; select bank0
 15377  0227  080E               	movf	14,w	;volatile
 15378  0228  0024               	movlb	4	; select bank4
 15379  0229  0568               	andwf	cmd_task@input_mask^(0+512),w
 15380  022A  1903               	btfsc	3,2
 15381  022B  2A32               	ljmp	i5Ll6497
 15382  022C  2A2E               	ljmp	i5Ll6495
 15383  022D                     i5Lu5691:	
 15384  022D  2A32               	ljmp	i5Ll6497
 15385  022E                     i5Lu5690:	
 15386  022E                     i5Ll6495:	
 15387  022E  0022               	movlb	2	; select bank2
 15388  022F  0868               	movf	cmd_task@bit_to_set_2364^(0+256),w
 15389  0230  0025               	movlb	5	; select bank5
 15390  0231  04C3               	iorwf	cmd_task@data^(0+640),f
 15391  0232                     i5Ll6497:	
 15392                           
 15393                           ;main.c: 313: bit_to_set = bit_to_set << 1;
 15394  0232  0022               	movlb	2	; select bank2
 15395  0233  35E8               	lslf	cmd_task@bit_to_set_2364^(0+256),f
 15396  0234                     i5Ll6499:	
 15397  0234  0025               	movlb	5	; select bank5
 15398  0235  0AC9               	incf	cmd_task@i^(0+640),f
 15399  0236                     i5Ll782:	
 15400  0236  084E               	movf	cmd_task@num_bits^(0+640),w
 15401  0237  3EFF               	addlw	255
 15402  0238  0022               	movlb	2	; select bank2
 15403  0239  00E0               	movwf	??_cmd_task^(0+256)
 15404  023A  30FF               	movlw	255
 15405  023B  1803               	btfsc	3,0
 15406  023C  3000               	movlw	0
 15407  023D  00E1               	movwf	(??_cmd_task^(0+256)+1)
 15408  023E  0861               	movf	(??_cmd_task+1)^(0+256),w
 15409  023F  3A80               	xorlw	128
 15410  0240  3C80               	sublw	128
 15411  0241  1D03               	btfss	3,2
 15412  0242  2A46               	ljmp	i5Lu5705
 15413  0243  0860               	movf	??_cmd_task^(0+256),w
 15414  0244  0025               	movlb	5	; select bank5
 15415  0245  0249               	subwf	cmd_task@i^(0+640),w
 15416  0246                     i5Lu5705:	
 15417  0246  1C03               	btfss	3,0
 15418  0247  2A1E               	ljmp	i5Ll6491
 15419  0248  2A4A               	ljmp	i5Ll6501
 15420  0249                     i5Lu5701:	
 15421  0249  2A1E               	ljmp	i5Ll6491
 15422  024A                     i5Lu5700:	
 15423  024A                     i5Ll6501:	
 15424                           
 15425                           ;main.c: 314: }
 15426                           ;main.c: 316: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
 15427  024A  0024               	movlb	4	; select bank4
 15428  024B  0869               	movf	cmd_task@sie^(0+512),w
 15429  024C  0709               	addwf	9,w
 15430  024D  0709               	addwf	9,w
 15431  024E  0709               	addwf	9,w
 15432  024F  3EA6               	addlw	(low ((_sie_configs| (0+768)+6)))& (0+255)
 15433  0250  0086               	movwf	6
 15434  0251  3003               	movlw	3	; select bank7/8
 15435  0252  0087               	movwf	7
 15436  0253  0801               	movf	1,w
 15437  0254  0022               	movlb	2	; select bank2
 15438  0255  00E5               	movwf	cmd_task@last_phase_overlay_2365^(0+256)
 15439  0256                     i5Ll6503:	
 15440                           
 15441                           ;main.c: 318: LATC = do0p0 | last_phase_overlay;
 15442  0256  0021               	movlb	1	; select bank1
 15443  0257  0866               	movf	cmd_task@do0p0^(0+128),w
 15444  0258  0022               	movlb	2	; select bank2
 15445  0259  0465               	iorwf	cmd_task@last_phase_overlay_2365^(0+256),w
 15446  025A  008E               	movwf	14	;volatile
 15447  025B                     i5Ll6505:	
 15448                           
 15449                           ;main.c: 319: LATC = do0p1 | last_phase_overlay;
 15450  025B  0021               	movlb	1	; select bank1
 15451  025C  0865               	movf	cmd_task@do0p1^(0+128),w
 15452  025D  0022               	movlb	2	; select bank2
 15453  025E  0465               	iorwf	cmd_task@last_phase_overlay_2365^(0+256),w
 15454  025F  008E               	movwf	14	;volatile
 15455  0260                     i5Ll6507:	
 15456                           
 15457                           ;main.c: 320: if (PORTC & input_mask) data = data | bit_to_set;
 15458  0260  0020               	movlb	0	; select bank0
 15459  0261  080E               	movf	14,w	;volatile
 15460  0262  0024               	movlb	4	; select bank4
 15461  0263  0568               	andwf	cmd_task@input_mask^(0+512),w
 15462  0264  1903               	btfsc	3,2
 15463  0265  2A6C               	ljmp	i5Ll6511
 15464  0266  2A68               	ljmp	i5Ll6509
 15465  0267                     i5Lu5711:	
 15466  0267  2A6C               	ljmp	i5Ll6511
 15467  0268                     i5Lu5710:	
 15468  0268                     i5Ll6509:	
 15469  0268  0022               	movlb	2	; select bank2
 15470  0269  0868               	movf	cmd_task@bit_to_set_2364^(0+256),w
 15471  026A  0025               	movlb	5	; select bank5
 15472  026B  04C3               	iorwf	cmd_task@data^(0+640),f
 15473  026C                     i5Ll6511:	
 15474  026C  0022               	movlb	2	; select bank2
 15475  026D  086D               	movf	cmd_task@pt^(0+256),w
 15476  026E  0086               	movwf	6
 15477  026F  3002               	movlw	2	; select bank4/5
 15478  0270  0087               	movwf	7
 15479  0271  3042               	movlw	66
 15480  0272  3FC0               	movwi [0]fsr1
 15481  0273  3001               	movlw	1
 15482  0274  3FC1               	movwi [1]fsr1
 15483  0275                     i5Ll6513:	
 15484  0275  0025               	movlb	5	; select bank5
 15485  0276  085E               	movf	_cdc_trf_state^(0+640),w
 15486  0277  1D03               	btfss	3,2
 15487  0278  2F06               	ljmp	iL98
 15488  0279  2A7B               	ljmp	i5Ll6515
 15489  027A                     i5Lu5721:	
 15490  027A  2F06               	ljmp	iL98
 15491  027B                     i5Lu5720:	
 15492  027B                     i5Ll6515:	
 15493  027B  3040               	movlw	64
 15494  027C  0024               	movlb	4	; select bank4
 15495  027D  026A               	subwf	_usb_tx_ptr^(0+512),w
 15496  027E  1C03               	btfss	3,0
 15497  027F  2A83               	ljmp	i5Ll6517
 15498  0280  2F06               	ljmp	iL98
 15499  0281                     i5Lu5731:	
 15500  0281  2A83               	ljmp	i5Ll6517
 15501  0282                     i5Lu5730:	
 15502  0282  2F06               	ljmp	iL98
 15503  0283                     i5Ll6517:	
 15504  0283  086A               	movf	_usb_tx_ptr^(0+512),w
 15505  0284  3EA0               	addlw	160
 15506  0285  0086               	movwf	6
 15507  0286  0187               	clrf	7
 15508  0287  0025               	movlb	5	; select bank5
 15509  0288  0843               	movf	cmd_task@data^(0+640),w
 15510  0289  0081               	movwf	1
 15511  028A  3191  29D0         	ljmp	i5Ll6215
 15512  028C                     i5Ll6521:	
 15513  028C  0B4A               	decfsz	cmd_task@inout_cfg^(0+640),w
 15514  028D  2BF5               	ljmp	i5Ll6619
 15515  028E  2A90               	ljmp	i5Ll6523
 15516  028F                     i5Lu5741:	
 15517  028F  2BF5               	ljmp	i5Ll6619
 15518  0290                     i5Lu5740:	
 15519  0290                     i5Ll6523:	
 15520                           
 15521                           ;main.c: 325: do1p0 = sie_configs[sie].do1p0;
 15522  0290  0024               	movlb	4	; select bank4
 15523  0291  0869               	movf	cmd_task@sie^(0+512),w
 15524  0292  0709               	addwf	9,w
 15525  0293  0709               	addwf	9,w
 15526  0294  0709               	addwf	9,w
 15527  0295  3EA4               	addlw	(low ((_sie_configs| (0+768)+4)))& (0+255)
 15528  0296  0086               	movwf	6
 15529  0297  3003               	movlw	3	; select bank7/8
 15530  0298  0087               	movwf	7
 15531  0299  0801               	movf	1,w
 15532  029A  0025               	movlb	5	; select bank5
 15533  029B  00CC               	movwf	cmd_task@do1p0^(0+640)
 15534                           
 15535                           ;main.c: 326: do1p1 = sie_configs[sie].do1p1;
 15536  029C  0024               	movlb	4	; select bank4
 15537  029D  0869               	movf	cmd_task@sie^(0+512),w
 15538  029E  0709               	addwf	9,w
 15539  029F  0709               	addwf	9,w
 15540  02A0  0709               	addwf	9,w
 15541  02A1  3EA5               	addlw	(low ((_sie_configs| (0+768)+5)))& (0+255)
 15542  02A2  0086               	movwf	6
 15543  02A3  0801               	movf	1,w
 15544  02A4  0025               	movlb	5	; select bank5
 15545  02A5  00CB               	movwf	cmd_task@do1p1^(0+640)
 15546  02A6                     i5Ll6525:	
 15547                           
 15548                           ;main.c: 328: for (i = 0; i < num_bytes; i += 1) {
 15549  02A6  01C9               	clrf	cmd_task@i^(0+640)
 15550  02A7  2B76               	ljmp	i5Ll6587
 15551  02A8                     i5Ll6527:	
 15552  02A8  0022               	movlb	2	; select bank2
 15553  02A9  086D               	movf	cmd_task@pt^(0+256),w
 15554  02AA  0086               	movwf	6
 15555  02AB  3002               	movlw	2	; select bank4/5
 15556  02AC  0087               	movwf	7
 15557  02AD  3049               	movlw	73
 15558  02AE  3FC0               	movwi [0]fsr1
 15559  02AF  3001               	movlw	1
 15560  02B0  3FC1               	movwi [1]fsr1
 15561  02B1                     i5Ll6529:	
 15562  02B1  0024               	movlb	4	; select bank4
 15563  02B2  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 15564  02B3  0021               	movlb	1	; select bank1
 15565  02B4  0267               	subwf	_usb_rx_ptr^(0+128),w
 15566  02B5  1C03               	btfss	3,0
 15567  02B6  2ABA               	ljmp	i5Ll6533
 15568  02B7  2F06               	ljmp	iL98
 15569  02B8                     i5Lu5751:	
 15570  02B8  2ABA               	ljmp	i5Ll6533
 15571  02B9                     i5Lu5750:	
 15572  02B9  2F06               	ljmp	iL98
 15573  02BA                     i5Ll6533:	
 15574  02BA  0867               	movf	_usb_rx_ptr^(0+128),w
 15575  02BB  0022               	movlb	2	; select bank2
 15576  02BC  00E0               	movwf	??_cmd_task^(0+256)
 15577  02BD  01E1               	clrf	(??_cmd_task^(0+256)+1)
 15578  02BE  0024               	movlb	4	; select bank4
 15579  02BF  076E               	addwf	_usb_rx_buf^(0+512),w
 15580  02C0  0086               	movwf	6
 15581  02C1  0022               	movlb	2	; select bank2
 15582  02C2  0861               	movf	(??_cmd_task+1)^(0+256),w
 15583  02C3  0024               	movlb	4	; select bank4
 15584  02C4  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 15585  02C5  0087               	movwf	7
 15586  02C6  0801               	movf	1,w
 15587  02C7  0022               	movlb	2	; select bank2
 15588  02C8  00EC               	movwf	cmd_task@data_2366^(0+256)
 15589  02C9                     i5Ll6535:	
 15590  02C9  0021               	movlb	1	; select bank1
 15591  02CA  0AE7               	incf	_usb_rx_ptr^(0+128),f
 15592  02CB                     i5Ll6537:	
 15593                           
 15594                           ;main.c: 331: if (data & 0x01) {
 15595  02CB  0022               	movlb	2	; select bank2
 15596  02CC  1C6C               	btfss	cmd_task@data_2366^(0+256),0
 15597  02CD  2AD9               	ljmp	i5Ll6541
 15598  02CE  2AD0               	ljmp	i5Ll6539
 15599  02CF                     i5Lu5761:	
 15600  02CF  2AD9               	ljmp	i5Ll6541
 15601  02D0                     i5Lu5760:	
 15602  02D0                     i5Ll6539:	
 15603                           
 15604                           ;main.c: 332: LATC = do1p0;
 15605  02D0  0025               	movlb	5	; select bank5
 15606  02D1  084C               	movf	cmd_task@do1p0^(0+640),w
 15607  02D2  0022               	movlb	2	; select bank2
 15608  02D3  008E               	movwf	14	;volatile
 15609                           
 15610                           ;main.c: 333: LATC = do1p1;
 15611  02D4  0025               	movlb	5	; select bank5
 15612  02D5  084B               	movf	cmd_task@do1p1^(0+640),w
 15613  02D6  0022               	movlb	2	; select bank2
 15614  02D7  008E               	movwf	14	;volatile
 15615  02D8  2AE1               	ljmp	i5Ll6543
 15616  02D9                     i5Ll6541:	
 15617                           
 15618                           ;main.c: 335: LATC = do0p0;
 15619  02D9  0021               	movlb	1	; select bank1
 15620  02DA  0866               	movf	cmd_task@do0p0^(0+128),w
 15621  02DB  0022               	movlb	2	; select bank2
 15622  02DC  008E               	movwf	14	;volatile
 15623                           
 15624                           ;main.c: 336: LATC = do0p1;
 15625  02DD  0021               	movlb	1	; select bank1
 15626  02DE  0865               	movf	cmd_task@do0p1^(0+128),w
 15627  02DF  0022               	movlb	2	; select bank2
 15628  02E0  008E               	movwf	14	;volatile
 15629  02E1                     i5Ll6543:	
 15630                           
 15631                           ;main.c: 337: }
 15632                           ;main.c: 339: if (data & 0x02) {
 15633  02E1  1CEC               	btfss	cmd_task@data_2366^(0+256),1
 15634  02E2  2AEE               	ljmp	i5Ll6547
 15635  02E3  2AE5               	ljmp	i5Ll6545
 15636  02E4                     i5Lu5771:	
 15637  02E4  2AEE               	ljmp	i5Ll6547
 15638  02E5                     i5Lu5770:	
 15639  02E5                     i5Ll6545:	
 15640                           
 15641                           ;main.c: 340: LATC = do1p0;
 15642  02E5  0025               	movlb	5	; select bank5
 15643  02E6  084C               	movf	cmd_task@do1p0^(0+640),w
 15644  02E7  0022               	movlb	2	; select bank2
 15645  02E8  008E               	movwf	14	;volatile
 15646                           
 15647                           ;main.c: 341: LATC = do1p1;
 15648  02E9  0025               	movlb	5	; select bank5
 15649  02EA  084B               	movf	cmd_task@do1p1^(0+640),w
 15650  02EB  0022               	movlb	2	; select bank2
 15651  02EC  008E               	movwf	14	;volatile
 15652  02ED  2AF6               	ljmp	i5Ll6549
 15653  02EE                     i5Ll6547:	
 15654                           
 15655                           ;main.c: 343: LATC = do0p0;
 15656  02EE  0021               	movlb	1	; select bank1
 15657  02EF  0866               	movf	cmd_task@do0p0^(0+128),w
 15658  02F0  0022               	movlb	2	; select bank2
 15659  02F1  008E               	movwf	14	;volatile
 15660                           
 15661                           ;main.c: 344: LATC = do0p1;
 15662  02F2  0021               	movlb	1	; select bank1
 15663  02F3  0865               	movf	cmd_task@do0p1^(0+128),w
 15664  02F4  0022               	movlb	2	; select bank2
 15665  02F5  008E               	movwf	14	;volatile
 15666  02F6                     i5Ll6549:	
 15667                           
 15668                           ;main.c: 345: }
 15669                           ;main.c: 347: if (data & 0x04) {
 15670  02F6  1D6C               	btfss	cmd_task@data_2366^(0+256),2
 15671  02F7  2B03               	ljmp	i5Ll6553
 15672  02F8  2AFA               	ljmp	i5Ll6551
 15673  02F9                     i5Lu5781:	
 15674  02F9  2B03               	ljmp	i5Ll6553
 15675  02FA                     i5Lu5780:	
 15676  02FA                     i5Ll6551:	
 15677                           
 15678                           ;main.c: 348: LATC = do1p0;
 15679  02FA  0025               	movlb	5	; select bank5
 15680  02FB  084C               	movf	cmd_task@do1p0^(0+640),w
 15681  02FC  0022               	movlb	2	; select bank2
 15682  02FD  008E               	movwf	14	;volatile
 15683                           
 15684                           ;main.c: 349: LATC = do1p1;
 15685  02FE  0025               	movlb	5	; select bank5
 15686  02FF  084B               	movf	cmd_task@do1p1^(0+640),w
 15687  0300  0022               	movlb	2	; select bank2
 15688  0301  008E               	movwf	14	;volatile
 15689  0302  2B0B               	ljmp	i5Ll6555
 15690  0303                     i5Ll6553:	
 15691                           
 15692                           ;main.c: 351: LATC = do0p0;
 15693  0303  0021               	movlb	1	; select bank1
 15694  0304  0866               	movf	cmd_task@do0p0^(0+128),w
 15695  0305  0022               	movlb	2	; select bank2
 15696  0306  008E               	movwf	14	;volatile
 15697                           
 15698                           ;main.c: 352: LATC = do0p1;
 15699  0307  0021               	movlb	1	; select bank1
 15700  0308  0865               	movf	cmd_task@do0p1^(0+128),w
 15701  0309  0022               	movlb	2	; select bank2
 15702  030A  008E               	movwf	14	;volatile
 15703  030B                     i5Ll6555:	
 15704                           
 15705                           ;main.c: 353: }
 15706                           ;main.c: 355: if (data & 0x08) {
 15707  030B  1DEC               	btfss	cmd_task@data_2366^(0+256),3
 15708  030C  2B18               	ljmp	i5Ll6559
 15709  030D  2B0F               	ljmp	i5Ll6557
 15710  030E                     i5Lu5791:	
 15711  030E  2B18               	ljmp	i5Ll6559
 15712  030F                     i5Lu5790:	
 15713  030F                     i5Ll6557:	
 15714                           
 15715                           ;main.c: 356: LATC = do1p0;
 15716  030F  0025               	movlb	5	; select bank5
 15717  0310  084C               	movf	cmd_task@do1p0^(0+640),w
 15718  0311  0022               	movlb	2	; select bank2
 15719  0312  008E               	movwf	14	;volatile
 15720                           
 15721                           ;main.c: 357: LATC = do1p1;
 15722  0313  0025               	movlb	5	; select bank5
 15723  0314  084B               	movf	cmd_task@do1p1^(0+640),w
 15724  0315  0022               	movlb	2	; select bank2
 15725  0316  008E               	movwf	14	;volatile
 15726  0317  2B20               	ljmp	i5Ll6561
 15727  0318                     i5Ll6559:	
 15728                           
 15729                           ;main.c: 359: LATC = do0p0;
 15730  0318  0021               	movlb	1	; select bank1
 15731  0319  0866               	movf	cmd_task@do0p0^(0+128),w
 15732  031A  0022               	movlb	2	; select bank2
 15733  031B  008E               	movwf	14	;volatile
 15734                           
 15735                           ;main.c: 360: LATC = do0p1;
 15736  031C  0021               	movlb	1	; select bank1
 15737  031D  0865               	movf	cmd_task@do0p1^(0+128),w
 15738  031E  0022               	movlb	2	; select bank2
 15739  031F  008E               	movwf	14	;volatile
 15740  0320                     i5Ll6561:	
 15741                           
 15742                           ;main.c: 361: }
 15743                           ;main.c: 363: if (data & 0x10) {
 15744  0320  1E6C               	btfss	cmd_task@data_2366^(0+256),4
 15745  0321  2B2D               	ljmp	i5Ll6565
 15746  0322  2B24               	ljmp	i5Ll6563
 15747  0323                     i5Lu5801:	
 15748  0323  2B2D               	ljmp	i5Ll6565
 15749  0324                     i5Lu5800:	
 15750  0324                     i5Ll6563:	
 15751                           
 15752                           ;main.c: 364: LATC = do1p0;
 15753  0324  0025               	movlb	5	; select bank5
 15754  0325  084C               	movf	cmd_task@do1p0^(0+640),w
 15755  0326  0022               	movlb	2	; select bank2
 15756  0327  008E               	movwf	14	;volatile
 15757                           
 15758                           ;main.c: 365: LATC = do1p1;
 15759  0328  0025               	movlb	5	; select bank5
 15760  0329  084B               	movf	cmd_task@do1p1^(0+640),w
 15761  032A  0022               	movlb	2	; select bank2
 15762  032B  008E               	movwf	14	;volatile
 15763  032C  2B35               	ljmp	i5Ll6567
 15764  032D                     i5Ll6565:	
 15765                           
 15766                           ;main.c: 367: LATC = do0p0;
 15767  032D  0021               	movlb	1	; select bank1
 15768  032E  0866               	movf	cmd_task@do0p0^(0+128),w
 15769  032F  0022               	movlb	2	; select bank2
 15770  0330  008E               	movwf	14	;volatile
 15771                           
 15772                           ;main.c: 368: LATC = do0p1;
 15773  0331  0021               	movlb	1	; select bank1
 15774  0332  0865               	movf	cmd_task@do0p1^(0+128),w
 15775  0333  0022               	movlb	2	; select bank2
 15776  0334  008E               	movwf	14	;volatile
 15777  0335                     i5Ll6567:	
 15778                           
 15779                           ;main.c: 369: }
 15780                           ;main.c: 371: if (data & 0x20) {
 15781  0335  1EEC               	btfss	cmd_task@data_2366^(0+256),5
 15782  0336  2B42               	ljmp	i5Ll6571
 15783  0337  2B39               	ljmp	i5Ll6569
 15784  0338                     i5Lu5811:	
 15785  0338  2B42               	ljmp	i5Ll6571
 15786  0339                     i5Lu5810:	
 15787  0339                     i5Ll6569:	
 15788                           
 15789                           ;main.c: 372: LATC = do1p0;
 15790  0339  0025               	movlb	5	; select bank5
 15791  033A  084C               	movf	cmd_task@do1p0^(0+640),w
 15792  033B  0022               	movlb	2	; select bank2
 15793  033C  008E               	movwf	14	;volatile
 15794                           
 15795                           ;main.c: 373: LATC = do1p1;
 15796  033D  0025               	movlb	5	; select bank5
 15797  033E  084B               	movf	cmd_task@do1p1^(0+640),w
 15798  033F  0022               	movlb	2	; select bank2
 15799  0340  008E               	movwf	14	;volatile
 15800  0341  2B4A               	ljmp	i5Ll6573
 15801  0342                     i5Ll6571:	
 15802                           
 15803                           ;main.c: 375: LATC = do0p0;
 15804  0342  0021               	movlb	1	; select bank1
 15805  0343  0866               	movf	cmd_task@do0p0^(0+128),w
 15806  0344  0022               	movlb	2	; select bank2
 15807  0345  008E               	movwf	14	;volatile
 15808                           
 15809                           ;main.c: 376: LATC = do0p1;
 15810  0346  0021               	movlb	1	; select bank1
 15811  0347  0865               	movf	cmd_task@do0p1^(0+128),w
 15812  0348  0022               	movlb	2	; select bank2
 15813  0349  008E               	movwf	14	;volatile
 15814  034A                     i5Ll6573:	
 15815                           
 15816                           ;main.c: 377: }
 15817                           ;main.c: 379: if (data & 0x40) {
 15818  034A  1F6C               	btfss	cmd_task@data_2366^(0+256),6
 15819  034B  2B57               	ljmp	i5Ll6577
 15820  034C  2B4E               	ljmp	i5Ll6575
 15821  034D                     i5Lu5821:	
 15822  034D  2B57               	ljmp	i5Ll6577
 15823  034E                     i5Lu5820:	
 15824  034E                     i5Ll6575:	
 15825                           
 15826                           ;main.c: 380: LATC = do1p0;
 15827  034E  0025               	movlb	5	; select bank5
 15828  034F  084C               	movf	cmd_task@do1p0^(0+640),w
 15829  0350  0022               	movlb	2	; select bank2
 15830  0351  008E               	movwf	14	;volatile
 15831                           
 15832                           ;main.c: 381: LATC = do1p1;
 15833  0352  0025               	movlb	5	; select bank5
 15834  0353  084B               	movf	cmd_task@do1p1^(0+640),w
 15835  0354  0022               	movlb	2	; select bank2
 15836  0355  008E               	movwf	14	;volatile
 15837  0356  2B5F               	ljmp	i5Ll6579
 15838  0357                     i5Ll6577:	
 15839                           
 15840                           ;main.c: 383: LATC = do0p0;
 15841  0357  0021               	movlb	1	; select bank1
 15842  0358  0866               	movf	cmd_task@do0p0^(0+128),w
 15843  0359  0022               	movlb	2	; select bank2
 15844  035A  008E               	movwf	14	;volatile
 15845                           
 15846                           ;main.c: 384: LATC = do0p1;
 15847  035B  0021               	movlb	1	; select bank1
 15848  035C  0865               	movf	cmd_task@do0p1^(0+128),w
 15849  035D  0022               	movlb	2	; select bank2
 15850  035E  008E               	movwf	14	;volatile
 15851  035F                     i5Ll6579:	
 15852                           
 15853                           ;main.c: 385: }
 15854                           ;main.c: 387: if (data & 0x80) {
 15855  035F  1FEC               	btfss	cmd_task@data_2366^(0+256),7
 15856  0360  2B6C               	ljmp	i5Ll6583
 15857  0361  2B63               	ljmp	i5Ll6581
 15858  0362                     i5Lu5831:	
 15859  0362  2B6C               	ljmp	i5Ll6583
 15860  0363                     i5Lu5830:	
 15861  0363                     i5Ll6581:	
 15862                           
 15863                           ;main.c: 388: LATC = do1p0;
 15864  0363  0025               	movlb	5	; select bank5
 15865  0364  084C               	movf	cmd_task@do1p0^(0+640),w
 15866  0365  0022               	movlb	2	; select bank2
 15867  0366  008E               	movwf	14	;volatile
 15868                           
 15869                           ;main.c: 389: LATC = do1p1;
 15870  0367  0025               	movlb	5	; select bank5
 15871  0368  084B               	movf	cmd_task@do1p1^(0+640),w
 15872  0369  0022               	movlb	2	; select bank2
 15873  036A  008E               	movwf	14	;volatile
 15874  036B  2B74               	ljmp	i5Ll6585
 15875  036C                     i5Ll6583:	
 15876                           
 15877                           ;main.c: 391: LATC = do0p0;
 15878  036C  0021               	movlb	1	; select bank1
 15879  036D  0866               	movf	cmd_task@do0p0^(0+128),w
 15880  036E  0022               	movlb	2	; select bank2
 15881  036F  008E               	movwf	14	;volatile
 15882                           
 15883                           ;main.c: 392: LATC = do0p1;
 15884  0370  0021               	movlb	1	; select bank1
 15885  0371  0865               	movf	cmd_task@do0p1^(0+128),w
 15886  0372  0022               	movlb	2	; select bank2
 15887  0373  008E               	movwf	14	;volatile
 15888  0374                     i5Ll6585:	
 15889  0374  0025               	movlb	5	; select bank5
 15890  0375  0AC9               	incf	cmd_task@i^(0+640),f
 15891  0376                     i5Ll6587:	
 15892  0376  084D               	movf	cmd_task@num_bytes^(0+640),w
 15893  0377  0249               	subwf	cmd_task@i^(0+640),w
 15894  0378  1C03               	btfss	3,0
 15895  0379  2AA8               	ljmp	i5Ll6527
 15896  037A  2B7C               	ljmp	i5Ll6589
 15897  037B                     i5Lu5841:	
 15898  037B  2AA8               	ljmp	i5Ll6527
 15899  037C                     i5Lu5840:	
 15900  037C                     i5Ll6589:	
 15901  037C  0022               	movlb	2	; select bank2
 15902  037D  086D               	movf	cmd_task@pt^(0+256),w
 15903  037E  0086               	movwf	6
 15904  037F  3002               	movlw	2	; select bank4/5
 15905  0380  0087               	movwf	7
 15906  0381  308C               	movlw	140
 15907  0382  3FC0               	movwi [0]fsr1
 15908  0383  3001               	movlw	1
 15909  0384  3FC1               	movwi [1]fsr1
 15910  0385                     i5Ll6591:	
 15911  0385  0024               	movlb	4	; select bank4
 15912  0386  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 15913  0387  0021               	movlb	1	; select bank1
 15914  0388  0267               	subwf	_usb_rx_ptr^(0+128),w
 15915  0389  1C03               	btfss	3,0
 15916  038A  2B8E               	ljmp	i5Ll6595
 15917  038B  2F06               	ljmp	iL98
 15918  038C                     i5Lu5851:	
 15919  038C  2B8E               	ljmp	i5Ll6595
 15920  038D                     i5Lu5850:	
 15921  038D  2F06               	ljmp	iL98
 15922  038E                     i5Ll6595:	
 15923  038E  0867               	movf	_usb_rx_ptr^(0+128),w
 15924  038F  0022               	movlb	2	; select bank2
 15925  0390  00E0               	movwf	??_cmd_task^(0+256)
 15926  0391  01E1               	clrf	(??_cmd_task^(0+256)+1)
 15927  0392  0024               	movlb	4	; select bank4
 15928  0393  076E               	addwf	_usb_rx_buf^(0+512),w
 15929  0394  0086               	movwf	6
 15930  0395  0022               	movlb	2	; select bank2
 15931  0396  0861               	movf	(??_cmd_task+1)^(0+256),w
 15932  0397  0024               	movlb	4	; select bank4
 15933  0398  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 15934  0399  0087               	movwf	7
 15935  039A  0801               	movf	1,w
 15936  039B  0022               	movlb	2	; select bank2
 15937  039C  00E9               	movwf	cmd_task@data_2367^(0+256)
 15938  039D                     i5Ll6597:	
 15939  039D  0021               	movlb	1	; select bank1
 15940  039E  0AE7               	incf	_usb_rx_ptr^(0+128),f
 15941  039F                     i5Ll6599:	
 15942                           
 15943                           ;main.c: 398: for (i = 0; i < num_bits - 1; i += 1) {
 15944  039F  0025               	movlb	5	; select bank5
 15945  03A0  01C9               	clrf	cmd_task@i^(0+640)
 15946  03A1  2BBB               	ljmp	i5Ll6609
 15947  03A2                     i5Ll823:	
 15948                           
 15949                           ;main.c: 399: if (data & 1) {
 15950  03A2  0022               	movlb	2	; select bank2
 15951  03A3  1C69               	btfss	cmd_task@data_2367^(0+256),0
 15952  03A4  2BB0               	ljmp	i5Ll6603
 15953  03A5  2BA7               	ljmp	i5Ll6601
 15954  03A6                     i5Lu5861:	
 15955  03A6  2BB0               	ljmp	i5Ll6603
 15956  03A7                     i5Lu5860:	
 15957  03A7                     i5Ll6601:	
 15958                           
 15959                           ;main.c: 400: LATC = do1p0;
 15960  03A7  0025               	movlb	5	; select bank5
 15961  03A8  084C               	movf	cmd_task@do1p0^(0+640),w
 15962  03A9  0022               	movlb	2	; select bank2
 15963  03AA  008E               	movwf	14	;volatile
 15964                           
 15965                           ;main.c: 401: LATC = do1p1;
 15966  03AB  0025               	movlb	5	; select bank5
 15967  03AC  084B               	movf	cmd_task@do1p1^(0+640),w
 15968  03AD  0022               	movlb	2	; select bank2
 15969  03AE  008E               	movwf	14	;volatile
 15970  03AF  2BB8               	ljmp	i5Ll6605
 15971  03B0                     i5Ll6603:	
 15972                           
 15973                           ;main.c: 403: LATC = do0p0;
 15974  03B0  0021               	movlb	1	; select bank1
 15975  03B1  0866               	movf	cmd_task@do0p0^(0+128),w
 15976  03B2  0022               	movlb	2	; select bank2
 15977  03B3  008E               	movwf	14	;volatile
 15978                           
 15979                           ;main.c: 404: LATC = do0p1;
 15980  03B4  0021               	movlb	1	; select bank1
 15981  03B5  0865               	movf	cmd_task@do0p1^(0+128),w
 15982  03B6  0022               	movlb	2	; select bank2
 15983  03B7  008E               	movwf	14	;volatile
 15984  03B8                     i5Ll6605:	
 15985                           
 15986                           ;main.c: 405: }
 15987                           ;main.c: 407: data = data >> 1;
 15988  03B8  36E9               	lsrf	cmd_task@data_2367^(0+256),f
 15989  03B9                     i5Ll6607:	
 15990  03B9  0025               	movlb	5	; select bank5
 15991  03BA  0AC9               	incf	cmd_task@i^(0+640),f
 15992  03BB                     i5Ll6609:	
 15993  03BB  084E               	movf	cmd_task@num_bits^(0+640),w
 15994  03BC  3EFF               	addlw	255
 15995  03BD  0022               	movlb	2	; select bank2
 15996  03BE  00E0               	movwf	??_cmd_task^(0+256)
 15997  03BF  30FF               	movlw	255
 15998  03C0  1803               	btfsc	3,0
 15999  03C1  3000               	movlw	0
 16000  03C2  00E1               	movwf	(??_cmd_task^(0+256)+1)
 16001  03C3  0861               	movf	(??_cmd_task+1)^(0+256),w
 16002  03C4  3A80               	xorlw	128
 16003  03C5  3C80               	sublw	128
 16004  03C6  1D03               	btfss	3,2
 16005  03C7  2BCB               	ljmp	i5Lu5875
 16006  03C8  0860               	movf	??_cmd_task^(0+256),w
 16007  03C9  0025               	movlb	5	; select bank5
 16008  03CA  0249               	subwf	cmd_task@i^(0+640),w
 16009  03CB                     i5Lu5875:	
 16010  03CB  1C03               	btfss	3,0
 16011  03CC  2BA2               	ljmp	i5Ll823
 16012  03CD  2BCF               	ljmp	i5Ll6611
 16013  03CE                     i5Lu5871:	
 16014  03CE  2BA2               	ljmp	i5Ll823
 16015  03CF                     i5Lu5870:	
 16016  03CF                     i5Ll6611:	
 16017                           
 16018                           ;main.c: 408: }
 16019                           ;main.c: 410: uint8_t last_phase_overlay = sie_configs[sie].last_phase_overlay;
 16020  03CF  0024               	movlb	4	; select bank4
 16021  03D0  0869               	movf	cmd_task@sie^(0+512),w
 16022  03D1  0709               	addwf	9,w
 16023  03D2  0709               	addwf	9,w
 16024  03D3  0709               	addwf	9,w
 16025  03D4  3EA6               	addlw	(low ((_sie_configs| (0+768)+6)))& (0+255)
 16026  03D5  0086               	movwf	6
 16027  03D6  3003               	movlw	3	; select bank7/8
 16028  03D7  0087               	movwf	7
 16029  03D8  0801               	movf	1,w
 16030  03D9  0022               	movlb	2	; select bank2
 16031  03DA  00EB               	movwf	cmd_task@last_phase_overlay_2368^(0+256)
 16032  03DB                     i5Ll6613:	
 16033                           
 16034                           ;main.c: 412: if (data & 1) {
 16035  03DB  1C69               	btfss	cmd_task@data_2367^(0+256),0
 16036  03DC  2BEA               	ljmp	i5Ll6617
 16037  03DD  2BDF               	ljmp	i5Ll6615
 16038  03DE                     i5Lu5881:	
 16039  03DE  2BEA               	ljmp	i5Ll6617
 16040  03DF                     i5Lu5880:	
 16041  03DF                     i5Ll6615:	
 16042                           
 16043                           ;main.c: 413: LATC = do1p0 | last_phase_overlay;
 16044  03DF  0025               	movlb	5	; select bank5
 16045  03E0  084C               	movf	cmd_task@do1p0^(0+640),w
 16046  03E1  0022               	movlb	2	; select bank2
 16047  03E2  046B               	iorwf	cmd_task@last_phase_overlay_2368^(0+256),w
 16048  03E3  008E               	movwf	14	;volatile
 16049                           
 16050                           ;main.c: 414: LATC = do1p1 | last_phase_overlay;
 16051  03E4  0025               	movlb	5	; select bank5
 16052  03E5  084B               	movf	cmd_task@do1p1^(0+640),w
 16053  03E6  0022               	movlb	2	; select bank2
 16054  03E7  046B               	iorwf	cmd_task@last_phase_overlay_2368^(0+256),w
 16055  03E8  008E               	movwf	14	;volatile
 16056  03E9  2916               	ljmp	i5Lu5521
 16057  03EA                     i5Ll6617:	
 16058                           
 16059                           ;main.c: 416: LATC = do0p0 | last_phase_overlay;
 16060  03EA  0021               	movlb	1	; select bank1
 16061  03EB  0866               	movf	cmd_task@do0p0^(0+128),w
 16062  03EC  0022               	movlb	2	; select bank2
 16063  03ED  046B               	iorwf	cmd_task@last_phase_overlay_2368^(0+256),w
 16064  03EE  008E               	movwf	14	;volatile
 16065                           
 16066                           ;main.c: 417: LATC = do0p1 | last_phase_overlay;
 16067  03EF  0021               	movlb	1	; select bank1
 16068  03F0  0865               	movf	cmd_task@do0p1^(0+128),w
 16069  03F1  0022               	movlb	2	; select bank2
 16070  03F2  046B               	iorwf	cmd_task@last_phase_overlay_2368^(0+256),w
 16071  03F3  008E               	movwf	14	;volatile
 16072  03F4  2916               	ljmp	i5Lu5521
 16073  03F5                     i5Ll6619:	
 16074  03F5  084A               	movf	cmd_task@inout_cfg^(0+640),w
 16075  03F6  1D03               	btfss	3,2
 16076  03F7  2916               	ljmp	i5Lu5521
 16077  03F8  2BFA               	ljmp	i5Ll6621
 16078  03F9                     i5Lu5891:	
 16079  03F9  2916               	ljmp	i5Lu5521
 16080  03FA                     i5Lu5890:	
 16081  03FA                     i5Ll6621:	
 16082                           
 16083                           ;main.c: 421: for (i = 0; i < num_bytes; i += 1) {
 16084  03FA  01C9               	clrf	cmd_task@i^(0+640)
 16085  03FB  2C3E               	ljmp	i5Ll6627
 16086  03FC                     i5Ll6623:	
 16087                           
 16088                           ;main.c: 422: LATC = do0p0;
 16089  03FC  0021               	movlb	1	; select bank1
 16090  03FD  0866               	movf	cmd_task@do0p0^(0+128),w
 16091  03FE  0022               	movlb	2	; select bank2
 16092  03FF  008E               	movwf	14	;volatile
 16093                           
 16094                           ;main.c: 423: LATC = do0p1;
 16095  0400  0021               	movlb	1	; select bank1
 16096  0401  0865               	movf	cmd_task@do0p1^(0+128),w
 16097  0402  0022               	movlb	2	; select bank2
 16098  0403  008E               	movwf	14	;volatile
 16099                           
 16100                           ;main.c: 424: LATC = do0p0;
 16101  0404  0021               	movlb	1	; select bank1
 16102  0405  0866               	movf	cmd_task@do0p0^(0+128),w
 16103  0406  0022               	movlb	2	; select bank2
 16104  0407  008E               	movwf	14	;volatile
 16105                           
 16106                           ;main.c: 425: LATC = do0p1;
 16107  0408  0021               	movlb	1	; select bank1
 16108  0409  0865               	movf	cmd_task@do0p1^(0+128),w
 16109  040A  0022               	movlb	2	; select bank2
 16110  040B  008E               	movwf	14	;volatile
 16111                           
 16112                           ;main.c: 426: LATC = do0p0;
 16113  040C  0021               	movlb	1	; select bank1
 16114  040D  0866               	movf	cmd_task@do0p0^(0+128),w
 16115  040E  0022               	movlb	2	; select bank2
 16116  040F  008E               	movwf	14	;volatile
 16117                           
 16118                           ;main.c: 427: LATC = do0p1;
 16119  0410  0021               	movlb	1	; select bank1
 16120  0411  0865               	movf	cmd_task@do0p1^(0+128),w
 16121  0412  0022               	movlb	2	; select bank2
 16122  0413  008E               	movwf	14	;volatile
 16123                           
 16124                           ;main.c: 428: LATC = do0p0;
 16125  0414  0021               	movlb	1	; select bank1
 16126  0415  0866               	movf	cmd_task@do0p0^(0+128),w
 16127  0416  0022               	movlb	2	; select bank2
 16128  0417  008E               	movwf	14	;volatile
 16129                           
 16130                           ;main.c: 429: LATC = do0p1;
 16131  0418  0021               	movlb	1	; select bank1
 16132  0419  0865               	movf	cmd_task@do0p1^(0+128),w
 16133  041A  0022               	movlb	2	; select bank2
 16134  041B  008E               	movwf	14	;volatile
 16135                           
 16136                           ;main.c: 430: LATC = do0p0;
 16137  041C  0021               	movlb	1	; select bank1
 16138  041D  0866               	movf	cmd_task@do0p0^(0+128),w
 16139  041E  0022               	movlb	2	; select bank2
 16140  041F  008E               	movwf	14	;volatile
 16141                           
 16142                           ;main.c: 431: LATC = do0p1;
 16143  0420  0021               	movlb	1	; select bank1
 16144  0421  0865               	movf	cmd_task@do0p1^(0+128),w
 16145  0422  0022               	movlb	2	; select bank2
 16146  0423  008E               	movwf	14	;volatile
 16147                           
 16148                           ;main.c: 432: LATC = do0p0;
 16149  0424  0021               	movlb	1	; select bank1
 16150  0425  0866               	movf	cmd_task@do0p0^(0+128),w
 16151  0426  0022               	movlb	2	; select bank2
 16152  0427  008E               	movwf	14	;volatile
 16153                           
 16154                           ;main.c: 433: LATC = do0p1;
 16155  0428  0021               	movlb	1	; select bank1
 16156  0429  0865               	movf	cmd_task@do0p1^(0+128),w
 16157  042A  0022               	movlb	2	; select bank2
 16158  042B  008E               	movwf	14	;volatile
 16159                           
 16160                           ;main.c: 434: LATC = do0p0;
 16161  042C  0021               	movlb	1	; select bank1
 16162  042D  0866               	movf	cmd_task@do0p0^(0+128),w
 16163  042E  0022               	movlb	2	; select bank2
 16164  042F  008E               	movwf	14	;volatile
 16165                           
 16166                           ;main.c: 435: LATC = do0p1;
 16167  0430  0021               	movlb	1	; select bank1
 16168  0431  0865               	movf	cmd_task@do0p1^(0+128),w
 16169  0432  0022               	movlb	2	; select bank2
 16170  0433  008E               	movwf	14	;volatile
 16171                           
 16172                           ;main.c: 436: LATC = do0p0;
 16173  0434  0021               	movlb	1	; select bank1
 16174  0435  0866               	movf	cmd_task@do0p0^(0+128),w
 16175  0436  0022               	movlb	2	; select bank2
 16176  0437  008E               	movwf	14	;volatile
 16177                           
 16178                           ;main.c: 437: LATC = do0p1;
 16179  0438  0021               	movlb	1	; select bank1
 16180  0439  0865               	movf	cmd_task@do0p1^(0+128),w
 16181  043A  0022               	movlb	2	; select bank2
 16182  043B  008E               	movwf	14	;volatile
 16183  043C                     i5Ll6625:	
 16184  043C  0025               	movlb	5	; select bank5
 16185  043D  0AC9               	incf	cmd_task@i^(0+640),f
 16186  043E                     i5Ll6627:	
 16187  043E  084D               	movf	cmd_task@num_bytes^(0+640),w
 16188  043F  0249               	subwf	cmd_task@i^(0+640),w
 16189  0440  1C03               	btfss	3,0
 16190  0441  2BFC               	ljmp	i5Ll6623
 16191  0442  2C44               	ljmp	i5Ll6629
 16192  0443                     i5Lu5901:	
 16193  0443  2BFC               	ljmp	i5Ll6623
 16194  0444                     i5Lu5900:	
 16195  0444                     i5Ll6629:	
 16196                           
 16197                           ;main.c: 438: }
 16198                           ;main.c: 440: for (i = 0; i < num_bits; i += 1) {
 16199  0444  01C9               	clrf	cmd_task@i^(0+640)
 16200  0445  2C50               	ljmp	i5Ll6635
 16201  0446                     i5Ll6631:	
 16202                           
 16203                           ;main.c: 441: LATC = do0p0;
 16204  0446  0021               	movlb	1	; select bank1
 16205  0447  0866               	movf	cmd_task@do0p0^(0+128),w
 16206  0448  0022               	movlb	2	; select bank2
 16207  0449  008E               	movwf	14	;volatile
 16208                           
 16209                           ;main.c: 442: LATC = do0p1;
 16210  044A  0021               	movlb	1	; select bank1
 16211  044B  0865               	movf	cmd_task@do0p1^(0+128),w
 16212  044C  0022               	movlb	2	; select bank2
 16213  044D  008E               	movwf	14	;volatile
 16214  044E                     i5Ll6633:	
 16215  044E  0025               	movlb	5	; select bank5
 16216  044F  0AC9               	incf	cmd_task@i^(0+640),f
 16217  0450                     i5Ll6635:	
 16218  0450  084E               	movf	cmd_task@num_bits^(0+640),w
 16219  0451  0249               	subwf	cmd_task@i^(0+640),w
 16220  0452  1C03               	btfss	3,0
 16221  0453  2C46               	ljmp	i5Ll6631
 16222  0454  2916               	ljmp	i5Lu5521
 16223  0455                     i5Lu5911:	
 16224  0455  2C46               	ljmp	i5Ll6631
 16225  0456                     i5Lu5910:	
 16226  0456  2916               	ljmp	i5Lu5521
 16227  0457                     i5Ll6637:	
 16228  0457  3010               	movlw	16
 16229  0458  0025               	movlb	5	; select bank5
 16230  0459  0650               	xorwf	cmd_task@cmd^(0+640),w
 16231  045A  1D03               	btfss	3,2
 16232  045B  2CB9               	ljmp	i5Ll6665
 16233  045C  2C5E               	ljmp	i5Ll6639
 16234  045D                     i5Lu5921:	
 16235  045D  2CB9               	ljmp	i5Ll6665
 16236  045E                     i5Lu5920:	
 16237  045E                     i5Ll6639:	
 16238  045E  0022               	movlb	2	; select bank2
 16239  045F  086D               	movf	cmd_task@pt^(0+256),w
 16240  0460  0086               	movwf	6
 16241  0461  3002               	movlw	2	; select bank4/5
 16242  0462  0087               	movwf	7
 16243  0463  30C0               	movlw	192
 16244  0464  3FC0               	movwi [0]fsr1
 16245  0465  3001               	movlw	1
 16246  0466  3FC1               	movwi [1]fsr1
 16247  0467                     i5Ll6641:	
 16248  0467  0024               	movlb	4	; select bank4
 16249  0468  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16250  0469  0021               	movlb	1	; select bank1
 16251  046A  0267               	subwf	_usb_rx_ptr^(0+128),w
 16252  046B  1C03               	btfss	3,0
 16253  046C  2C70               	ljmp	i5Ll6645
 16254  046D  2F06               	ljmp	iL98
 16255  046E                     i5Lu5931:	
 16256  046E  2C70               	ljmp	i5Ll6645
 16257  046F                     i5Lu5930:	
 16258  046F  2F06               	ljmp	iL98
 16259  0470                     i5Ll6645:	
 16260  0470  0867               	movf	_usb_rx_ptr^(0+128),w
 16261  0471  0022               	movlb	2	; select bank2
 16262  0472  00E0               	movwf	??_cmd_task^(0+256)
 16263  0473  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16264  0474  0024               	movlb	4	; select bank4
 16265  0475  076E               	addwf	_usb_rx_buf^(0+512),w
 16266  0476  0086               	movwf	6
 16267  0477  0022               	movlb	2	; select bank2
 16268  0478  0861               	movf	(??_cmd_task+1)^(0+256),w
 16269  0479  0024               	movlb	4	; select bank4
 16270  047A  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16271  047B  0087               	movwf	7
 16272  047C  0801               	movf	1,w
 16273  047D  0022               	movlb	2	; select bank2
 16274  047E  00EA               	movwf	cmd_task@tmp^(0+256)
 16275  047F                     i5Ll6647:	
 16276  047F  0021               	movlb	1	; select bank1
 16277  0480  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16278  0481                     i5Ll6649:	
 16279                           
 16280                           ;main.c: 449: loop_count = tmp;
 16281  0481  0022               	movlb	2	; select bank2
 16282  0482  086A               	movf	cmd_task@tmp^(0+256),w
 16283  0483  0025               	movlb	5	; select bank5
 16284  0484  00BB               	movwf	cmd_task@loop_count^(0+640)
 16285  0485  01BC               	clrf	(cmd_task@loop_count+1)^(0+640)
 16286  0486                     i5Ll6651:	
 16287  0486  0022               	movlb	2	; select bank2
 16288  0487  086D               	movf	cmd_task@pt^(0+256),w
 16289  0488  0086               	movwf	6
 16290  0489  3002               	movlw	2	; select bank4/5
 16291  048A  0087               	movwf	7
 16292  048B  30C3               	movlw	195
 16293  048C  3FC0               	movwi [0]fsr1
 16294  048D  3001               	movlw	1
 16295  048E  3FC1               	movwi [1]fsr1
 16296  048F                     i5Ll6653:	
 16297  048F  0024               	movlb	4	; select bank4
 16298  0490  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16299  0491  0021               	movlb	1	; select bank1
 16300  0492  0267               	subwf	_usb_rx_ptr^(0+128),w
 16301  0493  1C03               	btfss	3,0
 16302  0494  2C98               	ljmp	i5Ll6657
 16303  0495  2F06               	ljmp	iL98
 16304  0496                     i5Lu5941:	
 16305  0496  2C98               	ljmp	i5Ll6657
 16306  0497                     i5Lu5940:	
 16307  0497  2F06               	ljmp	iL98
 16308  0498                     i5Ll6657:	
 16309  0498  0867               	movf	_usb_rx_ptr^(0+128),w
 16310  0499  0022               	movlb	2	; select bank2
 16311  049A  00E0               	movwf	??_cmd_task^(0+256)
 16312  049B  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16313  049C  0024               	movlb	4	; select bank4
 16314  049D  076E               	addwf	_usb_rx_buf^(0+512),w
 16315  049E  0086               	movwf	6
 16316  049F  0022               	movlb	2	; select bank2
 16317  04A0  0861               	movf	(??_cmd_task+1)^(0+256),w
 16318  04A1  0024               	movlb	4	; select bank4
 16319  04A2  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16320  04A3  0087               	movwf	7
 16321  04A4  0801               	movf	1,w
 16322  04A5  0022               	movlb	2	; select bank2
 16323  04A6  00EA               	movwf	cmd_task@tmp^(0+256)
 16324  04A7                     i5Ll6659:	
 16325  04A7  0021               	movlb	1	; select bank1
 16326  04A8  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16327  04A9                     i5Ll6661:	
 16328                           
 16329                           ;main.c: 452: loop_count |= ((uint16_t) tmp) << 8;
 16330  04A9  0022               	movlb	2	; select bank2
 16331  04AA  086A               	movf	cmd_task@tmp^(0+256),w
 16332  04AB  00E0               	movwf	??_cmd_task^(0+256)
 16333  04AC  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16334  04AD  00E1               	movwf	(??_cmd_task^(0+256)+1)
 16335  04AE  01E0               	clrf	??_cmd_task^(0+256)
 16336  04AF  0860               	movf	??_cmd_task^(0+256),w
 16337  04B0  0025               	movlb	5	; select bank5
 16338  04B1  04BB               	iorwf	cmd_task@loop_count^(0+640),f
 16339  04B2  0022               	movlb	2	; select bank2
 16340  04B3  0861               	movf	(??_cmd_task+1)^(0+256),w
 16341  04B4  0025               	movlb	5	; select bank5
 16342  04B5  04BC               	iorwf	(cmd_task@loop_count+1)^(0+640),f
 16343  04B6                     i5Ll6663:	
 16344                           
 16345                           ;main.c: 454: loop_is_active = 1;
 16346  04B6  01C8               	clrf	cmd_task@loop_is_active^(0+640)
 16347  04B7  0AC8               	incf	cmd_task@loop_is_active^(0+640),f
 16348  04B8  2916               	ljmp	i5Lu5521
 16349  04B9                     i5Ll6665:	
 16350  04B9  3011               	movlw	17
 16351  04BA  0650               	xorwf	cmd_task@cmd^(0+640),w
 16352  04BB  1D03               	btfss	3,2
 16353  04BC  2CFA               	ljmp	i5Ll6691
 16354  04BD  2CBF               	ljmp	i5Ll6667
 16355  04BE                     i5Lu5951:	
 16356  04BE  2CFA               	ljmp	i5Ll6691
 16357  04BF                     i5Lu5950:	
 16358  04BF                     i5Ll6667:	
 16359                           
 16360                           ;main.c: 458: loop_count -= 1;
 16361  04BF  3001               	movlw	1
 16362  04C0  02BB               	subwf	cmd_task@loop_count^(0+640),f
 16363  04C1  3000               	movlw	0
 16364  04C2  3BBC               	subwfb	(cmd_task@loop_count+1)^(0+640),f
 16365  04C3                     i5Ll6669:	
 16366                           
 16367                           ;main.c: 460: if (loop_count > 0) {
 16368  04C3  083B               	movf	cmd_task@loop_count^(0+640),w
 16369  04C4  043C               	iorwf	(cmd_task@loop_count+1)^(0+640),w
 16370  04C5  1903               	btfsc	3,2
 16371  04C6  2CD2               	ljmp	i5Ll6675
 16372  04C7  2CC9               	ljmp	i5Ll6671
 16373  04C8                     i5Lu5961:	
 16374  04C8  2CD2               	ljmp	i5Ll6675
 16375  04C9                     i5Lu5960:	
 16376  04C9                     i5Ll6671:	
 16377                           
 16378                           ;main.c: 461: if (loop_is_active) {
 16379  04C9  0848               	movf	cmd_task@loop_is_active^(0+640),w
 16380  04CA  1903               	btfsc	3,2
 16381  04CB  2916               	ljmp	i5Lu5521
 16382  04CC  2CCE               	ljmp	i5Ll6673
 16383  04CD                     i5Lu5971:	
 16384  04CD  2916               	ljmp	i5Lu5521
 16385  04CE                     i5Lu5970:	
 16386  04CE                     i5Ll6673:	
 16387                           
 16388                           ;main.c: 463: usb_rx_ptr = loop_start;
 16389  04CE  3003               	movlw	3
 16390  04CF  0021               	movlb	1	; select bank1
 16391  04D0  00E7               	movwf	_usb_rx_ptr^(0+128)
 16392  04D1  2916               	ljmp	i5Lu5521
 16393  04D2                     i5Ll6675:	
 16394                           
 16395                           ;main.c: 470: if (loop_is_active) {
 16396  04D2  0848               	movf	cmd_task@loop_is_active^(0+640),w
 16397  04D3  1903               	btfsc	3,2
 16398  04D4  2918               	ljmp	i5Ll6395
 16399  04D5  2CD7               	ljmp	i5Ll6677
 16400  04D6                     i5Lu5981:	
 16401  04D6  2918               	ljmp	i5Ll6395
 16402  04D7                     i5Lu5980:	
 16403  04D7                     i5Ll6677:	
 16404                           
 16405                           ;main.c: 472: status = STATUS_FAIL;
 16406  04D7  01C2               	clrf	cmd_task@status^(0+640)
 16407  04D8  0AC2               	incf	cmd_task@status^(0+640),f
 16408                           
 16409                           ;main.c: 473: status_sent = 1;
 16410  04D9  01C1               	clrf	cmd_task@status_sent^(0+640)
 16411  04DA  0AC1               	incf	cmd_task@status_sent^(0+640),f
 16412  04DB                     i5Ll6679:	
 16413  04DB  0022               	movlb	2	; select bank2
 16414  04DC  086D               	movf	cmd_task@pt^(0+256),w
 16415  04DD  0086               	movwf	6
 16416  04DE  3002               	movlw	2	; select bank4/5
 16417  04DF  0087               	movwf	7
 16418  04E0  30DA               	movlw	218
 16419  04E1  3FC0               	movwi [0]fsr1
 16420  04E2  3001               	movlw	1
 16421  04E3  3FC1               	movwi [1]fsr1
 16422  04E4                     i5Ll6681:	
 16423  04E4  0025               	movlb	5	; select bank5
 16424  04E5  085E               	movf	_cdc_trf_state^(0+640),w
 16425  04E6  1D03               	btfss	3,2
 16426  04E7  2F06               	ljmp	iL98
 16427  04E8  2CEA               	ljmp	i5Ll6683
 16428  04E9                     i5Lu5991:	
 16429  04E9  2F06               	ljmp	iL98
 16430  04EA                     i5Lu5990:	
 16431  04EA                     i5Ll6683:	
 16432  04EA  3040               	movlw	64
 16433  04EB  0024               	movlb	4	; select bank4
 16434  04EC  026A               	subwf	_usb_tx_ptr^(0+512),w
 16435  04ED  1C03               	btfss	3,0
 16436  04EE  2CF2               	ljmp	i5Ll6685
 16437  04EF  2F06               	ljmp	iL98
 16438  04F0                     i5Lu6001:	
 16439  04F0  2CF2               	ljmp	i5Ll6685
 16440  04F1                     i5Lu6000:	
 16441  04F1  2F06               	ljmp	iL98
 16442  04F2                     i5Ll6685:	
 16443  04F2  086A               	movf	_usb_tx_ptr^(0+512),w
 16444  04F3  3EA0               	addlw	160
 16445  04F4  0086               	movwf	6
 16446  04F5  0187               	clrf	7
 16447  04F6  0181               	clrf	1
 16448  04F7  0A81               	incf	1,f
 16449  04F8                     i5Ll6687:	
 16450  04F8  0AEA               	incf	_usb_tx_ptr^(0+512),f
 16451  04F9  2918               	ljmp	i5Ll6395
 16452  04FA                     i5Ll6691:	
 16453  04FA  3008               	movlw	8
 16454  04FB  0022               	movlb	2	; select bank2
 16455  04FC  0666               	xorwf	cmd_task@op1^(0+256),w
 16456  04FD  1D03               	btfss	3,2
 16457  04FE  2E3C               	ljmp	i5Ll6767
 16458  04FF  2D01               	ljmp	i5Ll6693
 16459  0500                     i5Lu6011:	
 16460  0500  2E3C               	ljmp	i5Ll6767
 16461  0501                     i5Lu6010:	
 16462  0501                     i5Ll6693:	
 16463                           
 16464                           ;main.c: 484: sie = cmd & 0x7;
 16465  0501  0025               	movlb	5	; select bank5
 16466  0502  0850               	movf	cmd_task@cmd^(0+640),w
 16467  0503  0024               	movlb	4	; select bank4
 16468  0504  00E9               	movwf	cmd_task@sie^(0+512)
 16469  0505                     i5Ll6695:	
 16470  0505  3007               	movlw	7
 16471  0506  05E9               	andwf	cmd_task@sie^(0+512),f
 16472  0507                     i5Ll6697:	
 16473  0507  0022               	movlb	2	; select bank2
 16474  0508  086D               	movf	cmd_task@pt^(0+256),w
 16475  0509  0086               	movwf	6
 16476  050A  3002               	movlw	2	; select bank4/5
 16477  050B  0087               	movwf	7
 16478  050C  30E6               	movlw	230
 16479  050D  3FC0               	movwi [0]fsr1
 16480  050E  3001               	movlw	1
 16481  050F  3FC1               	movwi [1]fsr1
 16482  0510                     i5Ll6699:	
 16483  0510  0024               	movlb	4	; select bank4
 16484  0511  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16485  0512  0021               	movlb	1	; select bank1
 16486  0513  0267               	subwf	_usb_rx_ptr^(0+128),w
 16487  0514  1C03               	btfss	3,0
 16488  0515  2D19               	ljmp	i5Ll6703
 16489  0516  2F06               	ljmp	iL98
 16490  0517                     i5Lu6021:	
 16491  0517  2D19               	ljmp	i5Ll6703
 16492  0518                     i5Lu6020:	
 16493  0518  2F06               	ljmp	iL98
 16494  0519                     i5Ll6703:	
 16495  0519  0024               	movlb	4	; select bank4
 16496  051A  0869               	movf	cmd_task@sie^(0+512),w
 16497  051B  0709               	addwf	9,w
 16498  051C  0709               	addwf	9,w
 16499  051D  0709               	addwf	9,w
 16500  051E  3EA0               	addlw	(low (_sie_configs| (0+768)))& (0+255)
 16501  051F  0086               	movwf	6
 16502  0520  3003               	movlw	3	; select bank7/8
 16503  0521  0087               	movwf	7
 16504  0522  0021               	movlb	1	; select bank1
 16505  0523  0867               	movf	_usb_rx_ptr^(0+128),w
 16506  0524  0022               	movlb	2	; select bank2
 16507  0525  00E0               	movwf	??_cmd_task^(0+256)
 16508  0526  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16509  0527  0024               	movlb	4	; select bank4
 16510  0528  076E               	addwf	_usb_rx_buf^(0+512),w
 16511  0529  0084               	movwf	4
 16512  052A  0022               	movlb	2	; select bank2
 16513  052B  0861               	movf	(??_cmd_task+1)^(0+256),w
 16514  052C  0024               	movlb	4	; select bank4
 16515  052D  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16516  052E  0085               	movwf	5
 16517  052F  0800               	movf	0,w
 16518  0530  0081               	movwf	1
 16519  0531                     i5Ll6705:	
 16520  0531  0021               	movlb	1	; select bank1
 16521  0532  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16522  0533                     i5Ll6707:	
 16523  0533  0022               	movlb	2	; select bank2
 16524  0534  086D               	movf	cmd_task@pt^(0+256),w
 16525  0535  0086               	movwf	6
 16526  0536  3002               	movlw	2	; select bank4/5
 16527  0537  0087               	movwf	7
 16528  0538  30E7               	movlw	231
 16529  0539  3FC0               	movwi [0]fsr1
 16530  053A  3001               	movlw	1
 16531  053B  3FC1               	movwi [1]fsr1
 16532  053C                     i5Ll6709:	
 16533  053C  0024               	movlb	4	; select bank4
 16534  053D  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16535  053E  0021               	movlb	1	; select bank1
 16536  053F  0267               	subwf	_usb_rx_ptr^(0+128),w
 16537  0540  1C03               	btfss	3,0
 16538  0541  2D45               	ljmp	i5Ll6713
 16539  0542  2F06               	ljmp	iL98
 16540  0543                     i5Lu6031:	
 16541  0543  2D45               	ljmp	i5Ll6713
 16542  0544                     i5Lu6030:	
 16543  0544  2F06               	ljmp	iL98
 16544  0545                     i5Ll6713:	
 16545  0545  0024               	movlb	4	; select bank4
 16546  0546  0869               	movf	cmd_task@sie^(0+512),w
 16547  0547  0709               	addwf	9,w
 16548  0548  0709               	addwf	9,w
 16549  0549  0709               	addwf	9,w
 16550  054A  3EA1               	addlw	(low ((_sie_configs| (0+768)+1)))& (0+255)
 16551  054B  0086               	movwf	6
 16552  054C  3003               	movlw	3	; select bank7/8
 16553  054D  0087               	movwf	7
 16554  054E  0021               	movlb	1	; select bank1
 16555  054F  0867               	movf	_usb_rx_ptr^(0+128),w
 16556  0550  0022               	movlb	2	; select bank2
 16557  0551  00E0               	movwf	??_cmd_task^(0+256)
 16558  0552  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16559  0553  0024               	movlb	4	; select bank4
 16560  0554  076E               	addwf	_usb_rx_buf^(0+512),w
 16561  0555  0084               	movwf	4
 16562  0556  0022               	movlb	2	; select bank2
 16563  0557  0861               	movf	(??_cmd_task+1)^(0+256),w
 16564  0558  0024               	movlb	4	; select bank4
 16565  0559  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16566  055A  0085               	movwf	5
 16567  055B  0800               	movf	0,w
 16568  055C  0081               	movwf	1
 16569  055D                     i5Ll6715:	
 16570  055D  0021               	movlb	1	; select bank1
 16571  055E  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16572  055F                     i5Ll6717:	
 16573  055F  0022               	movlb	2	; select bank2
 16574  0560  086D               	movf	cmd_task@pt^(0+256),w
 16575  0561  0086               	movwf	6
 16576  0562  3002               	movlw	2	; select bank4/5
 16577  0563  0087               	movwf	7
 16578  0564  30E8               	movlw	232
 16579  0565  3FC0               	movwi [0]fsr1
 16580  0566  3001               	movlw	1
 16581  0567  3FC1               	movwi [1]fsr1
 16582  0568                     i5Ll6719:	
 16583  0568  0024               	movlb	4	; select bank4
 16584  0569  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16585  056A  0021               	movlb	1	; select bank1
 16586  056B  0267               	subwf	_usb_rx_ptr^(0+128),w
 16587  056C  1C03               	btfss	3,0
 16588  056D  2D71               	ljmp	i5Ll6723
 16589  056E  2F06               	ljmp	iL98
 16590  056F                     i5Lu6041:	
 16591  056F  2D71               	ljmp	i5Ll6723
 16592  0570                     i5Lu6040:	
 16593  0570  2F06               	ljmp	iL98
 16594  0571                     i5Ll6723:	
 16595  0571  0024               	movlb	4	; select bank4
 16596  0572  0869               	movf	cmd_task@sie^(0+512),w
 16597  0573  0709               	addwf	9,w
 16598  0574  0709               	addwf	9,w
 16599  0575  0709               	addwf	9,w
 16600  0576  3EA2               	addlw	(low ((_sie_configs| (0+768)+2)))& (0+255)
 16601  0577  0086               	movwf	6
 16602  0578  3003               	movlw	3	; select bank7/8
 16603  0579  0087               	movwf	7
 16604  057A  0021               	movlb	1	; select bank1
 16605  057B  0867               	movf	_usb_rx_ptr^(0+128),w
 16606  057C  0022               	movlb	2	; select bank2
 16607  057D  00E0               	movwf	??_cmd_task^(0+256)
 16608  057E  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16609  057F  0024               	movlb	4	; select bank4
 16610  0580  076E               	addwf	_usb_rx_buf^(0+512),w
 16611  0581  0084               	movwf	4
 16612  0582  0022               	movlb	2	; select bank2
 16613  0583  0861               	movf	(??_cmd_task+1)^(0+256),w
 16614  0584  0024               	movlb	4	; select bank4
 16615  0585  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16616  0586  0085               	movwf	5
 16617  0587  0800               	movf	0,w
 16618  0588  0081               	movwf	1
 16619  0589                     i5Ll6725:	
 16620  0589  0021               	movlb	1	; select bank1
 16621  058A  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16622  058B                     i5Ll6727:	
 16623  058B  0022               	movlb	2	; select bank2
 16624  058C  086D               	movf	cmd_task@pt^(0+256),w
 16625  058D  0086               	movwf	6
 16626  058E  3002               	movlw	2	; select bank4/5
 16627  058F  0087               	movwf	7
 16628  0590  30E9               	movlw	233
 16629  0591  3FC0               	movwi [0]fsr1
 16630  0592  3001               	movlw	1
 16631  0593  3FC1               	movwi [1]fsr1
 16632  0594                     i5Ll6729:	
 16633  0594  0024               	movlb	4	; select bank4
 16634  0595  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16635  0596  0021               	movlb	1	; select bank1
 16636  0597  0267               	subwf	_usb_rx_ptr^(0+128),w
 16637  0598  1C03               	btfss	3,0
 16638  0599  2D9D               	ljmp	i5Ll6733
 16639  059A  2F06               	ljmp	iL98
 16640  059B                     i5Lu6051:	
 16641  059B  2D9D               	ljmp	i5Ll6733
 16642  059C                     i5Lu6050:	
 16643  059C  2F06               	ljmp	iL98
 16644  059D                     i5Ll6733:	
 16645  059D  0024               	movlb	4	; select bank4
 16646  059E  0869               	movf	cmd_task@sie^(0+512),w
 16647  059F  0709               	addwf	9,w
 16648  05A0  0709               	addwf	9,w
 16649  05A1  0709               	addwf	9,w
 16650  05A2  3EA3               	addlw	(low ((_sie_configs| (0+768)+3)))& (0+255)
 16651  05A3  0086               	movwf	6
 16652  05A4  3003               	movlw	3	; select bank7/8
 16653  05A5  0087               	movwf	7
 16654  05A6  0021               	movlb	1	; select bank1
 16655  05A7  0867               	movf	_usb_rx_ptr^(0+128),w
 16656  05A8  0022               	movlb	2	; select bank2
 16657  05A9  00E0               	movwf	??_cmd_task^(0+256)
 16658  05AA  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16659  05AB  0024               	movlb	4	; select bank4
 16660  05AC  076E               	addwf	_usb_rx_buf^(0+512),w
 16661  05AD  0084               	movwf	4
 16662  05AE  0022               	movlb	2	; select bank2
 16663  05AF  0861               	movf	(??_cmd_task+1)^(0+256),w
 16664  05B0  0024               	movlb	4	; select bank4
 16665  05B1  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16666  05B2  0085               	movwf	5
 16667  05B3  0800               	movf	0,w
 16668  05B4  0081               	movwf	1
 16669  05B5                     i5Ll6735:	
 16670  05B5  0021               	movlb	1	; select bank1
 16671  05B6  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16672  05B7                     i5Ll6737:	
 16673  05B7  0022               	movlb	2	; select bank2
 16674  05B8  086D               	movf	cmd_task@pt^(0+256),w
 16675  05B9  0086               	movwf	6
 16676  05BA  3002               	movlw	2	; select bank4/5
 16677  05BB  0087               	movwf	7
 16678  05BC  30EA               	movlw	234
 16679  05BD  3FC0               	movwi [0]fsr1
 16680  05BE  3001               	movlw	1
 16681  05BF  3FC1               	movwi [1]fsr1
 16682  05C0                     i5Ll6739:	
 16683  05C0  0024               	movlb	4	; select bank4
 16684  05C1  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16685  05C2  0021               	movlb	1	; select bank1
 16686  05C3  0267               	subwf	_usb_rx_ptr^(0+128),w
 16687  05C4  1C03               	btfss	3,0
 16688  05C5  2DC9               	ljmp	i5Ll6743
 16689  05C6  2F06               	ljmp	iL98
 16690  05C7                     i5Lu6061:	
 16691  05C7  2DC9               	ljmp	i5Ll6743
 16692  05C8                     i5Lu6060:	
 16693  05C8  2F06               	ljmp	iL98
 16694  05C9                     i5Ll6743:	
 16695  05C9  0024               	movlb	4	; select bank4
 16696  05CA  0869               	movf	cmd_task@sie^(0+512),w
 16697  05CB  0709               	addwf	9,w
 16698  05CC  0709               	addwf	9,w
 16699  05CD  0709               	addwf	9,w
 16700  05CE  3EA4               	addlw	(low ((_sie_configs| (0+768)+4)))& (0+255)
 16701  05CF  0086               	movwf	6
 16702  05D0  3003               	movlw	3	; select bank7/8
 16703  05D1  0087               	movwf	7
 16704  05D2  0021               	movlb	1	; select bank1
 16705  05D3  0867               	movf	_usb_rx_ptr^(0+128),w
 16706  05D4  0022               	movlb	2	; select bank2
 16707  05D5  00E0               	movwf	??_cmd_task^(0+256)
 16708  05D6  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16709  05D7  0024               	movlb	4	; select bank4
 16710  05D8  076E               	addwf	_usb_rx_buf^(0+512),w
 16711  05D9  0084               	movwf	4
 16712  05DA  0022               	movlb	2	; select bank2
 16713  05DB  0861               	movf	(??_cmd_task+1)^(0+256),w
 16714  05DC  0024               	movlb	4	; select bank4
 16715  05DD  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16716  05DE  0085               	movwf	5
 16717  05DF  0800               	movf	0,w
 16718  05E0  0081               	movwf	1
 16719  05E1                     i5Ll6745:	
 16720  05E1  0021               	movlb	1	; select bank1
 16721  05E2  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16722  05E3                     i5Ll6747:	
 16723  05E3  0022               	movlb	2	; select bank2
 16724  05E4  086D               	movf	cmd_task@pt^(0+256),w
 16725  05E5  0086               	movwf	6
 16726  05E6  3002               	movlw	2	; select bank4/5
 16727  05E7  0087               	movwf	7
 16728  05E8  30EB               	movlw	235
 16729  05E9  3FC0               	movwi [0]fsr1
 16730  05EA  3001               	movlw	1
 16731  05EB  3FC1               	movwi [1]fsr1
 16732  05EC                     i5Ll6749:	
 16733  05EC  0024               	movlb	4	; select bank4
 16734  05ED  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16735  05EE  0021               	movlb	1	; select bank1
 16736  05EF  0267               	subwf	_usb_rx_ptr^(0+128),w
 16737  05F0  1C03               	btfss	3,0
 16738  05F1  2DF5               	ljmp	i5Ll6753
 16739  05F2  2F06               	ljmp	iL98
 16740  05F3                     i5Lu6071:	
 16741  05F3  2DF5               	ljmp	i5Ll6753
 16742  05F4                     i5Lu6070:	
 16743  05F4  2F06               	ljmp	iL98
 16744  05F5                     i5Ll6753:	
 16745  05F5  0024               	movlb	4	; select bank4
 16746  05F6  0869               	movf	cmd_task@sie^(0+512),w
 16747  05F7  0709               	addwf	9,w
 16748  05F8  0709               	addwf	9,w
 16749  05F9  0709               	addwf	9,w
 16750  05FA  3EA5               	addlw	(low ((_sie_configs| (0+768)+5)))& (0+255)
 16751  05FB  0086               	movwf	6
 16752  05FC  3003               	movlw	3	; select bank7/8
 16753  05FD  0087               	movwf	7
 16754  05FE  0021               	movlb	1	; select bank1
 16755  05FF  0867               	movf	_usb_rx_ptr^(0+128),w
 16756  0600  0022               	movlb	2	; select bank2
 16757  0601  00E0               	movwf	??_cmd_task^(0+256)
 16758  0602  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16759  0603  0024               	movlb	4	; select bank4
 16760  0604  076E               	addwf	_usb_rx_buf^(0+512),w
 16761  0605  0084               	movwf	4
 16762  0606  0022               	movlb	2	; select bank2
 16763  0607  0861               	movf	(??_cmd_task+1)^(0+256),w
 16764  0608  0024               	movlb	4	; select bank4
 16765  0609  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16766  060A  0085               	movwf	5
 16767  060B  0800               	movf	0,w
 16768  060C  0081               	movwf	1
 16769  060D                     i5Ll6755:	
 16770  060D  0021               	movlb	1	; select bank1
 16771  060E  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16772  060F                     i5Ll6757:	
 16773  060F  0022               	movlb	2	; select bank2
 16774  0610  086D               	movf	cmd_task@pt^(0+256),w
 16775  0611  0086               	movwf	6
 16776  0612  3002               	movlw	2	; select bank4/5
 16777  0613  0087               	movwf	7
 16778  0614  30EC               	movlw	236
 16779  0615  3FC0               	movwi [0]fsr1
 16780  0616  3001               	movlw	1
 16781  0617  3FC1               	movwi [1]fsr1
 16782  0618                     i5Ll6759:	
 16783  0618  0024               	movlb	4	; select bank4
 16784  0619  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16785  061A  0021               	movlb	1	; select bank1
 16786  061B  0267               	subwf	_usb_rx_ptr^(0+128),w
 16787  061C  1C03               	btfss	3,0
 16788  061D  2E21               	ljmp	i5Ll6763
 16789  061E  2F06               	ljmp	iL98
 16790  061F                     i5Lu6081:	
 16791  061F  2E21               	ljmp	i5Ll6763
 16792  0620                     i5Lu6080:	
 16793  0620  2F06               	ljmp	iL98
 16794  0621                     i5Ll6763:	
 16795  0621  0024               	movlb	4	; select bank4
 16796  0622  0869               	movf	cmd_task@sie^(0+512),w
 16797  0623  0709               	addwf	9,w
 16798  0624  0709               	addwf	9,w
 16799  0625  0709               	addwf	9,w
 16800  0626  3EA6               	addlw	(low ((_sie_configs| (0+768)+6)))& (0+255)
 16801  0627  0086               	movwf	6
 16802  0628  3003               	movlw	3	; select bank7/8
 16803  0629  0087               	movwf	7
 16804  062A  0021               	movlb	1	; select bank1
 16805  062B  0867               	movf	_usb_rx_ptr^(0+128),w
 16806  062C  0022               	movlb	2	; select bank2
 16807  062D  00E0               	movwf	??_cmd_task^(0+256)
 16808  062E  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16809  062F  0024               	movlb	4	; select bank4
 16810  0630  076E               	addwf	_usb_rx_buf^(0+512),w
 16811  0631  0084               	movwf	4
 16812  0632  0022               	movlb	2	; select bank2
 16813  0633  0861               	movf	(??_cmd_task+1)^(0+256),w
 16814  0634  0024               	movlb	4	; select bank4
 16815  0635  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16816  0636  0085               	movwf	5
 16817  0637  0800               	movf	0,w
 16818  0638  0081               	movwf	1
 16819  0639                     i5Ll6765:	
 16820  0639  0021               	movlb	1	; select bank1
 16821  063A  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16822  063B  2916               	ljmp	i5Lu5521
 16823  063C                     i5Ll6767:	
 16824  063C  3020               	movlw	32
 16825  063D  0025               	movlb	5	; select bank5
 16826  063E  0650               	xorwf	cmd_task@cmd^(0+640),w
 16827  063F  1D03               	btfss	3,2
 16828  0640  2E46               	ljmp	i5Ll6771
 16829  0641  2E43               	ljmp	i5Ll6769
 16830  0642                     i5Lu6091:	
 16831  0642  2E46               	ljmp	i5Ll6771
 16832  0643                     i5Lu6090:	
 16833  0643                     i5Ll6769:	
 16834                           
 16835                           ;main.c: 496: status = STATUS_SUCCESS;
 16836  0643  01C2               	clrf	cmd_task@status^(0+640)
 16837                           
 16838                           ;main.c: 497: status_sent = 0;
 16839  0644  01C1               	clrf	cmd_task@status_sent^(0+640)
 16840  0645  2916               	ljmp	i5Lu5521
 16841  0646                     i5Ll6771:	
 16842  0646  3021               	movlw	33
 16843  0647  0650               	xorwf	cmd_task@cmd^(0+640),w
 16844  0648  1D03               	btfss	3,2
 16845  0649  2E6B               	ljmp	i5Ll6785
 16846  064A  2E4C               	ljmp	i5Ll6773
 16847  064B                     i5Lu6101:	
 16848  064B  2E6B               	ljmp	i5Ll6785
 16849  064C                     i5Lu6100:	
 16850  064C                     i5Ll6773:	
 16851  064C  0022               	movlb	2	; select bank2
 16852  064D  086D               	movf	cmd_task@pt^(0+256),w
 16853  064E  0086               	movwf	6
 16854  064F  3002               	movlw	2	; select bank4/5
 16855  0650  0087               	movwf	7
 16856  0651  30F5               	movlw	245
 16857  0652  3FC0               	movwi [0]fsr1
 16858  0653  3001               	movlw	1
 16859  0654  3FC1               	movwi [1]fsr1
 16860  0655                     i5Ll6775:	
 16861  0655  0025               	movlb	5	; select bank5
 16862  0656  085E               	movf	_cdc_trf_state^(0+640),w
 16863  0657  1D03               	btfss	3,2
 16864  0658  2F06               	ljmp	iL98
 16865  0659  2E5B               	ljmp	i5Ll6777
 16866  065A                     i5Lu6111:	
 16867  065A  2F06               	ljmp	iL98
 16868  065B                     i5Lu6110:	
 16869  065B                     i5Ll6777:	
 16870  065B  3040               	movlw	64
 16871  065C  0024               	movlb	4	; select bank4
 16872  065D  026A               	subwf	_usb_tx_ptr^(0+512),w
 16873  065E  1C03               	btfss	3,0
 16874  065F  2E63               	ljmp	i5Ll6779
 16875  0660  2F06               	ljmp	iL98
 16876  0661                     i5Lu6121:	
 16877  0661  2E63               	ljmp	i5Ll6779
 16878  0662                     i5Lu6120:	
 16879  0662  2F06               	ljmp	iL98
 16880  0663                     i5Ll6779:	
 16881  0663  086A               	movf	_usb_tx_ptr^(0+512),w
 16882  0664  3EA0               	addlw	160
 16883  0665  0086               	movwf	6
 16884  0666  0187               	clrf	7
 16885  0667  0025               	movlb	5	; select bank5
 16886  0668  0842               	movf	cmd_task@status^(0+640),w
 16887  0669  0081               	movwf	1
 16888  066A  2944               	ljmp	i5Ll6411
 16889  066B                     i5Ll6785:	
 16890  066B  0022               	movlb	2	; select bank2
 16891  066C  086D               	movf	cmd_task@pt^(0+256),w
 16892  066D  0086               	movwf	6
 16893  066E  3002               	movlw	2	; select bank4/5
 16894  066F  0087               	movwf	7
 16895  0670  30FA               	movlw	250
 16896  0671  3FC0               	movwi [0]fsr1
 16897  0672  3001               	movlw	1
 16898  0673  3FC1               	movwi [1]fsr1
 16899  0674                     i5Ll6787:	
 16900  0674  0024               	movlb	4	; select bank4
 16901  0675  086B               	movf	_usb_rx_bytes_avail^(0+512),w
 16902  0676  0021               	movlb	1	; select bank1
 16903  0677  0267               	subwf	_usb_rx_ptr^(0+128),w
 16904  0678  1C03               	btfss	3,0
 16905  0679  2E7D               	ljmp	i5Ll6791
 16906  067A  2F06               	ljmp	iL98
 16907  067B                     i5Lu6131:	
 16908  067B  2E7D               	ljmp	i5Ll6791
 16909  067C                     i5Lu6130:	
 16910  067C  2F06               	ljmp	iL98
 16911  067D                     i5Ll6791:	
 16912  067D  0867               	movf	_usb_rx_ptr^(0+128),w
 16913  067E  0022               	movlb	2	; select bank2
 16914  067F  00E0               	movwf	??_cmd_task^(0+256)
 16915  0680  01E1               	clrf	(??_cmd_task^(0+256)+1)
 16916  0681  0024               	movlb	4	; select bank4
 16917  0682  076E               	addwf	_usb_rx_buf^(0+512),w
 16918  0683  0086               	movwf	6
 16919  0684  0022               	movlb	2	; select bank2
 16920  0685  0861               	movf	(??_cmd_task+1)^(0+256),w
 16921  0686  0024               	movlb	4	; select bank4
 16922  0687  3D6F               	addwfc	(_usb_rx_buf+1)^(0+512),w
 16923  0688  0087               	movwf	7
 16924  0689  0801               	movf	1,w
 16925  068A  0025               	movlb	5	; select bank5
 16926  068B  00D0               	movwf	cmd_task@cmd^(0+640)
 16927  068C                     i5Ll6793:	
 16928  068C  0021               	movlb	1	; select bank1
 16929  068D  0AE7               	incf	_usb_rx_ptr^(0+128),f
 16930  068E                     i5Ll6795:	
 16931                           
 16932                           ;main.c: 507: gpio_dir = cmd & 0x3f;
 16933  068E  0025               	movlb	5	; select bank5
 16934  068F  0850               	movf	cmd_task@cmd^(0+640),w
 16935  0690  00EC               	movwf	cmd_task@gpio_dir^(0+640)
 16936  0691                     i5Ll6797:	
 16937  0691  303F               	movlw	63
 16938  0692  05EC               	andwf	cmd_task@gpio_dir^(0+640),f
 16939  0693                     i5Ll6799:	
 16940                           
 16941                           ;main.c: 508: TRISC = gpio_dir;
 16942  0693  086C               	movf	cmd_task@gpio_dir^(0+640),w
 16943  0694  0021               	movlb	1	; select bank1
 16944  0695  008E               	movwf	14	;volatile
 16945  0696  2916               	ljmp	i5Lu5521
 16946  0697                     i5Ll6801:	
 16947  0697  086D               	movf	cmd_task@pt^(0+256),w
 16948  0698  0086               	movwf	6
 16949  0699  3002               	movlw	2	; select bank4/5
 16950  069A  0087               	movwf	7
 16951  069B  3F40               	moviw [0]fsr1
 16952  069C  00E0               	movwf	??_cmd_task^(0+256)
 16953  069D  3F41               	moviw [1]fsr1
 16954  069E  00E1               	movwf	(??_cmd_task^(0+256)+1)
 16955                           
 16956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16957                           ; Switch size 1, requested type "speed"
 16958                           ; Number of cases is 2, Range of values is 0 to 1
 16959                           ; switch strategies available:
 16960                           ; Name         Instructions Cycles
 16961                           ; simple_byte            7     4 (average)
 16962                           ; direct_byte           10     6 (fixed)
 16963                           ; jumptable            260     6 (fixed)
 16964                           ;	Chosen strategy is simple_byte
 16965  069F  0861               	movf	(??_cmd_task+1)^(0+256),w
 16966  06A0  3A00               	xorlw	0	; case 0
 16967  06A1  1903               	btfsc	3,2
 16968  06A2  2EA7               	ljmp	i5Ll8525
 16969  06A3  3A01               	xorlw	1	; case 1
 16970  06A4  1903               	btfsc	3,2
 16971  06A5  2ECB               	ljmp	i5Ll8527
 16972  06A6  2EFF               	ljmp	i5Ll6805
 16973  06A7                     i5Ll8525:	
 16974                           
 16975                           ; Switch size 1, requested type "speed"
 16976                           ; Number of cases is 10, Range of values is 0 to 241
 16977                           ; switch strategies available:
 16978                           ; Name         Instructions Cycles
 16979                           ; simple_byte           31    16 (average)
 16980                           ; jumptable            260     6 (fixed)
 16981                           ;	Chosen strategy is simple_byte
 16982  06A7  0860               	movf	??_cmd_task^(0+256),w
 16983  06A8  3A00               	xorlw	0	; case 0
 16984  06A9  1903               	btfsc	3,2
 16985  06AA  2916               	ljmp	i5Lu5521
 16986  06AB  3A8B               	xorlw	139	; case 139
 16987  06AC  3191  1903         	btfsc	3,2
 16988  06AE  296A               	ljmp	i5Ll6177
 16989  06AF  3A07               	xorlw	7	; case 140
 16990  06B0  1903               	btfsc	3,2
 16991  06B1  2979  3180         	ljmp	i5Ll6183
 16992  06B3  3A10               	xorlw	16	; case 156
 16993  06B4  1903               	btfsc	3,2
 16994  06B5  2F0A               	ljmp	L22
 16995  06B6  3A39               	xorlw	57	; case 165
 16996  06B7  1903               	btfsc	3,2
 16997  06B8  2F08               	ljmp	L20
 16998  06B9  3A03               	xorlw	3	; case 166
 16999  06BA  3193  1903         	btfsc	3,2
 17000  06BC  2B5E               	ljmp	i5Ll6239
 17001  06BD  3A70               	xorlw	112	; case 214
 17002  06BE  1903               	btfsc	3,2
 17003  06BF  2C4F  3180         	ljmp	i5Ll6317
 17004  06C1  3A01               	xorlw	1	; case 215
 17005  06C2  1903               	btfsc	3,2
 17006  06C3  2F0C               	ljmp	L24
 17007  06C4  3A27               	xorlw	39	; case 240
 17008  06C5  1903               	btfsc	3,2
 17009  06C6  28BE               	ljmp	i5Ll6369
 17010  06C7  3A01               	xorlw	1	; case 241
 17011  06C8  1903               	btfsc	3,2
 17012  06C9  28E1               	ljmp	i5Ll6379
 17013  06CA  2EFF               	ljmp	i5Ll6805
 17014  06CB                     i5Ll8527:	
 17015                           
 17016                           ; Switch size 1, requested type "speed"
 17017                           ; Number of cases is 17, Range of values is 0 to 250
 17018                           ; switch strategies available:
 17019                           ; Name         Instructions Cycles
 17020                           ; simple_byte           52    27 (average)
 17021                           ; jumptable            260     6 (fixed)
 17022                           ;	Chosen strategy is simple_byte
 17023  06CB  0860               	movf	??_cmd_task^(0+256),w
 17024  06CC  3A00               	xorlw	0	; case 0
 17025  06CD  1903               	btfsc	3,2
 17026  06CE  2930               	ljmp	i5Ll6405
 17027  06CF  3A2E               	xorlw	46	; case 46
 17028  06D0  1903               	btfsc	3,2
 17029  06D1  29F8               	ljmp	i5Ll6475
 17030  06D2  3A6C               	xorlw	108	; case 66
 17031  06D3  1903               	btfsc	3,2
 17032  06D4  2A75               	ljmp	i5Ll6513
 17033  06D5  3A0B               	xorlw	11	; case 73
 17034  06D6  1903               	btfsc	3,2
 17035  06D7  2AB1               	ljmp	i5Ll6529
 17036  06D8  3AC5               	xorlw	197	; case 140
 17037  06D9  1903               	btfsc	3,2
 17038  06DA  2B85               	ljmp	i5Ll6591
 17039  06DB  3A4C               	xorlw	76	; case 192
 17040  06DC  1903               	btfsc	3,2
 17041  06DD  2C67               	ljmp	i5Ll6641
 17042  06DE  3A03               	xorlw	3	; case 195
 17043  06DF  1903               	btfsc	3,2
 17044  06E0  2C8F               	ljmp	i5Ll6653
 17045  06E1  3A19               	xorlw	25	; case 218
 17046  06E2  1903               	btfsc	3,2
 17047  06E3  2CE4               	ljmp	i5Ll6681
 17048  06E4  3A3C               	xorlw	60	; case 230
 17049  06E5  1903               	btfsc	3,2
 17050  06E6  2D10               	ljmp	i5Ll6699
 17051  06E7  3A01               	xorlw	1	; case 231
 17052  06E8  1903               	btfsc	3,2
 17053  06E9  2D3C               	ljmp	i5Ll6709
 17054  06EA  3A0F               	xorlw	15	; case 232
 17055  06EB  1903               	btfsc	3,2
 17056  06EC  2D68               	ljmp	i5Ll6719
 17057  06ED  3A01               	xorlw	1	; case 233
 17058  06EE  1903               	btfsc	3,2
 17059  06EF  2D94               	ljmp	i5Ll6729
 17060  06F0  3A03               	xorlw	3	; case 234
 17061  06F1  1903               	btfsc	3,2
 17062  06F2  2DC0               	ljmp	i5Ll6739
 17063  06F3  3A01               	xorlw	1	; case 235
 17064  06F4  1903               	btfsc	3,2
 17065  06F5  2DEC               	ljmp	i5Ll6749
 17066  06F6  3A07               	xorlw	7	; case 236
 17067  06F7  1903               	btfsc	3,2
 17068  06F8  2E18               	ljmp	i5Ll6759
 17069  06F9  3A19               	xorlw	25	; case 245
 17070  06FA  1903               	btfsc	3,2
 17071  06FB  2E55               	ljmp	i5Ll6775
 17072  06FC  3A0F               	xorlw	15	; case 250
 17073  06FD  1903               	btfsc	3,2
 17074  06FE  2E74               	ljmp	i5Ll6787
 17075  06FF                     i5Ll6805:	
 17076  06FF  086D               	movf	cmd_task@pt^(0+256),w
 17077  0700  0086               	movwf	6
 17078  0701  3002               	movlw	2	; select bank4/5
 17079  0702  0087               	movwf	7
 17080  0703  3000               	movlw	0
 17081  0704  3FC0               	movwi [0]fsr1
 17082  0705  3FC1               	movwi [1]fsr1
 17083  0706                     i5Ll692:	
 17084  0706                     iL98:	
 17085  0706  3192  2A09         	goto	l8093
 17086  0708                     L20:	
 17087  0708                     __end_of_main:	
 17088  0708  3191  29EE         	ljmp	i5Ll6229
 17089  070A                     L22:	
 17090  070A                     L21:	
 17091  070A  3191  29BB         	ljmp	i5Ll6209
 17092  070C                     L24:	
 17093  070C                     L23:	
 17094  070C  3194  2C72         	ljmp	i5Ll6327


Data Sizes:
    Strings     0
    Constant    137
    Data        19
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h            8      8       8
    BANK1            16      8      16
    BANK2            16     16      16
    BANK3            16     12      16
    BANK4            16      8      16
    BANK5            80      0      78
    BANK6            80      0      24
    BANK7            80      0      64
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[16]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK3[1]), USBActiveConfiguration(BANK5[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK5[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK5[2]), BDT(ABS[48]), 

    cmd_tx_buffer_task@pt	PTR struct pt size(1) Largest target is 2
		 -> main@tx_pt(BANK4[2]), 

    cmd_tx_buffer_task@usb_tx_handle	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    cmd_rx_buf_get_task@pt	PTR struct pt size(1) Largest target is 2
		 -> main@rx_get_pt(BANK4[2]), 

    cmd_rx_buf_put_task@pt	PTR struct pt size(1) Largest target is 2
		 -> main@rx_put_pt(BANK4[2]), 

    current_rx_handle	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    usb_rx_pp_handle	PTR struct __BDT[2] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    cmd_task@pt	PTR struct pt size(1) Largest target is 2
		 -> main@cmd_pt(BANK4[2]), 

    usb_rx_buf_array	PTR unsigned char [2] size(2) Largest target is 64
		 -> usb_rx_buf_1(BANK4[64]), usb_rx_buf_0(BANK2[64]), 

    usb_tx_buf_array	PTR unsigned char [2] size(2) Largest target is 64
		 -> usb_tx_buf_1(BANK3[64]), usb_tx_buf_0(BANK1[64]), 

    usb_rx_buf	PTR unsigned char  size(2) Largest target is 64
		 -> usb_rx_buf_1(BANK4[64]), usb_rx_buf_0(BANK2[64]), 

    usb_tx_buf	PTR unsigned char  size(1) Largest target is 64
		 -> usb_tx_buf_0(BANK1[64]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK5[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 16
		 -> CtrlTrfData(BANK0h[16]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> usb_tx_buf_0(BANK1[64]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 22
		 -> sd002(CODE[22]), sd001(CODE[18]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    CDCDataOutHandle	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    CDCDataInHandle	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S304$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S294$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S294$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S269$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S269$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S269$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S269$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S36_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S36_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S36_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S36_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USBCheckStdRequest->i1_USBStdSetCfgHandler
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCtrlTrfSetupHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCheckStdRequest->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    i1_USBDeviceTasks->i1_USBCtrlEPService
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler

Critical Paths under _main in BANK2

    _cmd_tx_buffer_task->_USBTransferOnePacket
    _USBDeviceTasks->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_USBDeviceInit

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCheckStdRequest->_USBStdFeatureReqHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   33117
                                              0 BANK4      8     8      0
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                _cmd_rx_buf_get_task
                _cmd_rx_buf_put_task
                           _cmd_task
                 _cmd_tx_buffer_task
                          _gpio_init
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cmd_tx_buffer_task                                   4     4      0     792
                                             10 BANK2      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                10     7      3     643
                                              0 BANK2     10     7      3
 ---------------------------------------------------------------------------------
 (1) _cmd_task                                            14    14      0    1263
                                              0 BANK2     14    14      0
 ---------------------------------------------------------------------------------
 (1) _cmd_rx_buf_put_task                                  6     6      0     171
                                              0 BANK2      6     6      0
 ---------------------------------------------------------------------------------
 (1) _cmd_rx_buf_get_task                                  4     4      0     124
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       2     2      0   29593
                                             10 BANK3      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    3884
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    3884
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0   17477
                                              7 BANK3      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   17248
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 BANK2      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 BANK2      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   13272
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  4     4      0    4758
                                              0 BANK3      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     639
                                              0 BANK2      8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      68
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              7     7      0    4562
                                              0 BANK3      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3884
                                             10 BANK2      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            0     0      0     733
                  _USBEnableEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     733
                                              4 BANK2      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 4     3      1     400
                                              0 BANK2      4     3      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 BANK2      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 BANK2      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 BANK2      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0      92
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        4     4      0     396
                                              0 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0   10499
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) i1_USBDeviceTasks                                    2     2      0   10499
                                              6 BANK0h     2     2      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBWakeFromSuspend                                0     0      0    1283
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBSuspend                                        0     0      0    1283
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBStallHandler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_USBIncrement1msInternalTimers                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceInit                                     4     4      0     272
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) i1_USBCtrlEPService                                  3     3      0    6332
                                              5 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfSetupHandler                            0     0      0    6103
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckStdRequest                                0     0      0    4728
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBStdSetCfgHandler                               4     4      0    1645
                                             10 COMMON     4     4      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetStatusHandler                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdFeatureReqHandler                           7     7      0    1754
                                             10 COMMON     2     2      0
                                              0 BANK1      5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    1283
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) i1_USBCheckCDCRequest                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_CDCInitEP                                         0     0      0     481
                i1_USBEnableEndpoint
 ---------------------------------------------------------------------------------
 (14) i1_USBEnableEndpoint                                 6     5      1     481
                                              4 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) i1_USBConfigureEndpoint                              4     3      1     274
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceInit
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
               _USBCheckCDCRequest
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
           _USBCheckCDCRequest
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
       _USBCheckCDCRequest
   _cmd_rx_buf_get_task
   _cmd_rx_buf_put_task
   _cmd_task
   _cmd_tx_buffer_task
     _USBTransferOnePacket
   _gpio_init

 _INTERRUPT_InterruptManager (ROOT)
   i1_USBDeviceTasks
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h            8      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h               8      8       8       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      8      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10     10      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            10      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               10      C      10      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      8      10      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      4E      15       97.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      18      17       30.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      40      19       80.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Sep 18 23:25:37 2017

          cmd_rx_buf_put_task@PT_YIELD_FLAG 0164                                  _USB_SD_Ptr 1909  
                                         pc 0002                                 __CFG_CP$OFF 0000  
                                        l40 1A9A                               _USBDeviceInit 0A94  
                        __size_of_CDCInitEP 0017                                 __CFG_LVP$ON 0000  
    i1USER_USB_CALLBACK_EVENT_HANDLER@event 0058        USER_USB_CALLBACK_EVENT_HANDLER@event 016A  
    i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 005A        USER_USB_CALLBACK_EVENT_HANDLER@pdata 016C  
                                       l145 19CF                                         l420 17B5  
                                       l333 09EA                 __end_of_USBStdGetDscHandler 1D62  
                                       l407 168F                                         l343 0A36  
                                       l520 1794                                         l184 0A93  
                                       l344 0A72                                         l345 0A6F  
                                       l435 1F70                                         l532 087A  
                                       l382 19FB                                         l534 087B  
                                       l543 089D                                         l631 0003  
                                       l472 1AED                                         l475 1B30  
                                       l476 1AF5                                         l477 1AF8  
                                       l493 0C13                                         l823 0548  
                                       l568 0990                                         l738 021F  
                                       l692 08B4                                         _BDT 0020  
                                       l782 03D8                                         l951 006F  
                                       l687 0005                                         l928 00B9  
                                       l971 006D                                         l965 0005  
                                       _UIE 0E92                                         _UIR 0E90  
                  i1_USBStdGetStatusHandler 1A9B                                  _USBSuspend 0BF3  
                      USBStdSetCfgHandler@i 01E3                        USBStdSetCfgHandler@p 01E0  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                            _USBDeviceTasks 09D0                                __CFG_IESO$ON 0000  
                            _USBDeviceState 026D                       ??_cmd_rx_buf_put_task 0160  
                                      S8543 070E                                        S8545 1800  
                                      S8537 0800                       ??_USBCtrlTrfRxService 0162  
                  USBEnableEndpoint@options 0164                  USBConfigureEndpoint@handle 0163  
                                      l5301 169B                                        l4511 1A6D  
                                      l4503 1A62                                        l4521 1A81  
                                      l6201 004E                                        l4443 1BEF  
                                      l4515 1A74                                        l6211 0066  
                                      l6203 0052                                        l5341 1F8D  
                                      l5325 1F59                                        l4445 1BF8  
                                      l4533 1A90                                        l5309 16A3  
                                      l6301 0178                                        l6221 007D  
                                      l6213 006E                                        l6205 0054  
                                      l4527 1A8C                                        l6311 0194  
                                      l6303 017A                                        l6223 0083  
                                      l6215 0075                                        l6207 0058  
                                      l5353 1FCD                                        l4473 1BC0  
                                      l6401 02C4                                        l6321 01B0  
                                      l6313 019C                                        l6305 0182  
                                      l6233 009B                                        l6225 0087  
                                      l6209 0060                                        l6217 0078  
                                      l5611 1752                                        l5339 1F78  
                                      l5283 1658                                        l6411 02E6  
                                      l6403 02C9                                        l6331 01D4  
                                      l6323 01C0                                        l6315 019E  
                                      l6307 018A                                        l6251 00E9  
                                      l6243 00BF                                        l6235 00AB  
                                      l6227 0089                                        l6219 007B  
                                      l6171 0002                                        l4661 17D2  
                                      l5621 1776                                        l4469 1BBA  
                                      l4901 1D52                                        l4813 1703  
                                      l5269 1644                                        l8013 09FB  
                                      l6501 03EC                                        l6421 0300  
                                      l6413 02E8                                        l6405 02D2  
                                      l6333 01E4                                        l6325 01C2  
                                      l6317 01A7                                        l6309 018C  
                                      l6341 01FA                                        l6261 010A  
                                      l6253 00F5                                        l6245 00CF  
                                      l6237 00AD                                        l6229 0092  
                                      l6181 0015                                        l6173 0005  
                                      l4671 17E9                                        l5279 1654  
                                      l8031 0A17                                        l8007 09F6  
                                      l6511 040E                                        l6503 03F8  
                                      l6431 0313                                        l6423 0301  
                                      l6407 02D8                                        l6351 0217  
                                      l6343 0200                                        l6335 01E6  
                                      l6327 01CB                                        l6271 011E  
                                      l6263 010D                                        l6415 02EC  
                                      l6255 00F7                                        l6247 00D1  
                                      l6239 00B6                                        l6191 0038  
                                      l6183 001D                                        l6175 0007  
                                      l4649 17B1                                        l5625 1787  
                                      l5609 174F                                        l4489 1A4F  
                                      l4905 1D55                                        l4817 1716  
                                      l6601 054D                                        l6513 0417  
                                      l6505 03FD                                        l6441 0335  
                                      l6433 031B                                        l6425 0305  
                                      l6417 02F2                                        l6521 042D  
                                      l6409 02E0                                        l6361 0244  
                                      l6353 021B                                        l6345 0201  
                                      l6337 01F6                                        l6281 013A  
                                      l6273 0120                                        l6265 010E  
                                      l6257 00FD                                        l6249 00DD  
                                      l6193 003B                                        l6177 000F  
                                      l8019 0A0B                                        l6611 0575  
                                      l6603 0556                                        l6523 0432  
                                      l6515 041D                                        l6507 0402  
                                      l6451 0351                                        l6443 0337  
                                      l6435 0323                                        l6427 0309  
                                      l6419 02FD                                        l6363 0249  
                                      l6355 021D                                        l6347 0207  
                                      l6339 01F8                                        l6291 0156  
                                      l6283 0142                                        l6275 0128  
                                      l6267 0112                                        l6259 00FF  
                                      l6195 003D                                        l6187 0026  
                                      l4669 17E4                                        l5629 179A  
                                      l4781 0B38                                        l4765 0B15  
                                      l8045 0A2E                                        l8037 0A1D  
                                      l6621 05A0                                        l6613 0581  
                                      l6605 055E                                        l6541 047E  
                                      l6533 045E                                        l6525 044A  
                                      l6517 0425                                        l6509 040A  
                                      l6461 036D                                        l6453 0359  
                                      l6445 033F                                        l6437 0325  
                                      l6429 0311                                        l6373 0267  
                                      l6365 0251                                        l6357 0233  
                                      l6349 020F                                        l6293 015E  
                                      l6285 0144                                        l6277 0130  
                                      l6269 0116                                        l6197 0043  
                                      l6189 0036                                        l4679 17FB  
                                      l5583 1F27                                        l8071 0A5D  
                                      l8055 0A3C                                        l6703 06C2  
                                      l6631 05EC                                        l6623 05A2  
                                      l6615 0585                                        l6607 055F  
                                      l6551 049F                                        l6543 0486  
                                      l6535 046E                                        l6527 044C  
                                      l6471 038F                                        l6463 0375  
                                      l6455 035B                                        l6447 0347  
                                      l6439 032D                                        l6391 02AF  
                                      l6383 028B                                        l6375 0277  
                                      l6367 0255                                        l6359 023F  
                                      l6295 0166                                        l6287 014C  
                                      l6279 0132                                        l6199 0048  
                                      l5903 1C8D                                        l4881 1CF1  
                                      l8073 0A69                                        l8065 0A4F  
                                      l6713 06EF                                        l6705 06DB  
                                      l6641 060D                                        l6633 05F4  
                                      l6625 05E2                                        l6617 0590  
                                      l6609 0561                                        l6561 04C5  
                                      l6553 04A8                                        l6545 048A  
                                      l6537 0470                                        l6529 0455  
                                      l6481 03AF                                        l6473 0391  
                                      l6465 037D                                        l6457 0363  
                                      l6449 0349                                        l6393 02B5  
                                      l6385 029B                                        l6377 0279  
                                      l6369 025E                                        l6297 0168  
                                      l6289 0154                                        l6801 0848  
                                      l5913 1CCE                                        l5595 1F57  
                                      l5579 1F21                                        l7531 0A7D  
                                      l4891 1D2F                                        l4883 1CFA  
                                      l7611 1AE9                                        l6803 08AD  
                                      l6723 071C                                        l6715 0708  
                                      l6707 06DD                                        l6651 062D  
                                      l6635 05F6                                        l6627 05E4  
                                      l6571 04E7                                        l6563 04C9  
                                      l6555 04B0                                        l6547 0493  
                                      l6539 0475                                        l6619 059B  
                                      l6491 03C0                                        l6483 03B1  
                                      l6475 039A                                        l6467 037F  
                                      l6459 036B                                        l6395 02BA  
                                      l6387 029D                                        l6379 0282  
                                      l6299 0170                                        l5915 1CE3  
                                      l8083 0000                                        l5597 1732  
                                      l7517 1B9D                                        l7533 0A7F  
                                      l4893 1D32                                        l4877 1CE8  
                                      l7621 1B09                                        l6901 003D  
                                      l6821 0002                                        l6805 08AD  
                                      l6733 0749                                        l6725 0735  
                                      l6717 070A                                        l6709 06E6  
                                      l6661 0651                                        l6653 0636  
                                      l6645 0616                                        l6629 05EA  
                                      l6581 0508                                        l6573 04EF  
                                      l6565 04D2                                        l6557 04B4  
                                      l6549 049B                                        l6493 03C8  
                                      l6477 03A0                                        l6469 0387  
                                      l6485 03B3                                        l6397 02BD  
                                      l6389 02AD                                        l6637 05FD  
                                      l8093 1209                                        l7711 0997  
                                      l7703 0984                                        l7631 1B25  
                                      l7607 1E36                                        l6911 0068  
                                      l6831 0018                                        l6823 0005  
                                      l6743 0776                                        l6735 0762  
                                      l6727 0737                                        l6719 0713  
                                      l6671 0672                                        l6663 065F  
                                      l6647 0626                                        l6639 0604  
                                      l6591 052A                                        l6583 0511  
                                      l6575 04F3                                        l6567 04DA  
                                      l6559 04BD                                        l6495 03D0  
                                      l6487 03B9                                        l6479 03A8  
                                      l6399 02C2                                        l7529 0A75  
                                      l7553 1E54                                        l6905 0046  
                                      l6841 0054                                        l6833 0021  
                                      l6825 0007                                        l6753 07A3  
                                      l6745 078F                                        l6737 0764  
                                      l6729 0740                                        l6681 068D  
                                      l6673 0677                                        l6657 063F  
                                      l6649 0628                                        l6665 0662  
                                      l6585 0519                                        l6577 04FC  
                                      l6569 04DE                                        l6497 03D4  
                                      l6489 03BA                                        l8521 0059  
                                      l7715 09B7                                        l7651 08C5  
                                      l4899 1D4F                                        l7731 0885  
                                      l6907 0048                                        l8531 00A7  
                                      l6851 0071                                        l6843 0059  
                                      l6835 0022                                        l6827 0010  
                                      l6771 07F6                                        l6763 07D0  
                                      l6755 07BC                                        l6747 0791  
                                      l6739 076D                                        l6683 0693  
                                      l6675 067B                                        l6667 0668  
                                      l6691 06A3                                        l6659 064F  
                                      l6595 0533                                        l6579 0504  
                                      l6587 051B                                        l6499 03D6  
                                      l8523 005E                                        l6931 000B  
                                      l8541 0A8E                                        l7717 09BD  
                                      l7557 1E4B                                        l7741 0891  
                                      l8533 005B                                        l6909 004B  
                                      l6861 0088                                        l6853 0078  
                                      l6845 005E                                        l6837 003D  
                                      l8525 0858                                        l6773 07FC  
                                      l6765 07E9                                        l6757 07BE  
                                      l6749 079A                                        l6693 06AA  
                                      l6685 069B                                        l6677 0680  
                                      l6669 066C                                        l6597 0543  
                                      l6589 0521                                        l6933 000D  
                                      l7911 1A00                                        l7671 0916  
                                      l7639 08B1                                        l7567 1DE6  
                                      l7559 1DDE                                        l7743 0892  
                                      l7727 0881                                        l8535 0060  
                                      l6871 00B2                                        l6863 008E  
                                      l6855 007A                                        l6847 0067  
                                      l6839 004D                                        l8527 0878  
                                      l6791 082D                                        l6775 0805  
                                      l6759 07C7                                        l6695 06AE  
                                      l6767 07EC                                        l6687 06A1  
                                      l6679 0684                                        l6599 0545  
                                      l5895 1C7E                                        l6943 0036  
                                      l6935 0021                                        l6927 0002  
                                      l7841 0AB6                                        l7825 0AA0  
                                      l7673 0919                                        l7665 08F5  
                                      l7649 08C3                                        l7585 1E02  
                                      l7753 08A8                                        l7729 0883  
                                      l7921 0C17                                        l8529 00A2  
                                      l6865 008F                                        l6857 0082  
                                      l6793 083D                                        l6777 080B  
                                      l6785 081B                                        l6769 07F3  
                                      l6697 06B0                                        l6937 0023  
                                      l6945 0039                                        l6929 0005  
                                      l6953 0049                                        l8539 0A81  
                                      l7739 088F                                        l6883 0002  
                                      l6867 0092                                        l6795 083F  
                                      l6787 0824                                        l6779 0813  
                                      l6699 06B9                                        l6955 0066  
                                      l6947 003B                                        l6939 002C  
                                      l7853 0ACB                                        l7693 095B  
                                      l7677 0929                                        l7765 0837  
                                      l6893 0015                                        l6885 0003  
                                      l6869 00B2                                        l6797 0842  
                                      l6957 0066                                        l6949 0043  
                                      l7687 0948                                        l7679 0935  
                                      l6895 001F                                        l6887 0005  
                                      l6799 0844                                _usb_rx_buf_0 0120  
                                      l7689 094F                                        l6897 0021  
                                      l6889 000E                                _usb_rx_buf_1 0220  
                                      l7947 0BEF                                        l6899 0034  
                                      l7869 0ADE                                        l7965 0BB6  
                                      l7949 0BF1                                        l7895 19EB  
                                      l7967 0BB7                                        l7969 0BB9  
                                      l7993 09E4                                        l7985 09DD  
                                      _LATA 010C                                        _LATC 010E  
                                      u6000 069A                                        u6001 0699  
                                      u6010 06AA                                        u4315 1F6B  
                                      u6011 06A9                                        u6100 07FC  
                                      u6020 06C1                                        u5300 009A  
                                      u6101 07FB                                        u6021 06C0  
                                      u5301 0099                                        u6110 080B  
                                      u6030 06EE                                        u5310 00BE  
                                      u5230 0014                                        u6111 080A  
                                      u6031 06ED                                        u5311 00BD  
                                      u5231 0013                                        u6120 0812  
                                      u6040 071B                                        u5400 019C  
                                      u5320 00FD                                        u5240 0025  
                                      u6200 000B                                        u6121 0811  
                                      u6041 071A                                        u5401 019B  
                                      u5321 00FC                                        u5241 0024  
                                      u6201 000A                                        u6130 082C  
                                      u6050 0748                                        u5410 01AF  
                                      u5330 011E                                        u5250 0043  
                                      u6210 0035                                        u6131 082B  
                                      u6051 0747                                        u5411 01AE  
                                      u5331 011D                                        u5251 0042  
                                      u6211 0034                                        u6140 0017  
                                      u6060 0775                                        u5500 02AD  
                                      u5420 01D3                                        u5340 0130  
                                      u5260 004E                                        u6220 0048  
                                      u6141 0016                                        u6061 0774  
                                      u5501 02AC                                        u5421 01D2  
                                      u5341 012F                                        u5261 004D  
                                      u6221 0047                                        u6150 0070  
                                      u6070 07A2                                        u5510 02B5  
                                      u5430 01F6                                        u5350 0142  
                                      u5270 0066                                        u6151 006F  
                                      u6071 07A1                                        u5511 02B4  
                                      u5431 01F5                                        u5351 0141  
                                      u5271 0065                                        i1l40 1A4E  
                                      u6160 0087                                        u6080 07CF  
                                      u5600 0335                                        u5520 02BA  
                                      u5440 0200                                        u5360 0154  
                                      u5280 006D                                        u6161 0086  
                                      u6081 07CE                                        u5601 0334  
                                      u5521 02B9                                        u5441 01FF  
                                      u5361 0153                                        u5281 006C  
                                      u6170 008E                                        u6090 07F3  
                                      u5610 0347                                        u5530 02C2  
                                      u5450 0217                                        u5370 0166  
                                      u5290 0083                                        u3595 170D  
                                      u6171 008D                                        u6091 07F2  
                                      u5611 0346                                        u5531 02C1  
                                      u5451 0216                                        u5371 0165  
                                      u5291 0082                                        u6180 0014  
                                      u5700 03EC                                        u5620 0359  
                                      u5540 02C9                                        u5460 0233  
                                      u5380 0178                                        u6181 0013  
                                      u5701 03EB                                        u5621 0358  
                                      u5541 02C8                                        u5461 0232  
                                      u5381 0177                                        u6190 0045  
                                      u5710 040A                                        u5630 036B  
                                      u5550 02D8                                        u5470 0251  
                                      u5390 018A                                        u6191 0044  
                                      u5711 0409                                        u5631 036A  
                                      u5551 02D7                                        u5471 0250  
                                      u5391 0189                                        u5800 04C9  
                                      u5720 041D                                        u5640 037D  
                                      u5560 02DF                                        u5480 0266  
                                      u5801 04C8                                        u5721 041C  
                                      u5705 03E8                                        u5641 037C  
                                      u5561 02DE                                        u5481 0265  
                                      u5465 022F                                        u5810 04DE  
                                      u5730 0424                                        u5650 038F  
                                      u5570 02F2                                        u5490 028A  
                                      u5811 04DD                                        u5731 0423  
                                      u5651 038E                                        u5571 02F1  
                                      u5491 0289                                        u5900 05EA  
                                      u5820 04F3                                        u5740 0432  
                                      u5660 03A0                                        u5580 0311  
                                      u5901 05E9                                        u5821 04F2  
                                      u5741 0431                                        u5661 039F  
                                      u5581 0310                                        u5910 05FC  
                                      u5830 0508                                        u5750 045D  
                                      u5670 03A7                                        u5590 0323  
                                      i1l95 0010                                        u5911 05FB  
                                      u5831 0507                                        u5751 045C  
                                      u5671 03A6                                        u5591 0322  
                     ??_USBCtrlTrfTxService 0160                                        u5920 0604  
                                      u5840 0521                                        u5760 0475  
                                      u5680 03B9                                        u5921 0603  
                                      u5841 0520                                        u5761 0474  
                                      u5681 03B8                                        u5930 0615  
                                      u5850 0532                                        u5770 048A  
                                      u5690 03D0                                        u5931 0614  
                                      u5851 0531                                        u5771 0489  
                                      u5691 03CF                                        u5940 063E  
                                      u5860 054D                                        u5780 049F  
                                      u5941 063D                                        u5861 054C  
                                      u5781 049E                                        u5950 0668  
                                      u5870 0575                                        u5790 04B4  
                                      u5951 0667                                        u5871 0574  
                                      u5791 04B3                                        _UCFG 0E91  
                                      u5960 0672                                        u5880 0585  
                                      u5961 0671                                        u5881 0584  
                                      u5970 0677                                        u5890 05A0  
                                      u5971 0676                                        u5891 059F  
                                      u5875 0571                                        u5980 0680  
                                      _UEP0 0E98                                        u5981 067F  
                                      _UEP1 0E99                                        u5990 0693  
                                      u5991 0692                                        _UEIE 0E97  
                                      _UEIR 0E93                                        _UCON 0E8E  
                              ?i1_CDCInitEP 0070                                        _WPUA 020C  
           i1USBCtrlTrfTxService@byteToSend 0072                                _usb_tx_buf_0 00A0  
                              _usb_tx_buf_1 01A0                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000    i1USBStdFeatureReqHandler@current_ep_data 00EA  
    USBStdFeatureReqHandler@current_ep_data 01E4                                        _pDst 02DC  
                                      _main 11F7                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                             _USBDeviceAttach 19EB  
                                      btemp 007E                               __CFG_BOREN$ON 0000  
                   ?i1_USBCtrlTrfOutHandler 0070                           _current_rx_handle 02E9  
                                      start 0012              __size_ofi1_USBCtrlTrfRxService 0090  
             __end_ofi1_USBCtrlTrfRxService 1F21                  __end_of_USBCheckStdRequest 08B1  
                    ??_USBCtrlTrfOutHandler 0166                               __CFG_MCLRE$ON 0000  
                       USBDeviceInit@i_1358 0162                   ??_USBStdFeatureReqHandler 01E0  
            __size_ofi1_USBCtrlTrfTxService 0058                       i1_USBStdGetDscHandler 1C01  
             __end_ofi1_USBCtrlTrfTxService 1644                    ??_USBStdGetStatusHandler 0160  
                            ?_USBDeviceInit 0070              __size_of_OSCILLATOR_Initialize 000A  
             __end_of_OSCILLATOR_Initialize 19D3                                       ?_main 0070  
                i1USBEnableEndpoint@options 0074                               __CFG_WDTE$OFF 0000  
         __size_of_USBCtrlEPServiceComplete 008D                cmd_task@compare_data_matches 02EB  
                    __end_of_USBDeviceTasks 0A75                   ?_USBCtrlEPServiceComplete 0070  
                      i1_USBCheckStdRequest 0C4F                                       i1l420 1602  
                                     i1l333 0DD4                                       i1l407 14F2  
                                     i1l343 0E20                                       i1l520 15E3  
                                     i1l184 0E81                                       i1l344 0E5D  
                                     i1l435 1EA4                                       i1l532 0C9B  
                                     i1l534 0C56                                       i1l543 0C7C  
                                     i1l472 1A9F                                       i1l475 1ADF  
                                     i1l476 1AA7                                       i1l477 1AAA  
                                     i1l493 0FF9                                       i1l568 0D7A  
                                     _UADDR 0E96                                       _PORTC 000E  
                                     u694m0 0BB2                                       _TRISA 008C  
                                     _TRISC 008E                                       _USTAT 0E8F  
                                i1memset@p1 0070          __size_of_USBCtrlEPAllowStatusStage 006B  
           __end_of_USBCtrlEPAllowDataStage 1732                                       _sd000 190F  
                                     _sd001 18E5                                       _sd002 18CF  
   __end_ofi1_USBIncrement1msInternalTimers 0FB7    __size_ofi1_USBIncrement1msInternalTimers 0012  
         ??i1_USBIncrement1msInternalTimers 0070            ?i1_USBIncrement1msInternalTimers 0070  
            ?_USBIncrement1msInternalTimers 0070             i1_USBIncrement1msInternalTimers 0FA5  
                            _WDT_Initialize 19E8            __end_ofi1_USBCtrlTrfSetupHandler 0C4F  
                         __end_of_CDCInitEP 1BB4              __end_ofi1_USBCtrlTrfOutHandler 1E91  
                                     status 0003                                       wtemp0 007E  
               __size_of_cmd_tx_buffer_task 0000                            __end_ofi1_memset 1DDE  
        __size_ofi1_USBCtrlEPAllowDataStage 0059                   __size_ofi1_USBDeviceTasks 00A6  
                ?i1_USBCtrlEPAllowDataStage 0070                __size_of_USBStdSetCfgHandler 0069  
                           __initialization 0014                                __end_of_main 0708  
                            __CFG_LPBOR$OFF 0000                 ?_INTERRUPT_InterruptManager 0070  
                 __size_of_USBCtrlEPService 0041                                      ??_main 0170  
                     ?i1_USBCheckStdRequest 0070                             ?_USBDeviceTasks 0070  
                               ?_USBSuspend 0070                         __CFG_USBLSCLK$48MHz 0000  
                           i1_USBDeviceInit 0F29                      __end_of_WDT_Initialize 19EB  
                   __end_of_USBDeviceAttach 1A04                                      _ACTCON 039B  
                                    i1S8553 1000                                      i1S8555 1846  
                                    i1S8547 081A                                      _APFCON 011D  
                                    _ANSELA 018C                                      _ANSELC 018E  
                                    i1l5103 1D83                                      i1l5033 0EA5  
                                    i1l5221 0D03                                      i1l5213 0CDF  
                                    i1l5133 1C0A                                      i1l5125 1DB6  
                                    i1l5151 1C5E                                      i1l5143 1C3F  
                                    i1l5135 1C13                                      i1l6007 0FD3  
                                    i1l5241 0D45                                      i1l5225 0D13  
                                    i1l5153 1C61                                      i1l5145 1C42  
                                    i1l5065 155B                                      i1l6009 0FD5  
                                    i1l5251 0D6E                                      i1l5235 0D32  
                                    i1l5227 0D1F                                      i1l5219 0D00  
                                    i1l6043 0F1A                                      i1l6027 0FFD  
                                    i1l7003 0DE0                                      i1l4461 1B94  
                                    i1l5237 0D39                                      i1l5157 1C64  
                                    i1l5085 1D69                                      i1l5069 156E  
                                    i1l5421 14BD                                      i1l6045 0F1C  
                                    i1l5263 0DA1                                      i1l6047 0F1F  
                                    i1l7015 0DF5                                      i1l4481 1B56  
                                    i1l5265 0DA7                                      i1l5169 1ABA  
                                    i1l5425 14C1                                      i1l7041 0E18  
                                    i1l7033 0E07                                      i1l7009 0DE5  
                                    i1l4459 1B8B                                      i1l5259 0D81  
                                    i1l5179 1AD4                                      i1l5531 0C71  
                                    i1l5515 0C5C                                      i1l5443 14FE  
                                    i1l5451 1507                                      i1l7027 0E01  
                                    i1l4725 15FE                                      i1l4485 1B5C  
                                    i1l4573 1A21                                      i1l4565 1A16  
                                    i1l5197 0CAE                                      i1l5541 0C87  
                                    i1l5517 0C5F                                      i1l7061 0E40  
                                    i1l5703 15D7                                      i1l4583 1A35  
                                    i1l5199 0CB0                                      i1l5527 0C6C  
                                    i1l5519 0C62                                      i1l7047 0E25  
                                    i1l4737 161A                                      i1l4745 162B  
                                    i1l5481 1EA9                                      i1l4577 1A28  
                                    i1l5529 0C6F                                      i1l5545 0C91  
                                    i1l4747 162F                                      i1l4755 1640  
                                    i1l5707 15E9                                      i1l5483 1EBA  
                                    i1l4595 1A44                                      i1l4691 0E61  
                                    i1l4763 1DCB                                      i1l7067 0E4E  
                                    i1l5661 1E65                                      i1l4589 1A40  
                                    i1l4693 0E64                                      i1l7069 0E5A  
                                    i1l5495 1EF3                                      i1l4759 1DD4  
                                    i1l5673 1E8F                                      i1l4697 0E67  
                                    i1l5687 15A3                                      i1l5689 15A6  
                                    i1l5945 0F48                                      i1l5929 0F34  
                                    i1l5699 15C8                                      i1l5973 0F6E  
                                    i1l5957 0F5C                                      i1l8551 0E7C  
                                    i1l8549 0E6F                                      i1l6981 0DC7  
                                    i1l6989 0DCE                                      u444_25 1EA0  
                                    _OSCCON 0099                                      u394_25 1565  
                                    _PLLRDY 04D6                                      _WDTCON 0097  
                            _usb_rx_pp_size 02C0                            __end_of_cmd_task 0000  
                            __CFG_PWRTE$OFF 0000                           _shortPacketStatus 02DD  
         __end_ofi1_USBCtrlEPAllowDataStage 1588                      ?i1_USBStdGetDscHandler 0070  
                           USBDeviceTasks@i 01EB                 USBStdFeatureReqHandler@pUEP 01E2  
                  USBTransferOnePacket@data 0161                  USBCtrlTrfInHandler@lastDTS 0165  
                           ??_USBDeviceInit 0160                              __CFG_STVREN$ON 0000  
             __size_ofi1_USBWakeFromSuspend 0017                           _USBEnableEndpoint 1BB4  
           __size_of_USBStdGetStatusHandler 0051                     ??i1_USBStdSetCfgHandler 007A  
                                    _memset 1E47               __size_ofi1_USBCheckCDCRequest 004B  
                      i1USBEnableEndpoint@p 0077                          ?_USBEnableEndpoint 0164  
             __size_of_USBTransferOnePacket 0077                             ?_WDT_Initialize 0070  
                             main@rx_get_pt 0262                         ??_USBEnableEndpoint 0165  
              i1USBConfigureEndpoint@handle 0073                  __end_ofi1_USBCtrlEPService 0F29  
                               _CtrlTrfData 0060                               main@rx_put_pt 0264  
                         i1_USBStallHandler 0FB7                        _controlTransferState 026C  
                            cmd_task@status 02C2                           _SYSTEM_Initialize 19C0  
                   __end_of__initialization 0063                          ?i1_USBStallHandler 0070  
                  i1_USBCtrlTrfSetupHandler 0C1A                        __size_ofi1_CDCInitEP 0016  
                        ?_SYSTEM_Initialize 0070                    __size_of_USBStallHandler 0020  
                            __pcstackBANK0h 0058                      i1USBCtrlTrfRxService@i 0074  
                       __size_of_USBSuspend 0010                              __pcstackCOMMON 0070  
                 __end_of_USBEnableEndpoint 1BD1                         ??i1_USBStallHandler 0070  
                             __end_of_sd000 1913                               __end_of_sd001 18F7  
                             __end_of_sd002 18E5                  ??i1_USBStdGetStatusHandler 0070  
                              __pidataBANK4 0000                                __pidataBANK5 0000  
                              __pidataBANK6 0000                         ??_SYSTEM_Initialize 0164  
          __size_of_USBCtrlEPAllowDataStage 0061               __size_of_USBConfigureEndpoint 0030  
                   __end_ofi1_USBDeviceInit 0FA5                 __end_of_USBCtrlTrfInHandler 179D  
                    ??i1_USBCheckStdRequest 007E                              _OPTION_REGbits 0095  
                cmd_task@last_phase_overlay 0164                                   ?i1_memset 0070  
                 __end_ofi1_USBStallHandler 0FD7                    ??_USBCtrlTrfSetupHandler 0170  
                   _USBTicksSinceSuspendEnd 02D1                            ?_USBDeviceAttach 0070  
                 __end_of_SYSTEM_Initialize 19C9                      _USBStdGetStatusHandler 1AE9  
                                __pbssBANK1 00E0                                  __pbssBANK3 01EC  
                                __pbssBANK4 0268                                  __pbssBANK5 02A0  
                                __pbssBANK6 0320                                  __pbssBANK7 03A0  
               __end_of_cmd_rx_buf_get_task 0000                          __size_of_gpio_init 0000  
                      cmd_task@byte_to_send 02C4                            i1_USBDeviceTasks 0DBA  
               __size_of_USBWakeFromSuspend 0017                               ?i1_USBSuspend 0070  
                               _pBDTEntryIn 02A7            __end_of_USBCtrlEPServiceComplete 16D1  
                     i1_USBCtrlTrfInHandler 1588                ??i1_USBCtrlEPServiceComplete 0075  
               __size_of_USBCheckCDCRequest 004C                                  __pmaintext 11F7  
                      USBCtrlTrfRxService@i 0164                             __CFG_PLLMULT$3x 0000  
                                __pintentry 0004                __size_ofi1_USBEnableEndpoint 001D  
                                   ?_memset 0160                                  _device_dsc 18F7  
                          _USBCtrlEPService 0B80                                  _ep_data_in 02B6  
           cmd_task@last_phase_overlay_2365 0165             cmd_task@last_phase_overlay_2368 016B  
               __end_of_cmd_rx_buf_put_task 0000                 __end_of_USBCtrlTrfRxService 2000  
                        _USBCheckStdRequest 086A                           _configDescriptor1 188C  
                     cmd_rx_buf_get_task@pt 0162                                  ??i1_memset 0076  
               __end_of_USBCtrlTrfTxService 1800                         _USBStdSetCfgHandler 1DDE  
                                 ?_cmd_task 0070                                     _OSCTUNE 0098  
                                   u496_2m0 0F16                         ?_USBCheckStdRequest 0070  
              __size_of_USBStdGetDscHandler 007A                                     _UIEbits 0E92  
       __size_ofi1_USBCtrlEPServiceComplete 0082                                     _UIRbits 0E90  
                             _cdc_trf_state 02DE                              ??i1_USBSuspend 007A  
               ??i1_USBCtrlEPAllowDataStage 0073             ??_USBIncrement1msInternalTimers 0160  
                      ?_USBStdSetCfgHandler 0070                                   _CDCInitEP 1B9D  
              i1USBCtrlTrfInHandler@lastDTS 0075                  __size_of_USBEnableEndpoint 001D  
                      ??_USBCheckStdRequest 0170                       i1_USBCtrlTrfRxService 1E91  
             __size_of_USBCtrlTrfOutHandler 0038                            ??_USBDeviceTasks 01EA  
                         ??_USBStallHandler 0160                            ?i1_USBDeviceInit 0070  
                     i1_USBCtrlTrfTxService 15EC                             __size_of_memset 0017  
                 __end_of_configDescriptor1 18CF                                     __ptext1 0000  
                                   __ptext2 0000                                     __ptext3 1C71  
                                   __ptext4 0000                                     __ptext5 0000  
                                   __ptext6 0000                                     __ptext7 09D0  
                                   __ptext8 0C03                                     __ptext9 0BF3  
                                   _inPipes 00E0                           __end_of_gpio_init 0000  
           cmd_tx_buffer_task@usb_tx_handle 02B9                 _USBDeferOUTDataStagePackets 02D2  
                     _OSCILLATOR_Initialize 19C9                                ??_USBSuspend 0170  
           cmd_tx_buffer_task@PT_YIELD_FLAG 016C                    ??_PIN_MANAGER_Initialize 0160  
                                ??_cmd_task 0160                       i1USBEnableEndpoint@ep 0079  
                __size_ofi1_USBStallHandler 0020                          __end_of_USB_CD_Ptr 1915  
                __size_of_SYSTEM_Initialize 0009             __size_of_USBCtrlTrfSetupHandler 0033  
                                   clrloop0 07F9                    ??i1_USBConfigureEndpoint 0071  
                      end_of_initialization 0063                  __end_of_cmd_tx_buffer_task 0000  
                        __end_of_USB_SD_Ptr 190F                         _pBDTEntryEP0OutNext 01EC  
                                   memset@c 0162                                     memset@n 0164  
                                   memset@p 0166                                  cmd_task@pt 016D  
                           _USB1msTickCount 0320             _dummy_encapsulated_cmd_response 0324  
                   ??i1_USBStdGetDscHandler 0070                    ?_USBStdFeatureReqHandler 0070  
                    ?i1_USBCtrlTrfInHandler 0070                       ??_USBStdSetCfgHandler 0170  
                                ?_CDCInitEP 0070                       cmd_task@PT_YIELD_FLAG 0163  
                        __end_of_USBSuspend 0C03                     _USBCtrlEPAllowDataStage 16D1  
                                   psplit$0 1D0065                                     psplit$1 650066  
                                   psplit$2 660067                        cmd_tx_buffer_task@pt 016D  
                  _USBCtrlEPServiceComplete 1644                  _USBStatusStageEnabledFlag1 02D5  
                _USBStatusStageEnabledFlag2 02D4                            ??_WDT_Initialize 0160  
                        USBEnableEndpoint@p 0167              __size_ofi1_USBStdSetCfgHandler 0065  
                       cmd_task@actual_data 02C7               __end_ofi1_USBStdSetCfgHandler 1DC7  
                 i1_USBCtrlEPAllowDataStage 152F                            __CFG_FOSC$INTOSC 0000  
                   cmd_task@bit_to_set_2364 0168                          _BothEP0OutUOWNsSet 02D8  
                ??i1_USBCtrlTrfSetupHandler 007E                   USBStdSetCfgHandler@i_2033 01E2  
                      pnum$maintext_split_1 0065                        pnum$maintext_split_2 0066  
                      pnum$maintext_split_3 0067                __end_ofi1_USBWakeFromSuspend 1000  
                 USBConfigureEndpoint@EPNum 0162                ?i1_USBCtrlEPAllowStatusStage 0070  
                ?_USBCtrlEPAllowStatusStage 0070                __end_ofi1_USBCheckCDCRequest 1A4F  
                                _usb_rx_buf 026E       i1USER_USB_CALLBACK_EVENT_HANDLER@size 005C  
       USER_USB_CALLBACK_EVENT_HANDLER@size 016E                                  _usb_tx_buf 02ED  
                                _usb_rx_ptr 00E7                                   _USTATcopy 01EF  
                                _usb_tx_ptr 026A                                  main@cmd_pt 0266  
              __end_of_USBTransferOnePacket 1CE8          __end_ofi1_USBCtrlEPServiceComplete 152F  
                i1_USBCtrlEPServiceComplete 14AD                           _usb_rx_pp_get_ptr 02BE  
                        i1_USBCtrlEPService 0EE3                          __CFG_PLLEN$ENABLED 0000  
                     i1USBDeviceInit@i_1358 0072                      ?i1_USBCtrlTrfRxService 0070  
                    _USBCtrlTrfSetupHandler 0837                      ?i1_USBCtrlTrfTxService 0070  
                     __end_of_USBDeviceInit 0B15       __end_of_USBIncrement1msInternalTimers 0BD3  
    __size_of_USBIncrement1msInternalTimers 0012               _USBIncrement1msInternalTimers 0BC1  
                         _usb_rx_pp_put_ptr 02BF                                   i1memset@c 0072  
                                 i1memset@n 0074                                   i1memset@p 0076  
                       ?i1_USBCtrlEPService 0070                      ?_OSCILLATOR_Initialize 0070  
                            __end_of_memset 1E5E                           _USBBusIsSuspended 02DA  
                      __end_ofi1_USBSuspend 0FE9                    __end_ofi1_USBDeviceTasks 0E60  
                       start_initialization 0014                     ?_USBStdGetStatusHandler 0070  
             USBCtrlTrfRxService@byteToRead 0165             __size_of_PIN_MANAGER_Initialize 0015  
                  ??i1_USBCtrlTrfOutHandler 0076                           __size_ofi1_memset 0017  
              __end_of_USBConfigureEndpoint 1C01             __end_of_USBStdFeatureReqHandler 09D0  
                       i1_USBEnableEndpoint 1B50             __size_ofi1_USBConfigureEndpoint 0030  
                             ??i1_CDCInitEP 007A           __end_of_USBCtrlEPAllowStatusStage 0B80  
                      ??i1_USBCtrlEPService 00ED               ??i1_USBCtrlEPAllowStatusStage 0070  
                  __end_of_USBCtrlEPService 0BC1               i1USBStdFeatureReqHandler@pUEP 00E8  
                 ??_USBCtrlEPAllowDataStage 0163                                 ??_CDCInitEP 016A  
                            USBDeviceInit@i 0163                              USBDeviceInit@p 0160  
               i1USBStdSetCfgHandler@i_2033 007C                      _pBDTEntryEP0OutCurrent 01EE  
        __size_ofi1_USBStdFeatureReqHandler 011E                     USBTransferOnePacket@dir 0160  
                   USBTransferOnePacket@len 0162                  ?i1_USBStdFeatureReqHandler 0070  
               i1USBConfigureEndpoint@EPNum 0072                         _USBStdGetDscHandler 1CE8  
                      ?i1_USBEnableEndpoint 0074                                 __pdataBANK4 026E  
                               __pdataBANK5 02E9                                 __pdataBANK6 032C  
                                  ??_memset 0166                               cmd_task@do0p0 00E6  
                             cmd_task@do0p1 00E5                               cmd_task@do1p0 02CC  
                             cmd_task@do1p1 02CB               __size_ofi1_USBCheckStdRequest 004D  
                    _USBActiveConfiguration 02E8              __end_of_USBStdGetStatusHandler 1B3A  
                                 ___latbits 0002                               __pcstackBANK1 00E8  
                             __pcstackBANK2 0160                               __pcstackBANK3 01E0  
              __size_of_USBCtrlTrfInHandler 006B                               __pcstackBANK4 0260  
         __size_ofi1_USBStdGetStatusHandler 004E                   ?i1_USBStdGetStatusHandler 0070  
                      ?_USBStdGetDscHandler 0070                           __size_of_cmd_task 0000  
                     cmd_rx_buf_put_task@pt 0165                  __end_of_USBWakeFromSuspend 0C1A  
                           _USBStallHandler 0BD3                                _pBDTEntryOut 02AD  
                __end_of_USBCheckCDCRequest 1A9B                    __size_of_USBDeviceAttach 0019  
                            _bytes_recieved 02BD                         __end_ofi1_CDCInitEP 1B50  
                    _PIN_MANAGER_Initialize 19D3                __size_of_cmd_rx_buf_get_task 0000  
                     ??i1_USBEnableEndpoint 0075                      i1_USBConfigureEndpoint 1B6D  
         __end_ofi1_USBStdFeatureReqHandler 0DBA                        i1_USBWakeFromSuspend 0FE9  
      __size_ofi1_USBCtrlEPAllowStatusStage 0061                        i1_USBCheckCDCRequest 1A04  
              ??_INTERRUPT_InterruptManager 007E                                   __pswtext1 0800  
                                 __pswtext2 070E                                   __pswtext3 1800  
                                 __pswtext4 081A                                   __pswtext5 1000  
                                 __pswtext6 1846                        _USBTransferOnePacket 1C71  
                                 _gpio_init 0000                __end_of_USBCtrlTrfOutHandler 1F59  
                     ??_USBStdGetDscHandler 0160                                 _ep_data_out 02B3  
           __size_ofi1_USBCtrlTrfOutHandler 0033                __size_of_cmd_rx_buf_put_task 0000  
              __size_of_USBCtrlTrfRxService 00A7               USBConfigureEndpoint@direction 0160  
           i1USBCtrlTrfRxService@byteToRead 0075                     ??i1_USBCtrlTrfInHandler 0073  
              __size_of_USBCtrlTrfTxService 0063                            _usb_rx_buf_array 0330  
                ??_USBCtrlEPServiceComplete 0165                                   clear_ram0 07F8  
                                  _PIE2bits 0092                                   cmd_task@i 02C9  
            __size_ofi1_USBStdGetDscHandler 0070               __end_ofi1_USBStdGetDscHandler 1C71  
       __size_of_INTERRUPT_InterruptManager 000E                                    _PIR2bits 0012  
                                  _UEP0bits 0E98                          _cmd_tx_buffer_task 0000  
                _USBDeferINDataStagePackets 02D3                       ?i1_USBWakeFromSuspend 0070  
               __size_of_USBCheckStdRequest 0047                                    _UCONbits 0E8E  
                     ?i1_USBCheckCDCRequest 0070                        _USBConfigureEndpoint 1BD1  
                     __size_ofi1_USBSuspend 0012            __size_of_USBStdFeatureReqHandler 011F  
                     ?_USBTransferOnePacket 0160                         ?_cmd_tx_buffer_task 0070  
                     cmd_task@expected_data 02C6                                    i1_memset 1DC7  
                          _usb_rx_pp_handle 032C                                _RemoteWakeup 02DB  
                                 main@tx_pt 0260                          cmd_task@bit_to_set 0167  
                                ?_gpio_init 0070                    __size_ofi1_USBDeviceInit 007C  
                   __end_of_USBStallHandler 0BF3                 ??_USBCtrlEPAllowStatusStage 0160  
               __end_of_USBStdSetCfgHandler 1E47                                 i1_CDCInitEP 1B3A  
                          _usb_tx_buf_array 0334                        ??_cmd_tx_buffer_task 016A  
                        __end_of_device_dsc 1909                     ??i1_USBCtrlTrfRxService 0072  
                         i1USBDeviceTasks@i 005F                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 0FD7  
                   USBStdGetStatusHandler@p 0160                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 0167                      i1_USBCtrlTrfOutHandler 1E5E  
                                  _SetupPkt 0050                                cmd_task@data 02C3  
                   ??_OSCILLATOR_Initialize 0160                       ?_USBConfigureEndpoint 0160  
                              cmd_task@mask 02C5                                pnum$maintext 001D  
                         ??_USBDeviceAttach 0160                   i1USBStdGetStatusHandler@p 0070  
                               _line_coding 02DF                       i1_USBStdSetCfgHandler 1D62  
                         ?i1_USBDeviceTasks 0070                     __size_of_USBDeviceTasks 00A5  
                                  _cmd_task 0000                                    __ptext10 0BD3  
                                  __ptext11 0BC1                                    __ptext20 1CE8  
                                  __ptext12 0B80                                    __ptext21 08B1  
                                  __ptext13 0837                                    __ptext30 1732  
                                  __ptext22 0A75                                    __ptext14 1644  
                                  __ptext31 179D                                    __ptext23 1A4F  
                                  __ptext15 16D1                                    __ptext40 0FE9  
                                  __ptext32 19C0                                    __ptext24 1B9D  
                                  __ptext16 086A                                    __ptext41 0FD7  
                                  __ptext33 19E8                                    __ptext25 1BB4  
                                  __ptext17 1DDE                                    __ptext50 1D62  
                                  __ptext42 0FB7                                    __ptext34 0A94  
                                  __ptext26 1BD1                                    __ptext18 1E47  
                                  __ptext51 1DC7                                    __ptext43 0FA5  
                                  __ptext35 19EB                                    __ptext27 1F21  
                                  __ptext19 1AE9                                    __ptext60 1E5E  
                                  __ptext52 1A9B                                    __ptext44 0F29  
                                  __ptext36 19D3                                    __ptext28 1F59  
                                  __ptext61 1E91                                    __ptext53 1C01  
                                  __ptext45 0EE3                                    __ptext37 19C9  
                                  __ptext29 0B15                                    __ptext62 0E82  
                                  __ptext54 0C9C                                    __ptext46 0C1A  
                                  __ptext63 1588                                    __ptext55 0E60  
                                  __ptext47 14AD                                    __ptext39 0DBA  
                                  __ptext64 15EC                                    __ptext56 1A04  
                                  __ptext48 152F                                    __ptext57 1B3A  
                                  __ptext49 0C4F                                    __ptext58 1B50  
                                  __ptext59 1B6D                          ??i1_USBDeviceTasks 005E  
            __end_of_USBCtrlTrfSetupHandler 086A                               __size_of_main F511  
                         ?_USBCtrlEPService 0070                           cmd_task@data_2366 016C  
                         cmd_task@data_2367 0169             i1USBConfigureEndpoint@direction 0070  
                        cmd_task@input_mask 0268                          ??_USBCtrlEPService 01E7  
                       _USBCtrlTrfInHandler 1732           __size_ofi1_USBCtrlTrfSetupHandler 0035  
                    ??i1_USBWakeFromSuspend 007A                   ?i1_USBCtrlTrfSetupHandler 0070  
                                  _outPipes 02A0                          cmd_task@loop_count 02BB  
               ??i1_USBStdFeatureReqHandler 007A                      ??i1_USBCheckCDCRequest 0070  
                      _USBCtrlTrfOutHandler 1F21                                    int$flags 007E  
                 _USBCtrlEPAllowStatusStage 0B15            __end_ofi1_USBStdGetStatusHandler 1AE9  
        __end_of_INTERRUPT_InterruptManager 0012                  _INTERRUPT_InterruptManager 0004  
                       cmd_task@status_sent 02C1                      ??_USBTransferOnePacket 0163  
                 _USBDeferStatusStagePacket 02D6                            i1USBDeviceInit@i 0073  
                          i1USBDeviceInit@p 0070                                  _INTCONbits 000B  
                      ?_USBCtrlTrfInHandler 0070                                 ??_gpio_init 0160  
                               _sie_configs 03A0               USBCtrlTrfTxService@byteToSend 0162  
                       _cmd_rx_buf_get_task 0000                                    memset@p1 0160  
                               cmd_task@cmd 02D0                                 cmd_task@op0 02CF  
                               cmd_task@op1 0166                                 cmd_task@sie 0269  
                               cmd_task@tmp 016A                            ?_USBStallHandler 0070  
                  USBStdFeatureReqHandler@p 01E5                     __size_of_WDT_Initialize 0003  
                                  intlevel1 0000                      __size_of_USBDeviceInit 0081  
               __size_ofi1_USBCtrlEPService 0046   __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0E82  
__size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0022     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0A94  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 001F          ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0058  
       ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007A           ??_USER_USB_CALLBACK_EVENT_HANDLER 0170  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 016A           i1_USER_USB_CALLBACK_EVENT_HANDLER 0E60  
           _USER_USB_CALLBACK_EVENT_HANDLER 0A75                           ??i1_USBDeviceInit 0070  
              __end_ofi1_USBCheckStdRequest 0C9C                     ?_PIN_MANAGER_Initialize 0070  
                         __CFG_CLKOUTEN$OFF 0000                           cmd_task@inout_cfg 02CA  
                   ?i1_USBConfigureEndpoint 0070                        ?_cmd_rx_buf_get_task 0070  
                    ??_USBConfigureEndpoint 0161                       ?_USBCtrlTrfOutHandler 0070  
                       _cmd_rx_buf_put_task 0000                        __CFG_CPUDIV$NOCLKDIV 0000  
                       _USBCtrlTrfRxService 1F59                          _USBWakeFromSuspend 0C03  
                   _USBStdFeatureReqHandler 08B1                      cmd_task@loop_is_active 02C8  
                        _USBCheckCDCRequest 1A4F                           cmd_task@num_bytes 02CD  
                       _USBCtrlTrfTxService 179D                               __pstringtext1 1909  
                             __pstringtext2 1913                               __pstringtext3 188C  
                             __pstringtext4 18CF                               __pstringtext5 18E5  
                             __pstringtext6 18F7                               __pstringtext7 190F  
                          cmd_task@gpio_dir 02EC                  i1USBStdFeatureReqHandler@p 00EB  
                    ?i1_USBStdSetCfgHandler 0070                      i1USBStdSetCfgHandler@i 007D  
                    i1USBStdSetCfgHandler@p 007A                         ?_USBWakeFromSuspend 0070  
                     ??_USBCtrlTrfInHandler 0163                       _USBAlternateInterface 02E6  
                       ?_USBCheckCDCRequest 0070                         USBEnableEndpoint@ep 0169  
                 i1_USBStdFeatureReqHandler 0C9C                             _endpoint_number 02D9  
                      ?_cmd_rx_buf_put_task 0070         __end_ofi1_USBCtrlEPAllowStatusStage 0EE3  
               i1_USBCtrlEPAllowStatusStage 0E82                        ?_USBCtrlTrfRxService 0070  
                          cmd_task@num_bits 02CE              __end_of_PIN_MANAGER_Initialize 19E8  
                  ?_USBCtrlEPAllowDataStage 0070                          _usb_rx_bytes_avail 026B  
                      ?_USBCtrlTrfTxService 0070              __size_ofi1_USBCtrlTrfInHandler 0064  
              _USBStatusStageTimeoutCounter 02D7               __end_ofi1_USBCtrlTrfInHandler 15EC  
            __end_ofi1_USBConfigureEndpoint 1B9D                        ??_USBWakeFromSuspend 0170  
               __end_ofi1_USBEnableEndpoint 1B6D                  USBTransferOnePacket@handle 0168  
                      ??_USBCheckCDCRequest 0160                                  _USB_CD_Ptr 1913  
                     ??_cmd_rx_buf_get_task 0160  
